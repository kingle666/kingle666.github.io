<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kingle</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/"/>
  <updated>2018-09-07T10:00:53.264Z</updated>
  <id>https://kingle.我爱你/</id>
  
  <author>
    <name>kingle</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql 问题总结</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/07/mysql-%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>https://kingle.我爱你/2018/09/07/mysql-问题总结/</id>
    <published>2018-09-07T09:58:57.000Z</published>
    <updated>2018-09-07T10:00:53.264Z</updated>
    
    <content type="html"><![CDATA[<p>###一、Can’t connect to MySQL server on ‘localhost’ (10061)<br>   不能连接到 localhost 上的mysql<br>分析：这说明“localhost”计算机是存在的，但在这台机器上却没提供MySQL服务。<br>需要启动这台机器上的MySQL服务,如果机子负载太高没空相应请求也会产生这个错误。<br>解决:既然没有启动那就去启动这台机子的mysql。如果启动不成功，多数是因为你的my.ini配置的有问题。重新配置其即可。<br>如果觉得mysql负载异常，可以到mysql/bin 的目录下执行mysqladmin -uroot -p123 processlist来查看mysql当前的进程。</p><p>###二、Unknown MySQL Server Host ‘localhosadst’ (11001)<br>    未知的MySQL服务器 localhosadst<br>分析：服务器 localhosasdst 不存在。或者根本无法连接<br>解决：仔细检查自己论坛下面的 ./config.inc.php 找到$dbhost重新设置为正确的mysql 服务器地址。</p><p>###三、Access denied for user: ‘roota@localhost’ (Using password: YES)<br>    用户 roota 访问 localhost 被拒绝（没有允许通过）<br>分析：造成这个错误一般数据库用户名和密码相对mysql服务器不正确<br>解决：仔细检查自己论坛下面的 ./config.inc.php 找到dbuser、</p><p>dbpw核实后重新设置保存即可。</p><p>###四、Access denied for user: ‘red@localhost’ to database ‘newbbs’<br>    用户 red 在localhost 服务器上没有权限操作数据库newbbs<br>分析：这个提示和问题三是不同的。那个是在连接数据库的时候就被阻止了，而这个错误是在对数据库进行操作时引起的。比如在select update等等。这个是因为该用户没有操作数据库相应的权力。比如select 这个操作在mysql.user.Select_priv里记录 Y 可以操作N 不可以操作。<br>解决：如果是自己的独立主机那么更新mysql.user 的相应用户记录，比如这里要更新的用户为red 。或者直接修改 ./config.inc.php 为其配置一个具有对数据库操作权限的用户<br>或者通过如下的命令来更新授权grant all privileges on dbname.* to ‘user‘@’localhost’ identified by ‘password’<br>提示：更新了mysql库中的记录一定要重启mysql服务器才能使更新生效<br>FLUSH PRIVILEGES;</p><p>###五、No Database Selected<br>    没有数据库被选择上<br>分析：产生的原因有两种<br>config.inc.php 里面dbname设置的不对。致使数据库根本不存在，所以在<br>db-&gt;select_db(dbname);时返回了false和上面问题四是一样的，数据库用户没有select权限，同样会导致这样的错误。当你发现config.inc.php的设置没有任何问题，但还是提示这个错误，那一定就是这种情况了。解决：对症下药打开config.inc.php找到</p><p>dbname核实重新配置并保存<br>同问题四的解决方法</p><p>###六、Can’t open file: ‘xxx_forums.MYI’. (errno: 145)<br>    不能打开xxx_forums.MYI<br>问题分析：<br>这种情况是不能打开 cdb_forums.MYI 造成的，引起这种情况可能的原因有：<br>1、服务器非正常关机，数据库所在空间已满，或一些其它未知的原因，对数据库表造成了损坏。<br>2、类 unix 操作系统下直接将数据库文件拷贝移动会因为文件的属组问题而产生这个错误。<br>解决方法：<br>1、修复数据表<br>可以使用下面的两种方式修复数据表：（第一种方法仅适合独立主机用户）<br>1）使用 myisamchk ，MySQL 自带了专门用户数据表检查和修复的工具 —— myisamchk 。更改当前目录到 MySQL/bin 下面，一般情况下只有在这个下面才能运行 myisamchk 命令。常用的修复命令为：myisamchk -r 数据文件目录/数据表名.MYI；<br>2）通过 phpMyAdmin 修复， phpMyAdmin 带有修复数据表的功能，进入到某一个表中后，点击“操作”，在下方的“表维护”中点击“修复表”即可。<br>注意：以上两种修复方式在执行前一定要备份数据库。<br>2、修改文件的属组（仅适合独立主机用户）<br>1）复制数据库文件的过程中没有将数据库文件设置为 MySQL 运行的帐号可读写（一般适用于 Linux 和 FreeBSD 用户）。</p><p>###七、Table ‘test.xxx_sessions’ doesn’t exist<br>    xxxxx表不存在<br>分析：在执行sql语句时没有找到表，比如：SELECT * FROM xxx_members WHERE uid=’XX’ 这里如果表xxx_members不存在于$dbname库里，那么就会提示这个错误。具体可分为以下三种情况来讨论：<br>安装插件或者hack时修改了程序文件，而忘记了对数据库作相应的升级。<br>后台使用了不完全备份，导入数据时没有导入到已经安装了相应版本的论坛的数据库中。<br>解决： 同样对症下药，不同的原因不同的处理方法。<br>仔细对照插件作者提供的安装说明，把遗漏的对数据库的操作补上，如果仍然不能解决问题，那么应该怀疑该插件的可用性了。去咨询一下插件作者，或者将其卸载。<br>不要张冠李戴，多大的脚就穿多大的鞋。总之使得程序文件和数据库配套即可.</p><p>###八、Unknown column ‘column_name’ in ‘field list’<br>    未知的字段名 column_name<br>分析：在执行sql语句是出现了指定表中没有的字段名称，就会出现这个错误。具体导致的原因可分为以下两种<br>安装插件或者hack时修改了程序文件，而忘记了对数据库作相应的升级。<br>程序文件和数据库不配套，比如d2.5的数据库配置给d4.1的程序来用肯定会出现这个错误。<br>解决： 导致的原因和问题八的1和 3是相同的，所以解决方法也一样。</p><p>###九、You have an error in your SQL syntax<br>    有一个语法错误在你的sql中<br>分析：论坛标准的程序是没有sql语法错误的。所以造成这个错误的原因一般就两类<br>安装插件或擅自修改程序。<br>不同的数据库版本数据库导出导入，比如MySQL4.1的数据在导出的语句包含了MySQL4.0没有的功能，像字符集的设定，这时如果将这些sql导入到MySQL4.0的时候就会产生sql语法错误。<br>解决：<br>仔细检查看到底是哪里的错误，将其修正，实在不行就用标准程序把出错的程序替换。<br>在数据库备份的时候要留意，如果不打算倒入到其他版本的mysql中则不用特殊考虑，反之要特殊的设定。使用DZ4.1的后台数据备份，可以按照提示去设定想要的格式。独立主机的也可以在到处的时候将其导出为mysql4.0的格式。<br>mysqldump -uroot -p –default-character-set=latin1 –set-charset=gbk –skip-opt databse &gt; test.sql</p><p>###十、Duplicate entry ‘xxx’ for key 1<br>    插入 xxx 使索引1重复<br>分析：索引如果是primary unique这两两种，那么数据表的数据对应的这个字段就必须保证其每条记录的唯一性。否则就会产生这个错误。<br>一般发生在对数据库写操作的时候，例如Discuz!4.1论坛程序要求所有会员的用户名username必须唯一，即username的索引是 unique，这时如果强行往cdb_members表里插入一个已有的username的记录就会发上这个错误，或者将一条记录的username更新 为已有的一个username。<br>改变表结构的时候也有可能导致这个错误。例如 Discuz!4.0论坛的数据库中cdb_members.username 的索引类型是index这个时候是允许有相同username的记录存在的，在升级到4.1的时候，因为要将username的索引由原来的index变 为unique。如果这时cdb_members里存在有相同的username的记录，那么就会引发这个错误。<br>导出数据据时有时会因为一些原因（作者目前还不清楚）导致同一条记录被重复导出，那么这个备份数据在导入的时候出现这个错误是在所难免的了。<br>修改了auto_increment的值，致使“下一个 Autoindex”为一条已经存在的记录<br>解决： 两种思路，一是破坏掉唯一性的索引。二是把重复的数据记录干掉，只保留一条。很显然第一种思路是不可取的。那么按照二的思路我们得出以下几种解决方法，对应上面的i ii iii<br>略<br>按照错误提示里的信息到数据库中将重复的记录删除，仅保留一条即可。之后继续执行升级操作。<br>这种情况发生的概率很小，可以用文本编辑器打开备份文档，查找重复的信息。将其多余的拿掉，仅保留一条即可。<br>查询出表中auto_increment最大的一条记录，设置auto_incerment比其大一即可。<br>PS：repaire table “表名“，可以暂时解决问题。</p><p>###十一、 Duplicate key name ‘xxx’<br>    索引名重复<br>分析：要创建的索引已经存在了，就会引发这个错误，这个错误多发生在升级的时候。可能是已经升级过的，重复升级引起的错误。也有可能是之前用户擅自加的索引，刚好与升级文件中的所以相同了。<br>解决： 看看已经存在的索引和要添加的索引是否一样，一样的话可以跳过这条sql语句，如果不一样那么现删除已存在的所以，之后再执行。</p><p>###十二、 Duplicate column name ‘xxx’<br>    字段名xxx重复<br>分析：添加的字段xxx已经存在，多发生在升级过程中，与问题十二的产生是一样的。<br>解决： 看一下已经存在的字段是否和将要添加的字段属性完全相同，如果相同则可以跳过不执行这句sql，如果不一样则删除掉这个字段。之后继续执行升级程序。</p><p>###十三、 Table ‘xxx’ already exists<br>    数据表xxx已经存在<br>分析：xxx表已经存在于库中，再次试图创建这个名字的表就会引发这个错误。同样多发生在论坛的升级中。类似于问题十二。<br>解决： 看看已经存在的表是否和将要创建的表完全一样，一样的话可以跳过不执行这个sql，否则请将存在的表先删除，之后继续执行升级文件。</p><p>###十四、 Can’t create database ‘xxx’. Database exists<br>    不能创建数据库xxx，数据库已经存在<br>分析：一个mysql下面的数据库名称必须保证唯一性，否则就会有这个错误。<br>解决：把已经存在的数据库改名或者把将要创建的数据库改名，总之不让他们的名称冲突。</p><p>###十五、 小结（针对问题 11\12\13\14\15）<br>此类问题错误提示中都暗藏一个关键词duplicate（重复）<br>那么对于mysql数据库来说什么东西是不能重复的呢？<br>数据库 database<br>同一个数据库下数据表 table<br>同一个数据表下字段 column<br>同一个数据表下索引 key<br>同一个数据表在索引唯一（UNIQUE PRIMARY）的情况下记录中的这些字段不可以重复</p><p>###十六、Unknown system variable ‘NAMES’<br>    未知的系统变量NAMES<br>分析：Mysql版本不支持字符集设定，此时强行设定字符集就会出现这个错误。<br>解决： 将sql语句中的SET NAMES ‘xxx’ 语句去掉</p><p>###十七、 Lost connection to MySQL server during query<br>    MySQL服务器失去连接在查询期间<br>分析：远程连接数据库是有时会有这个问题。MySQL服务器在执行一条sql语句的时候失去了连接造成的。<br>解决： 一般不需要怎么去处理，如果频繁的出现那么考虑改善硬件环境。</p><p>###十八、User ‘red’ has exceeded the ‘max_updates’ resource (current value: 500)<br>    msql用户red已经超过了’max_updates’（最大更新次数），’max_questions’（最大查询次数），’max_connections’（最大连接数），当前设定为500<br>分析：在mysql数据库的下有一个库为mysql，它其中有一个表为user这里面的纪录每一条都对应为一个mysql用户的授权。其中字段 max_questions max_updates max_connections分别记录着最大查询次数 最大更新数 最大连接数，当目前的任何一个参数大于任何一个设定的值就会产生这个错误。<br>解决： 独立主机用户可以直接修改授权表。修改完之后重启mysql或者跟新授权表，进入mysql提示符下执行<br>FLUSH PRIVILEGES;<br>记得后面要有分号’;’<br>虚拟主机的用户如果总是出现这个问题可找空间商协商解决。</p><p>###十九、Too many connections (1040)链接过多<br>    达到最大连接数<br>问题分析：<br>连接数超过了mysql设置的值，与max_connections 和wait_timeout 都有关系。wait_timeout的值越大，连接的空闲等待就越长，这样就会造成当前连接数越大<br>解决方法：<br>1.虚拟主机用户请联系空间商优化 MySQL 服务器的配置；<br>2.独立主机用户请联系服务器管理员优化 MySQL 服务器的配置，可参考：<br>修改 MySQL 配置文件 my.ini 或者 my.cnf 中的参数：<br>max_connections= 1000<br>wait_timeout = 10<br>修改后重启 MySQL ，如果经常性的报此错误，请做一下服务器的整体优化。</p><p>###二十、There is no such grant defined for user ‘%s’ on host ‘%s’<br>错误编号：1141<br>问题分析：<br>MySQL 当前用户无权访问数据库。<br>解决方法：<br>1、虚拟主机用户请联系空间商，确认给你提供的帐号是否有授权数据库的权限。<br>2、独立主机用户请联系服务器管理员，确认给您提供的数据库帐号是否有管理此数据库的权限。</p><p>###二十一、Error on rename of ‘%s’ to ‘%s’ (errno: %d)<br>error.:1025<br>问题分析：<br>请检查一下您的程序是否有修改数据库表名的语句。<br>解决方法：<br>1.请检查您的程序中哪些地方需要修改数据库表名；<br>2.如果您的实际应用确实需要修改到数据库表名的话，请联系空间商或者服务器管理员给您开放修改库名的权限和服务器本身是否正常。</p><p>###二十二、Error reading file ‘%s’ (errno: %d)<br>error.:1023<br>问题分析：<br>数据库文件不能被读取。<br>解决方法：<br>1.虚拟主机用户请联系空间商查看数据库是否完好。<br>2.独立主机用户请联系服务器管理员检查一下 MySQL 本身是否正常， MySQL 是否可以读取文件，Linux 用户可以检查一下 MySQL 的数据库文件的属主是否正确以及本身的文件是否损坏。</p><p>###二十三、Host ‘<strong>*</strong>‘ is blocked because of many connection errors; unblock with ‘mysqladmin flush-hosts’<br>error.:1129<br>问题分析：<br>数据库出现异常，请重启数据库。<br>解决方法：</p><ol><li>由于存在很多连接错误，主机’<em>**</em>‘被屏蔽，虚拟主机用户请联系空间商处理，独立主机用户请联系服务器管理员，在 MySQL 的命令控制台下执行’mysqladmin flush-hosts’解除屏蔽即可，或者重启 MySQL 数据库</li></ol><p>###二十四、dropping database (can’t delete ‘%s’, errno: %d)<br>error.:1009<br>问题分析：<br>不能删除数据库文件，导致删除数据库失败。<br>解决方法：<br>1.检查您使用的数据库管理帐号是否有权限删除数据。<br>2.检查数据库是否存在。</p><p>###二十五、Got error 28 from table handler<br>error.:1030<br>问题分析：<br>数据库所在磁盘空间已满。<br>解决方法：<br>1.虚拟主机用户请联系空间商增加 MySQL 所在的磁盘空间或者清理一些无用文件；<br>2.独立主机用户请联系服务器管理员增加 MySQL 所在的磁盘空间或者清理一些无用文件</p><p>###二十六、Can’t create a new thread; if you are not out of available memory, you can consult the manual for a possible OS-dependent bug。<br>error.:11/35<br>问题分析：<br>数据库服务器问题，数据库操作无法创建新线程。一般是两个原因：<br>1.服务器系统内存溢出。<br>2.环境软件损坏或系统损坏。<br>解决方法：<br>1.虚拟主机用户请联系下空间商数据库服务器的内存和系统是否正常。<br>2.独立主机用户请联系服务器管理员检查服务器的内存和系统是否正常，如果服务器内存紧张，请检查一下哪些进程消耗了服务器的内存，同时考虑是否增加服务器的内存来提高整个的负载能力。</p><p>###二十七、Error: Client does not support authentication protocol requested by server; consider upgrading MySQL client<br>error.:1251<br>问题分析：<br>如果你升级 MySQL 到 4.1 以上版本后遇到以上问题,请先确定你的 MySQL Client 是 4.1 或者更高版本( Windows 下有问题你就直接跳到下面看解决方法了，因为 MySQL 在 Windows 是 client 和 server 一起装上了的)。<br>解决方法：</p><ol><li>Windows 平台<br>主要是改变连接 MySQL 的帐户的加密方式，MySQL 4.1/5.0 是通过 PASSWORD 这种方式加密的。可以通过以下两种方法得到解决：<br>1) mysql-&gt;SET PASSWORD FOR ‘some_user‘@’some_host’=OLD_PASSWORD(‘new_password’);<br>2) mysql-&gt;UPDATE mysql.user SET Password=OLD_PASSWORD(‘new_password’) WHERE Host=’some_host’ AND User=’some_user’;</li><li>Linux/Unix 平台<br>Linux 平台下首先确定是否安装过 MySQL 的客户端，这个用 rpm 安装很简单，Linux 代码为：<br>rpm -ivh MySQL-client-4.1.15-0.i386.rpm<br>然后在编译 php 的时候要加上：<br>–with-mysql=/your/path/to/mysql<br>一般情况下都可以解决。如果还出现这种错误，可以按照下面的方法来做：<br>mysql-&gt;SET PASSWORD FOR ‘some_user‘@’some_host’=OLD_PASSWORD(‘new_password’);<br>mysql-&gt;UPDATE mysql.user SET Password=OLD_PASSWORD(‘new_password’) WHERE Host=’some_host’ AND User=’some_user’;</li></ol><p>###二十八、Error: Can’t connect to local MySQL server through socket ‘/var/lib/mysql/mysql.sock’<br>error.:2002<br>问题分析：<br>出现这个错误一般情况下是因为下面两个原因：<br>1.MySQL 服务器没有开启。<br>2.MySQL 服务器开启了，但不能找到 socket 文件。<br>解决方法：<br>1.虚拟主机用户，请联系空间商确认数据库是否正常启动。<br>2.独立主机用户，请检查一下 MySQL 服务是否已经开启，没有开启，请启动 MySQL 服务；如果已经开启，并且是 Linux 系统，请检查一下 MySQL 的 socket 的路径，然后打开 config.inc.php 找到<br>dbhost=′localhost′;在hostname后面加冒号‘:′和MySQL的socket的路径。比如MySQL服务器为localhostMySQL的socket的路径为/tmp/mysql.sock那么就改成如下：</p><p>dbhost = ‘localhost:/temp/mysql.sock’;</p><p>###二十九、Can’t connect to MySQL server on ‘localhost’<br>error.:2003<br>问题分析：<br>MySQL 服务没有启动，一般是在异常的情况下 MySQL 无法启动导致的，比如无可用的磁盘空间，my.ini 里 MySQL 的 basedir 路径设置错误等。<br>解决方法：<br>1.检查磁盘空间是否还有剩余可用空间，尽量保持有足够的磁盘空间可用。<br>2.检查 my.ini 里的 basedir 等参数设置是否正确，然后重新启动下 MySQL 服务。</p><p>###三十、Lost connection to MySQL server during query<br>error.:2013<br>问题分析：<br>数据库查询过程中丢失了与 MySQL 服务器的连接。<br>解决方法：<br>1.请确认您的程序中是否有效率很低的程序，比如某些插件，可以卸载掉插件，检查一下服务器是否正常；<br>2.服务器本身资源紧张，虚拟主机用户请联系空间商确认，独立主机用户请联系服务器管理员，检查一下服务器是否正常。</p><p>###三十一、Got a packet bigger than \’max_allowed_packet\’ bytes<br>错误编号：1153<br>问题分析：调整了 Mantis 的上传附件的大小却没有调整 MySQL 的配置文件。<br>解决办法：<br>1、独立主机用户请按照以下方法调整：<br>查找 MySQL 的配置文件（my.cnf 或者 my.ini）<br>在 [mysqld] 部分添加一句（如果存在，调整其值就可以）：<br>max_allowed_packet=10M<br>重启 MySQL 服务就可以了。这里设置的是 10MB。<br>2、虚拟主机用户请联系空间商调整此参数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###一、Can’t connect to MySQL server on ‘localhost’ (10061)&lt;br&gt;   不能连接到 localhost 上的mysql&lt;br&gt;分析：这说明“localhost”计算机是存在的，但在这台机器上却没提供MySQL服务。&lt;b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>nginx 配置指令优化</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/06/nginx-%E9%85%8D%E7%BD%AE%E6%8C%87%E4%BB%A4%E4%BC%98%E5%8C%96/"/>
    <id>https://kingle.我爱你/2018/09/06/nginx-配置指令优化/</id>
    <published>2018-09-06T00:31:56.000Z</published>
    <updated>2018-09-06T00:38:56.003Z</updated>
    
    <content type="html"><![CDATA[<p>  send_timeout</p><p>　　send_timeout  120s;</p><p>用于设置nginx服务器响应客户端的超时时间，这个超时时间仅针对两个客户端和服务器之间建立连接后，某次活动之间的时间。如果这个时间后客户端没有任何活动，nginx服务器将会关闭连接</p><p>　　</p><p>  keepalive_timeout</p><p>　　keepalive_timeout  160s</p><p>指定客户端连接保持的超时时间，该设置表示nginx服务器与客户端保持活动时间是60s，60s后服务器与客户端断开连接</p><p>　　client_header_buffer_size</p><p>　　client_header_buffer_size  4k;</p><p>　　　　设置nginx 服务器允许的客户端请求头部的缓冲区大小，默认为1KB。此指令的赋值可以根据系统分页大小来设置。分页大小也可以用”# getconf PAGESIZE”命令取得</p><p>有过nginx服务器工作经验的朋友可能会遇到nginx 服务器返回400错误的情况，查找nginx服务器的400错误原因比较困难，因为此错误并不是每次都会出现，出现错误的时候，通常在浏览器和日志里也看不到任何有关提示信息。</p><p>根据实际经验来看，有很大一部分情况是客户端的请求头部过大造成的。请求头部过大，通常是客户端cookie中写入了较大的值引起的。于是适当增大此指令的赋值，允许nginx服务器接收较大的请求头部，可以改善服务器对客户端</p><p>的支持能力。一般将此指令设置为4KB.</p><p>　　client_header_timeout</p><p>　　client_header_timeout  20s;</p><p>　　设置读取客户端请求头数据的超时时间。此处值是15s,为经验参考值，默认是60s。</p><p>如果超过这个时间，客户端还没有发送完整的header数据，服务端将返回”Request timeout(408)”错误，</p><p>　　　multi_accept</p><p>　　　配置nginx服务器时候经可能多的接受客户端的网络连接请求,默认off</p><p>驱动相关指定　</p><p>　</p><p> 　　　use</p><p>参数详解：use指令用于指定Nginx服务器使用的事件驱动模型</p><p>　　　worker_connections</p><p>该指令用于设置Nginx服务器的每个工作进程允许同时连接客户端的最大数量，语法为</p><pre><code>worker_connections number;</code></pre><p>结合worker_processes 指令，我们可以计算出Nginx 服务器允许同时练级的客户端最大数量 Client=worker_processes * worker_connections / 2 。</p><p>在看一本书的过程中看到作者 在使用Nginx服务器的过程中遇到无法访问Nginx 服务器的情况。查看日志信息发现一直报如下错误</p><p>他是怎么分析解决的呢： </p><p>根据报错信息，推测可能是Nginx 服务器的最大访问链接数量设置小了。此指令设置的就是Nginx服务器能接受的最大访问量，其中包括前端用户链接也包括其他链接，这个值在理论上等于此指令的值与它允许开启的工作进程最大数的乘积。 此指令一般为65535；</p><pre><code>worker_connections 65535;</code></pre><p>此指令的赋值与linux 操作系统中进程可以打开 的文件句柄数量有关系。按照以上设置修改了赋值以后，Nginx 服务器报如下错误：</p><p>究其原因，在linux 系统中有一个系统指令open file resource limit ，它设置了进程可以打开的文件句柄数量，worker_connections 指令的赋值不能超过 open file resource limit 的赋值可以使用以下的命令查看 linux 系统中 该指令的值</p><pre><code>#  cat  /proc/sys/fs/file-max </code></pre><p>可以通过下面命令将open file resource limit 指令的值设为 2390251：</p><pre><code># echo &quot;2390251&quot; &gt; /proc/sys/fs/file-max;  sysctl -p</code></pre><p>这样Nginx 的worker_connections 指令赋值65535 就没问题了</p><p> 　　 worker_rlimit_sigpending </p><p>参数详解：该指令用于设置linux 2.6.6-mm2 版本之后的 linux 平台的事件信号队列长度上线。其语法结构为</p><pre><code>worker_rlimit_sigpending  limit;</code></pre><p>注：limit 为linux 平台事件信号队列的长度上限值。</p><p>该指令主要影响事件驱动模型中rtsig 模型可以保存的最大信号数。Nginx 服务器的每一个工作进程有自己的事件信号队列用于存储客户端请求发生的信号，如果超过长度上限，nginx 服务器自动转用poll 模型处理未处理的客户端请求，为了保证Nginx 服务器对客户端请求的高效处理，请大家根据实际的客户端并发请求数量和服务器运行环境能力设定该值，设置示范</p><pre><code>worker_rlimit_sifpending 1024;</code></pre><p>　　devpoll_changes 和 devpoll_events </p><p>参数详解：这两个指令用于设置在 /dev/poll 事件驱动模式下，Nginx服务器可以与内核之间传递事件的数量，前者设置传递给内核的事件数量，后者设置从内核获取的事件数量，语法结构为：</p><pre><code>devpoll_changes number;devpoll_events number;</code></pre><p>注：number 为要设置的数量，默认值为32.</p><p>　　kqueue_changes 和 kqueue_events </p><p>参数详解：这两个指令用于设置在kqueue 时间驱动模式下，Nginx 服务器可以与内核之间传递事件的数量，前者设置传递给内核的事件数量，后者设置从内核获取的事件数量，其语法结构为：</p><p>kqueue_changes number;</p><p>kqueue_events number;</p><p>注：number 为要设置的数量，默认值均为512。</p><p>　　epoll_events </p><p>参数详解：该指令用于设置在epoll 事件驱动模式下Nginx 服务器可以与内核之间传递事件的数量，与其他事件驱动模型不同，在epoll事件驱动模式下Nginx 服务器向内核传递事件的数量和从内核传递事件数量是相等得。因此没有类似epoll_changes 这样的指令,默认值为512.</p><p> epoll_events 512;</p><p> 　　rtsig_signo</p><p>　　该指令用于设置rtsig模式使用两个信号中的第一个,</p><p>　　rtsig_signo signo</p><p>　　</p><p>　　rtsig_overfloe_* number</p><p>　　用于代表三个具体的指令 分别是:rtsig_overflow_events  rtsig_overflow_test</p><p>rtsig_over_thresold</p><p>　　rtsig_overflow_events:指定对垒米处时使用poll库处理的事件数</p><p>　　rtsig_overflow_test: 指定poll库处理地几件事见后将清空rtsig模型使用的信号队列,默认32</p><p>　　rtsig_over_thresold: 指定rtsig模式使用的信号队列中的时间超过多少时就清空队列</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  send_timeout&lt;/p&gt;
&lt;p&gt;　　send_timeout  120s;&lt;/p&gt;
&lt;p&gt;用于设置nginx服务器响应客户端的超时时间，这个超时时间仅针对两个客户端和服务器之间建立连接后，某次活动之间的时间。如果这个时间后客户端没有任何活动，nginx服务器将会
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx 内核优化</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/06/nginx-%E5%86%85%E6%A0%B8%E4%BC%98%E5%8C%96/"/>
    <id>https://kingle.我爱你/2018/09/06/nginx-内核优化/</id>
    <published>2018-09-06T00:31:44.000Z</published>
    <updated>2018-09-06T00:32:40.289Z</updated>
    
    <content type="html"><![CDATA[<p>1）nginx进程数，建议按照cpu数目来指定，一般跟cpu核数相同或为它的倍数。<br>worker_processes 8;</p><p>2）为每个进程分配cpu，上例中将8个进程分配到8个cpu，当然可以写多个，或者将一个进程分配到多个cpu。<br>worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</p><p>3）下面这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是系统的最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n的值保持一致。<br>worker_rlimit_nofile 65535;</p><p>4）使用epoll的I/O模型，用这个模型来高效处理异步事件<br>use epoll;</p><p>5）每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为worker_processes*worker_connections。<br>worker_connections 65535;</p><p>6）http连接超时时间，默认是60s，功能是使客户端到服务器端的连接在设定的时间内持续有效，当出现对服务器的后继请求时，该功能避免了建立或者重新建立连接。切记这个参数也不能设置过大！否则会导致许多无效的http连接占据着nginx的连接数，终nginx崩溃！<br>keepalive_timeout 60;</p><p>7）客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。<br>client_header_buffer_size 4k;</p><p>8）下面这个参数将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。<br>open_file_cache max=102400 inactive=20s;</p><p>9）下面这个是指多长时间检查一次缓存的有效信息。<br>open_file_cache_valid 30s;</p><p>10）open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。<br>open_file_cache_min_uses 1;</p><p>11）隐藏响应头中的有关操作系统和web server（Nginx）版本号的信息，这样对于安全性是有好处的。<br>server_tokens off;</p><p>12）可以让sendfile()发挥作用。sendfile()可以在磁盘和TCP socket之间互相拷贝数据(或任意两个文件描述符)。Pre-sendfile是传送数据之前在用户空间申请数据缓冲区。之后用read()将数据从文件拷贝到这个缓冲区，write()将缓冲区数据写入网络。sendfile()是立即将数据从磁盘读到OS缓存。因为这种拷贝是在内核完成的，sendfile()要比组合read()和write()以及打开关闭丢弃缓冲更加有效(更多有关于sendfile)。<br>sendfile on;</p><p>13）告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送。就是说数据包不会马上传送出去，等到数据包最大时，一次性的传输出去，这样有助于解决网络堵塞。<br>tcp_nopush on;</p><p>14）告诉nginx不要缓存数据，而是一段一段的发送–当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。<br>tcp_nodelay on;<br>比如：<br>http {<br>server_tokens off;<br>sendfile on;<br>tcp_nopush on;<br>tcp_nodelay on;<br>……<br>}</p><p>15）客户端请求头部的缓冲区大小，这个可以根据系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。<br>client_header_buffer_size 4k;<br>客户端请求头部的缓冲区大小，这个可以根据系统分页大小来设置，一般一个请求头的大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。<br>分页大小可以用命令getconf PAGESIZE取得。<br>[root@test-huanqiu ~]# getconf PAGESIZE<br>4096<br>但也有client_header_buffer_size超过4k的情况，但是client_header_buffer_size该值必须设置为“系统分页大小”的整倍数。</p><p>16）为打开文件指定缓存，默认是没有启用的，max 指定缓存数量，建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。<br>open_file_cache max=65535 inactive=60s;</p><p>17）open_file_cache 指令中的inactive 参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive 时间内一次没被使用，它将被移除。<br>open_file_cache_min_uses 1;</p><p>18）指定多长时间检查一次缓存的有效信息。<br>open_file_cache_valid 80s;<br>人生就像一滴水，非要落下才后悔！ –kingle</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1）nginx进程数，建议按照cpu数目来指定，一般跟cpu核数相同或为它的倍数。&lt;br&gt;worker_processes 8;&lt;/p&gt;
&lt;p&gt;2）为每个进程分配cpu，上例中将8个进程分配到8个cpu，当然可以写多个，或者将一个进程分配到多个cpu。&lt;br&gt;worker_
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx 模块介绍</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/06/nginx-%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D/"/>
    <id>https://kingle.我爱你/2018/09/06/nginx-模块介绍/</id>
    <published>2018-09-06T00:30:58.000Z</published>
    <updated>2018-09-07T02:19:21.073Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>性能相关配置<br>worker_processes number | auto；<br>worker进程的数量；通常应该为当前主机的cpu的物理核心数<br>worker_cpu_affinity auto [cpumask] #将work进程绑定在固定cpu上提高缓存命中率<br>例：<br>worker_cpu_affinity 0001 0010 0100 1000;<br>worker_cpu_affinity 0101 1010;<br>worker_priority number<br>指定worker进程的nice值，设定worker进程优先级： [-20,20]<br>worker_rlimit_nofile number<br>worker进程所能够打开的文件数量上限,默认较小，生产中需要调大如65535</p></li><li><p>时间驱动events相关的配置<br>worker_connections number<br>每个worker进程所能够打开的最大并发连接数数量，如10240<br>总最大并发数： worker_processes * worker_connections<br>use method<br>指明并发连接请求的处理方法,默认自动选择最优方法不用调整<br>如：use epoll;</p></li></ol><p>accept_mutex on | off 互斥；<br>处理新的连接请求的方法； on指由各个worker轮流处理新请求<br>， Off指每个新请求的到达都会通知(唤醒)所有的worker进程，但<br>只有一个进程可获得连接，造成“惊群”，影响性能，默认on</p><ol start="3"><li>http核心模块相关配置ngx_http_core_module</li></ol><p>3.1web服务模板<br>server { … }<br>配置一个虚拟主机<br>server {<br>    listen address[:PORT]|PORT;<br>    server_name SERVER_NAME;<br>    root /PATH/TO/DOCUMENT_ROOT;<br>}<br>注意：<br>(1) 基于port；<br>listen PORT; 指令监听在不同的端口<br>(2) 基于ip的虚拟主机<br>listen IP:PORT; IP 地址不同<br>(3) 基于hostname<br>server_name fqdn; 指令指向不同的主机名</p><p>3.2套接字相关配置<br>listen address[:port] [default_server] [ssl] [http2 | spdy] [backlog=number] [rcvbuf=size] [sndbuf=size]</p><p>default_server 设定为默认虚拟主机<br>ssl 限制仅能够通过ssl连接提供服务<br>backlog=number 超过并发连接数后，新请求进入后援队列的长度<br>rcvbuf=size 接收缓冲区大小<br>sndbuf=size 发送缓冲区大小</p><p>3.3 server_name<br>server_name name …;<br>支持<em>通配任意长度的任意字符<br>server_name </em>.magedu.com <a href="http://www.magedu." target="_blank" rel="noopener">www.magedu.</a><em><br>支持~起始的字符做正则表达式模式匹配，性能原因慎用<br>server_name ~^www\d+.magedu.com$ #\d 表示 [0-9]<br>匹配优先级机制从高到低：<br>(1) 首先是字符串精确匹配 如： <a href="http://www.magedu.com" target="_blank" rel="noopener">www.magedu.com</a><br>(2) 左侧</em>通配符 如： <em>.magedu.com<br>(3) 右侧</em>通配符 如： <a href="http://www.magedu." target="_blank" rel="noopener">www.magedu.</a><em><br>(4) 正则表达式 如： ~^.</em>.magedu.com$<br>(5) default_server</p><p>3.4 延迟发送选项</p><p>tcp_nodelay on | off;<br>tcp_nopush  on | off;<br>在keepalived模式下的连接是否启用TCP_NODELAY选项<br>当为off时，延迟发送，合并多个请求后再发送<br>默认On时，不延迟发送<br>可用于： http, server, location</p><p>3.5 sendfile</p><p>sendfile on | off;<br>是否启用sendfile功能，在内核中封装报文直接发送<br>默认Off</p><p>3.6 隐藏版本信息</p><p>server_tokens on | off | build | string<br>是否在响应报文的Server首部显示nginx版本</p><p>3.7 location匹配</p><p>location [ = | ~ | ~<em> | ^~ ] uri { … }<br>location @name { … }<br>在一个server中location配置段可存在多个，用于实现从uri到文件系统的路径映射； ngnix会根据<br>用户请求的URI来检查定义的所有location，并找出一个最佳匹配，而后应用其配置<br>示例：<br>server {…<br>    server_name <a href="http://www.magedu.com" target="_blank" rel="noopener">www.magedu.com</a>;<br>    location /images/ {<br>        root /data/imgs/;<br>        }<br>}<br><a href="http://www.magedu.com/images/logo.jpg" target="_blank" rel="noopener">http://www.magedu.com/images/logo.jpg</a><br>–&gt; /data/imgs/images/logo.jpg<br>=：对URI做精确匹配；<br>^~：对URI的最左边部分做匹配检查，不区分字符大小写<br> ~：对URI做正则表达式模式匹配，区分字符大小写<br> ~</em>：对URI做正则表达式模式匹配，不区分字符大小写<br> 不带符号：匹配起始于此uri的所有的uri<br> 匹配优先级从高到低：<br>=, ^~, ～/～*, 不带符号</p><p>3.7 路径别名alias path</p><p>示例：<br><a href="http://www.magedu.com/bbs/index.php" target="_blank" rel="noopener">http://www.magedu.com/bbs/index.php</a><br>location /bbs/ {<br>    alias /web/forum/;<br>} –&gt; /web/forum/index.html<br>location /bbs/ {<br>    root /web/forum/;<br>}     –&gt; /web/forum/bbs/index.html<br> 注意： location中使用root指令和alias指令的意义不同<br>(a) root，相当于追加在root目录后面<br>(b) alias，相当于对location中的url进行替换</p><p>3.8 错误页面显示<br>error_page code … [=[response]] uri;<br>模块： ngx_http_core_module<br>定义错误页， 以指定的响应状态码进行响应<br>可用位置： http, server, location, if in location<br>error_page 404 /404.html<br>error_page 404 =200 /404.html  <span class="token comment">#防止404页面被劫持</span></p><p>3.9 长连接相关配置<br>keepalive_timeout timeout [header_timeout];<br>设定保持连接超时时长， 0表示禁止长连接， 默认为75s<br>keepalive_requests number;<br>在一次长连接上所允许请求的资源的最大数量，默认为100<br>keepalive_disable none | browser …<br>对哪种浏览器禁用长连接<br>send_timeout time;<br>向客户端发送响应报文的超时时长，此处是指两次写操作之间的间隔时长，而非<br>整个响应过程的传输时长</p><p>3.10 请求报文缓存<br>client_body_buffer_size size;<br>用于接收每个客户端请求报文的body部分的缓冲区大小；默认为16k；超出此大小时，<br>其将被暂存到磁盘上的由client_body_temp_path指令所定义的位置<br>client_body_temp_path path [level1 [level2 [level3]]];<br>设定用于存储客户端请求报文的body部分的临时存储路径及子目录结构和数量<br>目录名为16进制的数字；<br>client_body_temp_path /var/tmp/client_body 1 2 2<br>1 1级目录占1位16进制，即2^4=16个目录 0-f<br>2 2级目录占2位16进制，即2^8=256个目录 00-ff<br>2 3级目录占2位16进制， 即2^8=256个目录 00-ff</p><p>3.11 对客户端进行限制相关配置<br>limit_rate rate;<br>限制响应给客户端的传输速率，单位是bytes/second 默认值0表示无限制<br>limit_except method … { … }，仅用于location<br>限制客户端使用除了指定的请求方法之外的其它方法<br>method:GET, HEAD, POST, PUT, DELETE，MKCOL, COPY, MOVE, OPTIONS, PROPFIND,<br>PROPPATCH, LOCK, UNLOCK, PATCH<br>例：<br>limit_except GET {<br>    allow 192.168.1.0/24;<br>    deny all;<br>}<br>除了GET和HEAD 之外其它方法仅允许192.168.1.0/24网段主机使用</p><ol start="4"><li>访问控制模块ngx_http_access_module</li></ol><p>实现基于ip的访问控制功能<br>allow address | CIDR | unix: | all;<br>deny address | CIDR | unix: | all;<br>http, server, location, limit_except<br>自上而下检查，一旦匹配，将生效，条件严格的置前<br>示例：<br>location / {<br>    deny 192.168.1.1;<br>    allow 192.168.1.0/24;<br>    allow 10.1.1.0/16;<br>    allow 2001:0db8::/32;<br>    deny all;<br>}</p><ol start="5"><li>用户认证模块ngx_http_auth_basic_module</li></ol><p>实现基于用户的访问控制，使用basic机制进行用户认证<br>auth_basic string | off;<br>auth_basic_user_file file;<br>location /admin/ {<br>    auth_basic “Admin Area”;<br>    auth_basic_user_file /etc/nginx/.ngxpasswd;<br>}<br>用户口令：<br>1、明文文本：格式name:password:comment<br>2、加密文本：由htpasswd命令实现 httpd-tools所提供<br>htpasswd [-c第一次创建时使用] [-D删除用户] passwdfile   username</p><ol start="6"><li><p>状态查看模块ngx_http_stub_status_module<br>用于输出nginx的基本状态信息<br>Active connections:当前状态，活动状态的连接数<br>accepts：统计总值，已经接受的客户端请求的总数<br>handled：统计总值，已经处理完成的客户端请求的总数<br>requests：统计总值，客户端发来的总的请求数<br>Reading：当前状态，正在读取客户端请求报文首部的连接的连接数<br>Writing：当前状态，正在向客户端发送响应报文过程中的连接数<br>Waiting：当前状态，正在等待客户端发出请求的空闲连接数<br>示例：<br>location /status {<br> stub_status;<br> allow 172.16.0.0/16;<br> deny all;<br>}</p></li><li><p>日志记录模块ngx_http_log_module<br>1、 log_format name string …;<br>string可以使用nginx核心模块及其它模块内嵌的变量<br>2、 access_log path [format [buffer=size] [gzip[=level]] [flush=time] [if=condition]];<br>access_log off;<br>访问日志文件路径，格式及相关的缓冲的配置<br>buffer=size<br>flush=time<br>示例<br>log_format compression ‘$remote_addr-$remote_user [$time_local] ‘</p><pre><code>&apos;&quot;$request&quot; $status $bytes_sent &apos;&apos;&quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$gzip_ratio&quot;&apos;;</code></pre><p>access_log /spool/logs/nginx-access.log compression buffer=32k;<br>json格式日志示例;log_format json ‘{“@timestamp”:”$time_iso8601”,’</p><pre><code>&apos;&quot;client_ip&quot;:&quot;$remote_addr&quot;,&apos;&apos;&quot;size&quot;:$body_bytes_sent,&apos;&apos;&quot;responsetime&quot;:$request_time,&apos;&apos;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&apos;&apos;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&apos;&apos;&quot;http_host&quot;:&quot;$host&quot;,&apos;&apos;&quot;method&quot;:&quot;$request_method&quot;,&apos;&apos;&quot;request_uri&quot;:&quot;$request_uri&quot;,&apos;&apos;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&apos;&apos;&quot;referrer&quot;:&quot;$http_referer&quot;,&apos;&apos;&quot;agent&quot;:&quot;$http_user_agent&quot;,&apos;&apos;&quot;status&quot;:&quot;$status&quot;}&apos;;</code></pre><p>3、 open_log_file_cache max=N [inactive=time] [min_uses=N] [valid=time];<br>open_log_file_cache off;<br>缓存各日志文件相关的元数据信息<br>max：缓存的最大文件描述符数量<br>min_uses：在inactive指定的时长内访问大于等于此值方可被当作活动项<br>inactive：非活动时长<br>valid：验正缓存中各缓存项是否为活动项的时间间隔<br>例: open_log_file_cache max=1000 inactive=20s  valid=1m;</p></li><li><p>压缩相关选项ngx_http_gzip_module<br>1、gzip on  off;#启用或禁用gzip压缩<br>2、gzip_comp_level level;#压缩比由低到高： 1 到 9  默认： 1<br>3、gzip_disable regex …; #匹配到客户端浏览器不执行压缩<br>4、gzip_min_length length; #启用压缩功能的响应报文大小阈值<br>5、gzip_http_version 1.0 | 1.1; #设定启用压缩功能时，协议的最小版本 默认： 1.1<br>6、gzip_buffers number size;<br>支持实现压缩功能时缓冲区数量及每个缓存区的大小<br>默认： 32 4k 或 16 8k<br>7、gzip_types mime-type …;<br>指明仅对哪些类型的资源执行压缩操作；即压缩过滤器<br>默认包含有text/html，不用显示指定，否则出错<br>8、gzip_vary on| off;<br>如果启用压缩，是否在响应报文首部插入“Vary: AcceptEncoding<br>9、 gzip_proxied off | expired| no-cache| no-|<br>private | no_last_modified| no_etag | auth | any …;<br>nginx对于代理服务器请求的响应报文，在何种条件下启<br>用压缩功能<br>off：对被代理的请求不启用压缩<br>expired,no-cache, no-store， private：对代理服务器<br>请求的响应报文首部Cache-Control值任何一个，启用压缩功能<br>示例：<br>gzip on;<br>gzip_comp_level 6;<br>gzip_http_version 1.1;<br>gzip_vary on;<br>gzip_min_length 1024;<br>gzip_buffers 16 8k;<br>gzip_proxied any;<br>gzip_disable “MSIE[1-6].(?!.*SV1)”;<br>gzip_types text/xml text/plain text/css application/javascript application/xml application/json;</p></li><li><p>https模块ngx_http_ssl_module模块：<br>1、 ssl on | off;<br>为指定虚拟机启用HTTPS protocol， 建议用listen指令代替<br>2、 ssl_certificate file;<br>当前虚拟主机使用PEM格式的证书文件<br>3、 ssl_certificate_key file;<br>当前虚拟主机上与其证书匹配的私钥文件<br>4、 ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2];<br>支持ssl协议版本，默认为后三个<br>5、 ssl_session_cache off | none | [builtin[:size]]<br>[shared:name:size];<br>builtin[:size]：使用OpenSSL内建缓存，为每worker进程私有<br>[shared:name:size]：在各worker之间使用一个共享的缓存<br>6、 ssl_session_timeout time;<br>客户端连接可以复用ssl session cache中缓存的ssl参数的有<br>效时长，默认5m<br>示例：<br>server {<br> listen 443 ssl;<br> server_name <a href="http://www.magedu.com" target="_blank" rel="noopener">www.magedu.com</a>;<br> root /vhosts/ssl/htdocs;<br> ssl on;<br> ssl_certificate /etc/nginx/ssl/nginx.crt;<br> ssl_certificate_key /etc/nginx/ssl/nginx.key;<br> ssl_session_cache shared:sslcache:20m;<br> ssl_session_timeout 10m;<br>}</p></li><li><p>重定向模块ngx_http_rewrite_module：<br>1、rewrite regex replacement [flag]<br>将用户请求的URI基于regex所描述的模式进行检查，匹配到时将其替换为replacement指定的新的URI<br>注意：如果在同一级配置块中存在多个rewrite规则，那么会自下而下逐个检查；被某条件规则替换<br>完成后，会重新一轮的替换检查<br>隐含有循环机制,但不超过10次；如果超过，提示500响应码， [flag]所表示的标志位用于控制此循环<br>机制<br>如果replacement是以http://或https://开头，则替换结果会直接以重向返回给客户端<br>[flag]：<br>last：重写完成后停止对当前URI在当前location中后续<br>的其它重写操作，而后对新的URI启动新一轮重写检查；提前重<br>启新一轮循环<br>break：重写完成后停止对当前URI在当前location中后<br>续的其它重写操作，而后直接跳转至重写规则配置块之后的其它<br>配置；结束循环，建议在location中使用<br>redirect：临时重定向，重写完成后以临时重定向方式直<br>接返回重写后生成的新URI给客户端，由客户端重新发起请求；<br>不能以http://或https://开头，使用相对路径，状态码： 302<br>permanent:重写完成后以永久重定向方式直接返回重写<br>后生成的新URI给客户端，由客户端重新发起请求，状态码：301<br>例：<br>rewrite ^/zz/(.<em>.html)$  /zhengzhou/$1 break;<br>rewrite ^/zz/(.</em>.html)$  <a href="https://www.dianping/zhengzhou/$1" target="_blank" rel="noopener">https://www.dianping/zhengzhou/$1</a> permanent;<br>2、 return<br>return code [text];<br>return code URL;<br>return URL;<br>停止处理，并返回给客户端指定的响应码</p></li></ol><p>3、 rewrite_log on | off;<br>是否开启重写日志, 发送至error_log（notice level）<br>4、 set $variable value;<br>用户自定义变量<br>注意：变量定义和调用都要以$开头<br>5、 if (condition) { … }<br>引入新的上下文,条件满足时，执行配置块中的配置指令； server, location<br>condition：<br>比较操作符：<br>== 相同<br>!= 不同<br>~：模式匹配，区分字符大小写<br>~<em>：模式匹配，不区分字符大小写<br>!~：模式不匹配，区分字符大小写<br>!~</em>：模式不匹配，不区分字符大小写<br>文件及目录存在性判断：<br>-e, !-e 存在（包括文件，目录，软链接）<br>-f, !-f 文件<br>-d, !-d 目录<br>-x, !-x 执行<br>浏览器分流示例：<br>if ($http_user_agent ~ Chrom) {<br>    rewrite ^(.<em>)$  /chrome/$1 break;<br>    }<br>if ($http_user_agent ~ MSIE) {<br>    rewrite ^(.</em>)$  /IE/$1 break;<br>    }</p><ol start="11"><li><p>引用模块ngx_http_referer_module<br>valid_referers none|blocked|server_names|string …;<br>定义referer首部的合法可用值，不能匹配的将是非法值<br>none：请求报文首部没有referer首部<br>blocked：请求报文有referer首部，但无有效值<br>server_names：参数，其可以有值作为主机名或主机名模式<br>arbitrary_string：任意字符串，但可使用<em>作通配符<br>regular expression：被指定的正则表达式模式匹配到的字符<br>串,要使用~开头，例如： ~.</em>.magedu.com<br>示例：<br>valid_referers none block server_names <em>.magedu.com</em>.mageedu.com magedu.<em> mageedu.</em> ~.magedu.;<br>if ($invalid_referer) {<br>return 403;<br>}</p></li><li><p>反向代理模块ngx_http_proxy_module</p></li></ol><p>12.1 proxy_pass URL;<br>Context:location, if in location, limit_except<br>注意： proxy_pass后面的路径不带uri时，其会将location的uri传递给后端主机<br>server {<br>    …<br>    server_name HOSTNAME;<br>    location /uri/ {<br>    proxy_pass <a href="http://host[:port]" target="_blank" rel="noopener">http://host[:port]</a>;<br>    }<br>    …<br>}<br>上面示例： <a href="http://HOSTNAME/uri" target="_blank" rel="noopener">http://HOSTNAME/uri</a> –&gt; <a href="http://host/uri" target="_blank" rel="noopener">http://host/uri</a><br><a href="http://host[:port]/" target="_blank" rel="noopener">http://host[:port]/</a> 意味着： <a href="http://HOSTNAME/uri" target="_blank" rel="noopener">http://HOSTNAME/uri</a> –&gt; <a href="http://host/" target="_blank" rel="noopener">http://host/</a><br>注意：如果location定义其uri时使用了正则表达式的模式，则proxy_pass之后必须不能使用uri;<br>用户请求时传递的uri将直接附加代理到的服务的之后<br>server {<br>    …<br>    server_name HOSTNAME;<br>    location ~|~* /uri/ {<br>    proxy_pass <a href="http://host" target="_blank" rel="noopener">http://host</a>; 不能加/<br>    }<br>    …<br>}<br><a href="http://HOSTNAME/uri/" target="_blank" rel="noopener">http://HOSTNAME/uri/</a> –&gt; <a href="http://host/uri/" target="_blank" rel="noopener">http://host/uri/</a></p><p>12.2 proxy_set_header field value;<br>设定发往后端主机的请求报文的请求首部的值<br>Context: http, server, location<br>后端记录日志记录真实请求服务器IP<br>proxy_set_header    Host    $host；<br>proxy_set_header X-Real-IP $remote_addr;<br>proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br>标准格式如下：<br>X-Forwarded-For: client1, proxy1, proxy2<br>如后端是Apache服务器应更改日志格式：<br>%h —–&gt; %{X-Real-IP}i</p><p>12.3 proxy_cache_path;<br>定义可用于proxy功能的缓存； Context:http<br>proxy_cache_path path [levels=levels] [use_temp_path=on|off]<br>keys_zone=name:size [inactive=time] [max_size=size]<br>[manager_files=number] [manager_sleep=time]<br>[manager_threshold=time] [loader_files=number] [loader_sleep=time]<br>[loader_threshold=time] [purger=on|off] [purger_files=number]<br>[purger_sleep=time] [purger_threshold=time];<br>例：proxy_cache_path /data/nginx/cache（属主要为nginx） levels=1:2 keys_zone=nginxcache:20m inactive=2m</p><p>12.4 调用缓存<br>proxy_cache zone | off; 默认off<br>指明调用的缓存，或关闭缓存机制； Context: http,server, location</p><p>12.5</p><p>proxy_cache_key string;<br>缓存中用于“键”的内容<br>默认值： proxy_cache_key $scheme$proxy_host$request_uri;</p><p>12.6<br>proxy_cache_valid [code …] time;<br>定义对特定响应码的响应内容的缓存时长<br>定义在http{…}中<br>示例:<br>proxy_cache_valid 200 302 10m;<br>proxy_cache_valid 404 1m;<br>示例：<br>在http配置定义缓存信<br>proxy_cache_path /var/cache/nginx/proxy_cache<br>levels=1:1:1 keys_zone=proxycache:20m<br>inactive=120s max_size=1g;<br>调用缓存功能，需要定义在相应的配置段，如server{…}；<br>proxy_cache proxycache;<br>proxy_cache_key $request_uri;<br>proxy_cache_valid 200 302 301 1h;<br>proxy_cache_valid any 1m;</p><p>12.7<br>proxy_cache_use_stale;<br>proxy_cache_use_stale error | timeout |<br>invalid_header | updating | http_500 | http_502 |<br>http_503 | http_504 | http_403 | http_404 | off …<br>在被代理的后端服务器出现哪种情况下，可以直接使用过<br>期的缓存响应客户端</p><p>12.8</p><p>proxy_cache_methods GET | HEAD | POST …;<br>对哪些客户端请求方法对应的响应进行缓存， GET和HEAD方法总是被缓存</p><p>12.9<br>proxy_hide_header field;<br>By default, nginx does not pass the header fields<br>“Date”, “Server”, “X-Pad”, and “X-Accel-…” from the<br>response of a proxied server to a client. 用于隐藏后端服<br>务器特定的响应首部</p><p>12.10<br>proxy_connect_timeout time;<br>定义与后端服务器建立连接的超时时长，如超时会出现502错误，默认为60s，一般不建议超出75s</p><p>12.11<br>proxy_send_timeout time;<br>把请求发送给后端服务器的超时时长；默认为60s</p><p>12.12<br>proxy_read_timeout time;<br>等待后端服务器发送响应报文的超时时长， 默认为60s</p><ol start="13"><li><p>首部信息<br>add_header name value [always];<br>添加自定义首部<br>add_header X-Via $server_addr;<br>add_header X-Cache $upstream_cache_status;<br>add_header X-Accel $server_name;<br>add_trailer name value [always];<br>添加自定义响应信息的尾部</p></li><li><p>hph 相关模块ngx_http_fastcgi_module</p></li></ol><p>14.1<br>fastcgi_pass address;<br>address为后端的fastcgi server的地址<br>可用位置： location, if in location</p><p>14.2<br>fastcgi_index name;<br>fastcgi默认的主页资源<br>示例： fastcgi_index index.php;</p><p>14.3<br>fastcgi_param parameter value [if_not_empty];<br>设置传递给 FastCGI服务器的参数值，可以是文本，变<br>量或组合</p><p>示例1：<br>1）在后端服务器先配置fpm server和mariadb-server<br>2）在前端nginx服务上做以下配置：<br>location ~* .php$ {<br>    fastcgi_pass 后端fpm服务器IP:9000;<br>    fastcgi_index index.php;<br>    fastcgi_param SCRIPT_FILENAME<br>/usr/share/nginx/html$fastcgi_script_name;<br>    include     fastcgi.conf;<br>    …<br>}</p><p>示例2：<br>通过/pm_status和/ping来获取fpm server状态信息（真实服务器端php-fpm配置文件中将这两项<br>注释掉）<br>location ~* ^/(status|ping)$ {<br>    include fastcgi_params;<br>    fastcgi_pass 后端fpm服务器IP:9000;<br>    fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;<br>    include     fastcgi.conf;<br>}</p><p>14.4 fastcgi 缓存相关<br>fastcgi_cache_path path [levels=levels] [use_temp_path=on|off]<br>keys_zone=name:size [inactive=time] [max_size=size]<br>[manager_files=number] [manager_sleep=time] [manager_threshold=time]<br>[loader_files=number] [loader_sleep=time] [loader_threshold=time]<br>[purger=on|off] [purger_files=number] [purger_sleep=time]<br>[purger_threshold=time];<br>定义fastcgi的缓存；<br>path 缓存位置为磁盘上的文件系统<br>max_size=size<br>    磁盘path路径中用于缓存数据的缓存空间上限<br>levels=levels：缓存目录的层级数量，以及每一级的目录数量<br>levels=ONE:TWO:THREE<br>示例： leves=1:2:2<br>keys_zone=name:size<br>    k/v映射的内存空间的名称及大小<br>inactive=time<br>    非活动时长</p><p>14.5<br>fastcgi_cache zone | off;<br>调用指定的缓存空间来缓存数据<br>可用位置： http, server, location</p><p>14.6<br>fastcgi_cache_key string;<br>定义用作缓存项的key的字符串<br>示例： fastcgi_cache_key $request_rui;</p><p>14.7<br>fastcgi_cache_methods GET | HEAD | POST …;<br>为哪些请求方法使用缓存</p><p>14.8<br>fastcgi_cache_min_uses number;<br>缓存空间中的缓存项在inactive定义的非活动时间内至少要被访问到<br>此处所指定的次数方可被认作活动项</p><p>14.9<br>fastcgi_keep_conn on | off;<br>收到后端服务器响应后， fastcgi服务器是否关闭连接，建议启用长连接</p><p>14.10<br>fastcgi_cache_valid [code …] time;<br>不同的响应码各自的缓存时长</p><p>示例：http {<br>fastcgi_cache_path /var/cache/nginx/fcgi_cache<br>levels=1:2:1 keys_zone=fcgicache:20m inactive=120s;<br>…<br>server {<br>    location ~* .php$ {<br>    …<br>    fastcgi_cache fcgicache;<br>    fastcgi_cache_key $request_uri;<br>    fastcgi_cache_valid 200 302 10m;<br>    fastcgi_cache_valid 301 1h;<br>    fastcgi_cache_valid any 1m;<br>…<br>}<br>}</p><ol start="15"><li>代理模块ngx_http_upstream_module模块</li></ol><p>用于将多个服务器定义成服务器组，而由proxy_pass,fastcgi_pass等指令进行引用</p><p>15.1upstream name { … }<br>定义后端服务器组，会引入一个新的上下文<br>默认调度算法是wrr<br>Context: http<br>upstream httpdsrvs {<br>server …<br>server…<br>…<br>}</p><p>15.2<br>server address [parameters];<br>在upstream上下文中server成员，以及相关的参数； Context:upstream<br>address的表示格式：<br>unix:/PATH/TO/SOME_SOCK_FILE<br>IP[:PORT]<br>HOSTNAME[:PORT]<br>parameters：<br>weight=number     权重，默认为1<br>max_conns     连接后端报务器最大并发活动连接数， 1.11.5后支持<br>max_fails=number     失败尝试最大次数；超出此处指定的次数时<br>server将被标记为不可用,默认为1<br>fail_timeout=time 后端服务器标记为不可用状态的连接超时时<br>长，默认10s<br>backup 将服务器标记为“备用”，即所有服务器均不可用时才启用<br>down 标记为“不可用”，配合ip_hash使用，实现灰度发布</p><p>15.3<br>ip_hash 源地址hash调度方法</p><p>15.4<br>least_conn 最少连接调度算法，当server拥有不同的权重时其为wlc，当所有后端主机连接数相同时，<br>则使用wrr，适用于长连接</p><p>15.5<br>hash key [consistent] 基于指定的key的hash表来实<br>现对请求的调度，此处的key可以直接文本、变量或二者组合<br>作用：将请求分类，同一类请求将发往同一个upstream<br>server，使用consistent参数， 将使用ketama一致性hash算法，<br>适用于后端是Cache服务器（如varnish）时使用<br>hash $request_uri consistent;<br>hash $remote_addr;</p><p>15.6<br>keepalive 连接数N;<br>为每个worker进程保留的空闲的长连接数量,可节约nginx<br>端口，并减少连接管理的消耗</p><p>15.7<br>health_check [parameters];<br>健康状态检测机制；只能用于location上下文<br>常用参数：<br>interval=time检测的频率，默认为5秒<br>fails=number：判定服务器不可用的失败检测次数；默认为1次<br>passes=number：判定服务器可用的失败检测次数；默认为1次<br>uri=uri：做健康状态检测测试的目标uri；默认为/<br>match=NAME：健康状态检测的结果评估调用此处指定的match配置块<br>注意：仅对nginx plus有效</p><p>15.8<br>match name { … }<br>对backend server做健康状态检测时，定义其结果判断机制；<br>只能用于http上下文<br>常用的参数：<br>status code[ code …]: 期望的响应状态码<br>header HEADER[operator value]：期望存在响应首<br>部，也可对期望的响应首部的值基于比较操作符和值进行比较<br>body：期望响应报文的主体部分应该有的内容<br>注意：仅对nginx plus有效</p><ol start="16"><li>ngx_stream_core_module模块</li></ol><p>模拟反代基于tcp或udp的服务连接，即工作于传输层的反代或调度器</p><p>stream { … }<br>定义stream相关的服务； Context:main<br>stream {<br>    upstream telnetsrvs {<br>        server 192.168.22.2:23;<br>        server 192.168.22.3:23;<br>        least_conn;<br>    }<br>server {<br>    listen 10.1.0.6:23;<br>    proxy_pass telnetsrvs;<br>    }<br>}<br>listen address:port [ssl] [udp] [proxy_protocol]<br>[backlog=number] [bind] [ipv6only=on|off] [reuseport]<br>[so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];</p><ol start="17"><li>ngx_stream_proxy_module模块<br>可实现代理基于TCP， UDP (1.9.13), UNIX-domain<br>sockets的数据流<br>1 proxy_pass address;<br>指定后端服务器地址<br>2 proxy_timeout timeout;<br>无数据传输时，保持连接状态的超时时长<br>默认为10m<br>3 proxy_connect_timeout time;<br>设置nginx与被代理的服务器尝试建立连接的超时时长<br>默认为60s</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;性能相关配置&lt;br&gt;worker_processes number | auto；&lt;br&gt;worker进程的数量；通常应该为当前主机的cpu的物理核心数&lt;br&gt;worker_cpu_affinity auto [cpumask] #将work进程绑定在固定
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx 服务器配置指令</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/nginx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E4%BB%A4/"/>
    <id>https://kingle.我爱你/2018/09/05/nginx-服务器配置指令/</id>
    <published>2018-09-05T12:45:25.000Z</published>
    <updated>2018-09-06T02:54:39.706Z</updated>
    
    <content type="html"><![CDATA[<p>nginx 基础配置</p><h3 id="localtion-配置"><a href="#localtion-配置" class="headerlink" title="localtion 配置"></a>localtion 配置</h3><pre><code>语法结构: location [ =  ~  ~* ^~ ] uri{ ... }uri 变量是带匹配的请求字符, 可以是不含正则表达的字符串, 也可以是包含正则的字符串其中[ ] 中的是可选项 uri 的是必选项: 用来改变请求字符串与uri的匹配方式=  用于标准uri 前面 , 要求请求字符串与uri严格匹配,如果已经匹配成功,就停止匹配立即处理这个请求~  表示uri包含正则表达式 并且区分大小写~*  用于表示uri包含正则表达式 不区分大小写^~  要求找到表示uri和请求字符串匹配度最高的location, 然后处理这个要求</code></pre><h3 id="网站错误页面"><a href="#网站错误页面" class="headerlink" title="网站错误页面"></a>网站错误页面</h3><pre><code> 1xx：指示信息--表示请求已接收，继续处理 2xx：成功--表示请求已被成功接收、理解、接受 3xx：重定向--要完成请求必须进行更进一步的操作 4xx：客户端错误--请求有语法错误或请求无法实现 5xx：服务器端错误--服务器未能实现合法的请求 http消息    代码    含义 以移动      301     请求的数据具有新的位置,而且更改是永久的 重定向      302     请求数据临时位置更改 无法找到网页 400   可以连接到服务器,但是由于地址问题,无法找到网页 网站拒绝显示  404  可以连接到网站但是找不到网页 无法显示该页面 405  可以连接网站,页面内容无法下载,网页编写方式问题 网站无法显示该页面 500 服务器问题 未执行          501 没有讲正在访问的网站设置显示为浏览器所请求的网站 不支持版本      505  请求的协议版本信息常见: 200 OK      //客户端请求成功 400 Bad Request  //客户端请求有语法错误，不能被服务器所理解 401 Unauthorized //请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用  403 Forbidden  //服务器收到请求，但是拒绝提供服务 404 Not Found  //请求资源不存在，eg：输入了错误的URL 500 Internal Server Error //服务器发生不可预期的错误 503 Server Unavailable  //服务器当前不能处理客户端的请求，一段时间后可能恢复正常 eg：HTTP/1.1 200 OK （CRLF）        </code></pre><h3 id="常见的配置文件说明"><a href="#常见的配置文件说明" class="headerlink" title="常见的配置文件说明"></a>常见的配置文件说明</h3><pre><code>1, error_log  file | stderr [debug | info | notice | warn | error | crit | alert | emerg ]    debug  --- 调试级别      输出日志信息最全    info   --- 普通级别      输出提示信息    notice --- 注意级别      输出注意信息    warn   --- 警告级别      输出一些无关紧要的错误信息    error  --- 错误级别      有影响服务正常运行的错误    crit   --- 严重错误级别   严重错误级别    alert  --- 十分严重级别   十分严重    emerg  ---  超级严重      超级严重nginx服务器的日志文件输出到某一文件或者输出到标准输出错误输出到stder:后面则是跟的日志级别可选项, 由低到高分为debug .... emerg 设置级别后联通高级别也会别记录2, user   user group配置启动程序的用户 用户 组 希望所有能启动则不写3, worker_processes  number | autonumber 指定nginx进程做多产生woker peocess数auto nginx 自动检测进程数4, pid  file指定pid文件凡在哪里pid log/nginx.pid  注意设置的时候要配置文件名,不然找不到5, include  file包含的配置文件,引入其他的配置6, acept_mutex  on | off设置网络的连接序列化7, multi_accept  on| off 设置是否允许同时接受多个网络连接8, use  method事件驱动模型的选择9, worker_connections   number配置允许每一个workr process 最大连接数, 默认是102410, mime-type配置资源类型,mime-type是网络资源的一种媒体类型 格式: default_type mime-type11, access_log   path[format[buffer=size]]自定义服务器的日志 path: 配置服务器日志文件的存放的路径和名称 format: 可选项,自定义服务器日志的格式字符串 size: 配置临时存放日志的内存缓冲区大小12, log_format   name sting ...;与access_log联合使用 ,专门用于定义服务器日志的格式并且可以为格式定义一个名字, 让access_log 方便调用name : 格式字符串的名字 默认combinedstring 服务日志的格式字符串13, sendfile   no | off配置允许sendfile方式传输文件14, sendfile_max_chunk   size配置nginx进程的每个worker_process每次调用senfile()传输数据量最大不能超过的值15, keepalive_timeout   timeout[header_timeout];配置连接超时时间timeout 服务端对连接的保持时间header_timeout, 应答报文头部的keeplive域设置超时时间16, keepalive_repuests   number单链接请求数上限17, 配置网络监听配置监听有三种方法:    监听IP地址:    listen address[:port] [default_server] [setfib=number] [backlog=number] [rcvbuf=size]    [sndbuf=size] [deferred]    监听配置端口:    listen port [default_server] [setfib=number] [backlog=number] [rcvbuf=size] [sndbuf=size]    [accept_file=filter]    监听socket    listen unix:path [default_server] [backlog=number] [rcvbuf=size] [sndbuf=size] [accept_file=filter]    [deferred]    address : IP地址    port: 端口号    path: socket文件路径    default_server: 标识符,将此虚拟主机设置为address:port默认主机    setfib=number: 目前支队freeBSD有用 以前是0.8.44版本监听scoket关联路由表    backlog=number: 设置监听函数listen()最多永续多少网络连接挂起 freeBSD默认为-1 其他511    rcvbuf=size: 监听socket接受缓存区大小    sndbuf=size: 监听socket发送缓存区大小    deferred :标识符 将accept()设置为Deferred    accept_file=filter: 设置监听端口对请求的过滤, 自对freeBSD和netBSd 5.0+的游泳    bind: 标识符 使用独立的bind()处理address:port    ssl: 标识符,设置绘画连接使用ssl模式进行18, server_name name基于名称的虚拟主机配置对于多个匹配成功的处理优先级:    准确匹配server_name    通配符在开始时匹配server_name成功    通配符在结尾是匹配server_那么成功    正则表达式匹配server_name成功在上诉匹配模式中被多次匹配会首先处理首次匹配成的清求19, root path配置请求的根目录web服务器接收到请求后,需要在服务器指定的目录寻找请求资源,这个路径就是指定文件目录20, alias path (location模块中使用)更改location接收到的URI的请求路径 可以跟着变量信息21, index file ...;设置网站的默认首页22, error_page  code ...[=[response]] uri设置错误页面信息    code 要处理的http错误代码    resoonse 可选项 讲code指定的错误代码转化为新的错误代码    uri 错误页面的路径或者网站地址23, allow address | CIDR |all 配置基于ip的访问允许权限address 允许访问客户端的ip 不支持设置多个CIDR 允许访问的客户端的CIDR 如185.199.110.153/24all 表示所有客户端可以访问24, deny address | CIDR |all配置基于ip的访问禁止权限address 允许访问客户端的ip 不支持设置多个CIDR 允许访问的客户端的CIDR 如185.199.110.153/24all 表示所有客户端可以访问        25, auth_basic string |off配置基于密码的nginx访问权限string 开启认证功能,并配置验证式的指示信息off 关闭26, auth_basic_user_file file配置基于密码访问nginx访问的权限文件file文件需要使用绝对路径</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;nginx 基础配置&lt;/p&gt;
&lt;h3 id=&quot;localtion-配置&quot;&gt;&lt;a href=&quot;#localtion-配置&quot; class=&quot;headerlink&quot; title=&quot;localtion 配置&quot;&gt;&lt;/a&gt;localtion 配置&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;语法结构
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx 常见问题</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/nginx-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>https://kingle.我爱你/2018/09/05/nginx-常见问题/</id>
    <published>2018-09-05T09:49:18.000Z</published>
    <updated>2018-09-05T09:59:14.956Z</updated>
    
    <content type="html"><![CDATA[<p>1, 403错误</p><p>403是很常见的错误代码，一般就是未授权被禁止访问的意思。</p><p>可能的原因有两种：<br>Nginx程序用户无权限访问web目录文件<br>Nginx需要访问目录，但是autoindex选项被关闭</p><p>修复方法：<br>授予Nginx程序用户权限读取web目录文件<br>设置autoindex目录为on</p><p>location /path/to/website/folder {<br>…<br>autoindex on;<br>… }</p><p>2, 413错误</p><p>在上传时Nginx返回了413错误：“413 Request Entity Too Large”，这一般就是上传文件大小超过Nginx配置引起。</p><p>修复方法：<br>在Nginx.conf增加client_max_body_size的设置，这个值默认是1M，可以增加到8M以提高文件大小限制；<br>如果运行的是php，那么还要检查php.ini，这个大小client_max_body_size要和php.ini中的如下值的最大值一致或者稍大，这样就不会因为提交数据大小不一致出现的错误。</p><p>post_max_size = 8M<br>upload_max_filesize = 2M</p><p>3, 502错误<br>Nginx 502 Bad Gateway的含义是请求的PHP-CGI已经执行，但是由于某种原因（一般是读取资源的问题）没有执行完毕而导致PHP-CGI进程终止。一般来说Nginx 502 Bad Gateway和php-fpm.conf的设置有关。</p><p>修复方法：<br>1、查看FastCGI进程是否已经启动</p><p>ps -aux | grep php-cgi</p><p>2、检查系统Fastcgi进程运行情况</p><p>除了第一种情况，fastcgi进程数不够用、php执行时间长、或者是php-cgi进程死掉也可能造成Nginx的502错误。</p><p>运行以下命令判断是否接近FastCGI进程，如果fastcgi进程数接近配置文件中设置的数值，表明worker进程数设置太少。</p><p>netstat -anpo | grep “php-cgi” | wc -l</p><p>3、FastCGI执行时间过长</p><p>根据实际情况调高以下参数值</p><p>fastcgi_connect_timeout 300;<br>fastcgi_send_timeout 300;<br>fastcgi_read_timeout 300;</p><p>4, 504错误</p><p>Nginx 504 Gateway Time-out的含义是所请求的网关没有请求到，简单来说就是没有请求到可以执行的PHP-CGI。</p><p>Nginx 504 Gateway Time-out一般与Nginx.conf的设置有关。</p><p>头部太大这种情况可能是由于Nginx默认的fastcgi进程响应的缓冲区太小造成的， 这将导致fastcgi进程被挂起，如果你的fastcgi服务对这个挂起处理的不好，那么最后就极有可能导致504 Gateway Time-out。</p><p>默认的fastcgi进程响应的缓冲区是8K，可以调大以下参数：</p><p>fastcgi_buffer_size 128k;<br>fastcgi_buffers 8 128k;<br>fastcgi_busy_buffers_size 由 128K 改为 256K；<br>fastcgi_temp_file_write_size 由 128K 改为 256K。</p><p>此外，也可能是php-cgi的问题，需要修改php.ini的配置：</p><p>将max_children由之前的10改为30，这样操作是为了保证有充足的php-cgi进程可以被使用。<br>将request_terminate_timeout由之前的0秒改成60秒，这样使php-cgi进程处理脚本的超时时间提高到60秒，可以防止进程被挂起以提高利用效率</p><p>5, 域名重复<br>    nginx: [warn] conflicting server name “bbs.kingle.org” on 0.0.0.0:80, ignored<br>    打开nginx配置文件 查看看自己的配置文件是否域名有配置相同的</p><p>6,  pid<br> nginx: [error] open() “/application/nginx-1.14.0/logs/nginx.pid” failed (2: No such file or directory)</p><p> pid 文件没找到<br>  使用命令 nginx -c conf/nginx.conf<br>7,  worker进程用户被删除了<br>    nginx: [emerg] getpwnam(“www”) failed<br>    worker进程管理用户被删除了</p><p>8,  服务已经启动,不要反复启动<br>    [root@web01 www]# nginx<br>    nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)<br>    nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)<br>    nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)<br>    nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)<br>    nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)<br>    nginx: [emerg] still could not bind()</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1, 403错误&lt;/p&gt;
&lt;p&gt;403是很常见的错误代码，一般就是未授权被禁止访问的意思。&lt;/p&gt;
&lt;p&gt;可能的原因有两种：&lt;br&gt;Nginx程序用户无权限访问web目录文件&lt;br&gt;Nginx需要访问目录，但是autoindex选项被关闭&lt;/p&gt;
&lt;p&gt;修复方法：&lt;br&gt;授
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>rsync 常见问题</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/rsync-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>https://kingle.我爱你/2018/09/05/rsync-常见问题/</id>
    <published>2018-09-05T09:49:06.000Z</published>
    <updated>2018-09-05T09:52:10.228Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rsync服务常见问题汇总讲解："><a href="#Rsync服务常见问题汇总讲解：" class="headerlink" title="Rsync服务常见问题汇总讲解："></a>Rsync服务常见问题汇总讲解：</h1><ol><li><p>rsync服务端开启的iptables防火墙<br>【客户端的错误】<br>No route to host<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>rsync: failed to connect to 172.16.1.41: No route to host (113)<br>rsync error: error in socket IO (code 10) at clientserver.c(124) [sender=3.0.6]<br>【异常问题解决】<br>关闭rsync服务端的防火墙服务（iptables）<br>[root@backup mnt]# /etc/init.d/iptables stop<br>iptables: Setting chains to policy ACCEPT: filter          [  OK  ]<br>iptables: Flushing firewall rules:                         [  OK  ]<br>iptables: Unloading modules:                               [  OK  ]<br>[root@backup mnt]# /etc/init.d/iptables status<br>iptables: Firewall is not running.</p></li><li><p>rsync客户端执行rsync命令错误<br>【客户端的错误】<br>The remote path must start with a module name not a /<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::/backup<br>ERROR: The remote path must start with a module name not a /<br>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]<br>【异常问题解决】<br>rsync命令语法理解错误，::/backup是错误的语法，应该为::backup(rsync模块)</p></li><li><p>rsync服务认证用户失败<br>【客户端的错误】<br>auth failed on module kingle<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>Password:<br>@ERROR: auth failed on module backup<br>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]<br>【异常问题解决】</p><ol><li>密码真的输入错误，用户名真的错误</li><li>secrets file = /etc/rsync.password指定的密码文件和实际密码文件名称不一致</li><li>/etc/rsync.password文件权限不是600</li><li>rsync_backup:123456密码配置文件后面注意不要有空格</li><li>rsync客户端密码文件中只输入密码信息即可，不要输入虚拟认证用户名称</li></ol></li><li><p>rsync服务位置模块错误<br>【客户端的错误】<br>Unknown module ‘backup’<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>@ERROR: Unknown module ‘backup’<br>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]<br>【异常问题解决】</p><ol><li>/etc/rsyncd.conf配置文件模块名称书写错误</li></ol></li><li><p>rsync服务权限阻止问题<br>【客户端的错误】<br>Permission denied<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>Password:<br>sending incremental file list<br>hosts<br>rsync: mkstemp “.hosts.5z3AOA” (in backup) failed: Permission denied (13)<br>sent 196 bytes  received 27 bytes  63.71 bytes/sec<br>total size is 349  speedup is 1.57<br>rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]<br>【异常问题解决】</p><ol><li>共享目录的属主和属组不正确，不是rsync</li><li>共享目录的权限不正确，不是755</li></ol></li><li><p>rsync服务备份目录异常<br>【客户端的错误】<br>chdir failed<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>Password:<br>@ERROR: chdir failed<br>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]<br>【异常问题解决】  </p><ol><li>备份存储目录没有建立</li><li>建立的备份存储目录和配置文件定义不一致<br>说明：如果没有备份存储目录</li></ol></li><li><p>rsync服务无效用户信息<br>【客户端的错误】<br>invalid uid rsync<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>Password:<br>@ERROR: invalid uid rsync<br>rsync error: error starting client-server protocol (code 5) at main.c(1503) [sender=3.0.6]<br>【异常问题解决】<br>rsync服务对应rsync虚拟用户不存在了</p></li><li><p>客户端已经配置了密码文件，但免秘钥登录方式，依旧需要输入密码<br>【客户端的错误】<br>password file must not be other-accessible<br>【错误演示过程】<br>[root@nfs01 tmp]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup –password-file=/etc/rsync.password<br>password file must not be other-accessible<br>continuing without password file<br>Password:<br>sending incremental file list<br>sent 26 bytes  received 8 bytes  5.23 bytes/sec<br>total size is 349  speedup is 10.26<br>【异常问题解决】<br>rsync客户端的秘钥文件也必须是600权限</p></li><li><p>rsync客户端连接慢问题<br>【错误日志信息】<br>错误日志输出<br>2017/03/08 20:14:43 [3422] params.c:Parameter() - Ignoring badly formed line in configuration file: ignore errors<br>2017/03/08 20:14:43 [3422] name lookup failed for 172.16.1.31: Name or service not known<br>2017/03/08 20:14:43 [3422] connect from UNKNOWN (172.16.1.31)<br>2017/03/08 20:14:43 [3422] rsync to backup/ from rsync_backup@unknown (172.16.1.31)<br>2017/03/08 20:14:43 [3422] receiving file list<br>2017/03/08 20:14:43 [3422] sent 76 bytes  received 83 bytes  total size 349<br>正确日志输出<br>2017/03/08 20:16:45 [3443] params.c:Parameter() - Ignoring badly formed line in configuration file: ignore errors<br>2017/03/08 20:16:45 [3443] connect from nfs02 (172.16.1.31)<br>2017/03/08 20:16:45 [3443] rsync to backup/ from rsync_backup@nfs02 (172.16.1.31)<br>2017/03/08 20:16:45 [3443] receiving file list<br>2017/03/08 20:16:45 [3443] sent 76 bytes  received 83 bytes  total size 349<br>【异常问题解决】<br>查看日志进行分析，编写rsync服务端hosts解析文件</p></li></ol><p>10 rsync服务没有正确启动<br>  【错误日志信息】<br>   Connection refused (111)<br>  【错误演示过程】<br>   [root@kingle-muban ~]#  rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>   rsync: failed to connect to 172.16.1.41: Connection refused (111)<br>   rsync error: error in socket IO (code 10) at clientserver.c(124) [sender=3.0.6]<br>  【异常问题解决】<br>   [root@kingle-muban ~]# rsync –daemon<br>   [root@kingle-muban ~]# ss -lntup |grep rsync<br>   tcp    LISTEN     0      5                     :::873                  :::<em>      users:((“rsync”,1434,5))<br>   tcp    LISTEN     0      5                      </em>:873                   <em>:</em>      users:((“rsync”,1434,4))<br>   [root@kingle-muban ~]# rsync -avz /etc/hosts <a href="mailto:rsync_backup@172.16.1.41" target="_blank" rel="noopener">rsync_backup@172.16.1.41</a>::backup<br>   Password:<br>   sending incremental file list<br>   hosts<br>   sent 196 bytes  received 27 bytes  49.56 bytes/sec<br>   total size is 349  speedup is 1.57</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Rsync服务常见问题汇总讲解：&quot;&gt;&lt;a href=&quot;#Rsync服务常见问题汇总讲解：&quot; class=&quot;headerlink&quot; title=&quot;Rsync服务常见问题汇总讲解：&quot;&gt;&lt;/a&gt;Rsync服务常见问题汇总讲解：&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;rsync
      
    
    </summary>
    
    
      <category term="rsync" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>nfs 常见问题</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/nfs-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>https://kingle.我爱你/2018/09/05/nfs-常见问题/</id>
    <published>2018-09-05T09:48:51.000Z</published>
    <updated>2018-09-05T09:50:33.681Z</updated>
    
    <content type="html"><![CDATA[<p> 总结nfs服务常见问题:</p><ol><li><p>[root@backup read]# touch r01.txt<br>touch: cannot touch `r01.txt’: Stale file handle<br>使用共享目录创建文件出现文件句柄错误<br>原因:<br>nfs服务端对共享目录进行了调整, 但是调整时客户端还在使用相应的共享目录<br>解决方法:<br>将和相应共享目录相关的所有挂载点进行卸载,然后重新挂载即可</p></li><li><p>[root@nfs-client1 ~]# showmount -e 10.0.0.7        &lt;- 恭喜·各位，这里遇到了故障<br>clnt_create: RPC: Port mapper failure - Unable to receive: errno 113 (No route to host)<br>原因:<br>防火墙iptables服务开启了<br>解决:<br>关闭防火墙即可</p></li><li><p>第二个错误：<br>“RPC: Program not registered”<br>原因:<br>提示很清楚了，是服务器端RPC服务和NFS服务存在启动顺序问题。</p></li><li><p>客户端挂载报错“No such file or directory”<br>[root@nfs-client ~]# showmount -e 172.16.1.31<br>Export list for 172.16.1.31:<br>/data    172.16.1.0/24<br>[root@nfs-client ~]# mount -t nfs 172.16.1.31:/data /mnt<br>mount.nfs: mounting 172.16.1.31:/data failed, reason given by server: No such file or directory<br>解答：原因是NFS服务器端没有共享目录/data，创建即可。命令如下：<br>[root@nfs-server ~]# mkdir /data</p></li><li><p>卸载挂载设备时显示device is busy。<br>[root@nfs-client mnt]# umount /mnt<br>umount.nfs: /mnt: device is busy<br>umount.nfs: /mnt: device is busy<br>解决方式:<br>umount -lf /read/<br>-l   Lazy  unmount  – 懒惰的进行卸载<br>-f   Force unmount (in case of an unreachable NFS system)  — 实现强制卸载</p></li><li><p>共享目录挂载后,创建文件很慢<br>mount -t nfs 172.16.1.31:/data /mnt<br>cd /mnt<br>time touch test.txt<br>原因分析：<br>l NFS服务端重启之后。立刻进行挂载会出现此问题，因为NFS自身重启的时候，拥有无敌的时间，默认是90秒；在无敌时间内，是不能对共享目录进行更改的操作；<br>l 在系统配置中/etc/sysconfig/nfs中指定了无敌时间的配置参数<br>NFSD_V4_GRACE=90<br>NFSD_V4_LEASE=90<br>NLM_GRACE_PERI0D=90</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 总结nfs服务常见问题:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;[root@backup read]# touch r01.txt&lt;br&gt;touch: cannot touch `r01.txt’: Stale file handle&lt;br&gt;使用共享目录创建文件出现文件句柄错误
      
    
    </summary>
    
    
      <category term="nfs" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/%E8%B7%9F%E6%88%91%E4%B8%80%E8%B5%B7%E5%AD%A6%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://kingle.我爱你/2018/09/05/跟我一起学正则表达式/</id>
    <published>2018-09-05T03:42:58.740Z</published>
    <updated>2018-09-06T00:29:46.917Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: 跟我一起学正则表达式<br>date: 2018-07-11 19:54:45</p><h2 id="tags-正则表达式"><a href="#tags-正则表达式" class="headerlink" title="tags: 正则表达式"></a>tags: 正则表达式</h2><h3 id="一，"><a href="#一，" class="headerlink" title="一，"></a>一，</h3><pre><code>---&gt;  \(?0\d{2}[) -]?\d{8}看到这个了吗？？今晚我们的目标很简单的</code></pre><p>###　二，<br>        1) 什么是正则表达式</p><pre><code>正则表达式为了处理大量的文本|字符串而定义的一套规则和方法　　２）为何使用正则表达式linux运维工作，大量操作命令，化繁为简。正则表达式高级工具：支持三剑客 ---慢慢来后面讲</code></pre><h3 id="三，"><a href="#三，" class="headerlink" title="三，"></a>三，</h3><pre><code>    正则表达式从入门到入狱，从删库到跑路dos 通配符：    *：任意的字符串        （你要寻找摸个目录下的txt文件，泥就可以输入*.txt，表示目录下所有带.txt的文件）    ?: 代替任意单个字符        （你可能输入单词会突然有一个字母记不住或者多个，你就可以he？？o，这样就能搜索到很多hello，heqwo，heoko等等只要那两个字母不同就能匹配）正则表达式--&gt;        \b 代表着单词的开头和结尾--&gt;搜索单词的时候在单词的开头结尾输入\b            eg：你要精确搜索hello --&gt; \bhello\b        \d 匹配一位数字        .    匹配除换行符以外的任意字符        \w    匹配字母或数字或下划线或汉字        \s    匹配任意的空白符        \d    匹配数字        \b    匹配单词的开始或结束        ^    匹配字符串的开始        $    匹配字符串的结束</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: 跟我一起学正则表达式&lt;br&gt;date: 2018-07-11 19:54:45&lt;/p&gt;
&lt;h2 id=&quot;tags-正则表达式&quot;&gt;&lt;a href=&quot;#tags-正则表达式&quot; class=&quot;headerlink&quot; title=&quot;tags: 正则表达式&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>lnmp 编译安装脚本</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/lnmp-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
    <id>https://kingle.我爱你/2018/09/05/lnmp-编译安装脚本/</id>
    <published>2018-09-05T01:59:58.000Z</published>
    <updated>2018-09-05T02:16:34.194Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#########################################################</span><br><span class="line">#by：kingle#</span><br><span class="line">#use: fast lnmp#</span><br><span class="line">#version:1.0#</span><br><span class="line">#php:php-7.2.8#</span><br><span class="line">#nginx:1.15.1#</span><br><span class="line">#mysql:5.6.41#</span><br><span class="line">#cenos:2.6.32-754.2.1.el6.x86_64#</span><br><span class="line">#########################################################</span><br><span class="line">dir=/root/opt</span><br><span class="line">nginx_install_dir=&quot;/lnmp/nginx&quot;</span><br><span class="line">mysql_install_dir=&quot;/lnmp/mysql&quot;</span><br><span class="line">php_install_path=&quot;/lnmp/php&quot;</span><br><span class="line">nginx_name=&quot;nginx-1.15.1.tar.gz&quot;</span><br><span class="line">mysql_name=&quot;mysql-5.6.41.tar.gz&quot;</span><br><span class="line">php_name=&quot;php-7.2.8.tar.gz&quot;</span><br><span class="line">[ -f /etc/init.d/functions ] &amp;&amp; . /etc/init.d/functions || exit 1</span><br><span class="line">#安装nginx</span><br><span class="line">install_nginx()&#123;</span><br><span class="line">#跟新源</span><br><span class="line">  wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repo</span><br><span class="line"> # 安装依赖包</span><br><span class="line">  yum install -y pcre pcre-devel openssl openssl-devel gcc make gcc-c++</span><br><span class="line">  [ -e $dir ] &amp;&amp; cd $dir</span><br><span class="line">  if [ -f $nginx_name ]</span><br><span class="line">    then</span><br><span class="line">      echo &apos;nginx need have&apos;</span><br><span class="line">      # t解压文件</span><br><span class="line">      tar zxf $nginx_name &amp;&amp; cd nginx-1.15.1</span><br><span class="line">      # 添加僵尸用户</span><br><span class="line">      useradd nginx -s /sbin/nologin -M</span><br><span class="line">      # 编译安装</span><br><span class="line">      ./configure --user=nginx --group=nginx --prefix=/lnmp/nginx-1.15.1/ --with-http_stub_status_module --with-http_ssl_module</span><br><span class="line">      [ $(echo $?) -eq 0 ] &amp;&amp; make &amp;&amp; make install</span><br><span class="line">      [ $(echo $?) -eq 0 ] &amp;&amp; echo &quot;nginx install success....&quot;    </span><br><span class="line">    #创建软链接</span><br><span class="line">    ln -s  /lnmp/nginx-1.15.1 /lnmp/nginx</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">#开启脚本</span><br><span class="line">start_nginx()&#123;</span><br><span class="line">service iptables stop</span><br><span class="line">setenforce 0 </span><br><span class="line">/lnmp/nginx/sbin/nginx -c  /lnmp/nginx-1.15.1//conf/nginx.conf</span><br><span class="line">$nginx_install_dir/sbin/nginx -t </span><br><span class="line"> if [ $(echo $?) -eq 0 ]</span><br><span class="line">   then</span><br><span class="line">     $nginx_install_dir/sbin/nginx -s reload</span><br><span class="line">     if [ $(netstat -lutnp|grep 80|wc -l) -eq 1 ]</span><br><span class="line">       then</span><br><span class="line">         action &quot;nginx success...&quot;  /bin/true</span><br><span class="line">     else</span><br><span class="line">         echo &quot;nginx error！&quot;</span><br><span class="line">     fi</span><br><span class="line"> fi</span><br><span class="line">&#125;</span><br><span class="line">install_mysql()&#123;</span><br><span class="line">  yum install -y ncurses-devel automake autoconf bison libtool-ltdl-devel</span><br><span class="line">  [ -e $dir ] &amp;&amp; cd $dir</span><br><span class="line">  if [ -f $mysql_name ]</span><br><span class="line">    then</span><br><span class="line">      yum install cmake -y</span><br><span class="line">      tar zxvf $mysql_name</span><br><span class="line">      if [ ! -d $mysql_install_dir ]</span><br><span class="line">        then</span><br><span class="line">          mkdir -p $mysql_install_dir</span><br><span class="line">      fi</span><br><span class="line">      groupadd mysql</span><br><span class="line">      useradd -s /sbin/nologin -g mysql -M mysql</span><br><span class="line">      mkdir -p /lnmp/mysql-5.6.41/data</span><br><span class="line">      cd $dir/mysql-5.6.41</span><br><span class="line">  cmake -DCMAKE_INSTALL_PREFIX=/lnmp/mysql-5.6.41 -DMYSQL_DATADIR=/lnmp/mysql-5.6.41/data -DMYSQL_UNIX_ADDR=/lnmp/mysql-5.6.41/tmp/mysql.sock -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_ZLIB=bundled -DWITH_SSL=bundled -DWITH_EMBEDDED_SERVER=1 -DENABLED_LOCAL_INFILE=1 -DENABLE_DOWNLOADS=1 -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DEXTRA_CHARSETS=all -DMYSQL_TCP_PORT=3306 -DWITH_DEBUG=0      </span><br><span class="line">  make &amp;&amp; make install</span><br><span class="line">      ln -s /lnmp/mysql-5.6.41/ /lnmp/mysql</span><br><span class="line">      /lnmp/mysql-5.6.41/scripts/mysql_install_db --user=mysql --basedir=/lnmp/mysql-5.6.41 --datadir=/lnmp/mysql-5.6.41/data --user=mysql</span><br><span class="line">      #授权</span><br><span class="line">      chown -R mysql:mysql /lnmp/mysql-5.6.41/</span><br><span class="line">      #创建目录，默认不会创建，但是启动会报错</span><br><span class="line">      mkdir /lnmp/mysql/tmp</span><br><span class="line">      [ $(echo $?) -eq 0 ] &amp;&amp; \cp -f /lnmp/mysql-5.6.41/support-files/my*.cnf /etc/my.cnf</span><br><span class="line">      cp /lnmp/mysql-5.6.41/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">      # 加权限</span><br><span class="line">      chmod +x /etc/init.d/mysqld</span><br><span class="line"># 自启</span><br><span class="line">      chkconfig --add mysqld</span><br><span class="line">      chkconfig mysqld on</span><br><span class="line">      # 加环境</span><br><span class="line">      PATH=$PATH:/lnmp/mysql-5.6.41/bin/</span><br><span class="line">      #添加环境</span><br><span class="line">      echo &quot;export PATH=$PATH:/lnmp/mysql/bin/&quot; &gt;&gt;/etc/profile</span><br><span class="line">      source /etc/profile</span><br><span class="line">  fi   </span><br><span class="line">&#125;</span><br><span class="line">#启动函数</span><br><span class="line">start_mysql()&#123;</span><br><span class="line">  /etc/init.d/mysqld start   </span><br><span class="line">  if [ $(netstat -lutnp|grep 3306|wc -l) -eq 1 ]</span><br><span class="line">    then</span><br><span class="line">      action &quot;mysql success&quot;  /bin/true</span><br><span class="line">  else</span><br><span class="line">      echo &quot;mysql error！&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 安装php</span><br><span class="line">install_php()&#123;</span><br><span class="line">    yum install zlib-devel openssl-devel openssl libxml2-devel libjpeg-devel libjpeg-turbo-devel libiconv-devel freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel libxslt-devel libmcrypt-devel mcrypt mhash -y</span><br><span class="line">  [ -e $dir ] &amp;&amp; cd $dir</span><br><span class="line">  if [ -f $php_name ]</span><br><span class="line">    then</span><br><span class="line">      tar zxf $php_name  &amp;&amp; cd php-7.2.8</span><br><span class="line"></span><br><span class="line">      echo &quot;Please witing loding................................................................&quot;</span><br><span class="line">       #编译安装</span><br><span class="line">        ./configure --prefix=/lnmp/php7.2.8 --with-mysql=/lnmp/mysql --with-iconv-dir=/usr/local/libiconv  --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-safe-mode --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --with-curlwrappers --enable-mbregex --enable-fpm --enable-mbstring --with-mcrypt --enable-gd-native-ttf --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc  --enable-zip --enable-soap --enable-short-tags --enable-zend-multibyte --enable-static --with-xsl --with-fpm-user=nginx --with-fpm-group=nginx --enable-ftp       </span><br><span class="line">        [ $(echo $?) -eq 0 ] &amp;&amp; ln -s /lnmp/mysql/lib/libmysqlclient.so.18 /usr/lib64/ &amp;&amp; touch ext/phar/phar.phar</span><br><span class="line">      make &gt;&gt; /dev/null 2&gt;&amp;1</span><br><span class="line">      make install</span><br><span class="line">       ln -s /lnmp/php7.2.8 /lnmp/php</span><br><span class="line">         cp ./php.ini-production /lnmp/php/lib/php.ini</span><br><span class="line">      cp /lnmp/php/etc/php-fpm.conf.default /lnmp/php/etc/php-fpm.conf</span><br><span class="line">      cp /lnmp/php/etc/php-fpm.d/www.conf.default /lnmp/php/etc/php-fpm.d/www.conf</span><br><span class="line">      cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm    </span><br><span class="line">      #授予权限最好是700</span><br><span class="line">      chmod +x /etc/init.d/php-fpm  </span><br><span class="line">      PATH=$PATH:/lnmp/php/bin/</span><br><span class="line">      echo &quot;export PATH=$PATH:/lnmp/php/bin/&quot; &gt;&gt;/etc/profile</span><br><span class="line">      source /etc/profile</span><br><span class="line">      chkconfig --add php-fpm</span><br><span class="line">      chkconfig php-fpm  on</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 启动函数</span><br><span class="line">start_phpfpm()&#123;</span><br><span class="line">  /etc/init.d/php-fpm start</span><br><span class="line">  if [ $(netstat -lutnp|grep 9000|wc -l) -eq 1 ]</span><br><span class="line">    then</span><br><span class="line">      action &quot;php-fpm success&quot; /bin/true</span><br><span class="line">  else</span><br><span class="line">      echo &quot;php-fpm error&quot;</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">   install_nginx</span><br><span class="line">   sleep 3</span><br><span class="line">   install_mysql</span><br><span class="line">   sleep 3</span><br><span class="line">   install_php</span><br><span class="line">   start_nginx</span><br><span class="line">   sleep 2</span><br><span class="line">   start_mysql</span><br><span class="line">   sleep 2</span><br><span class="line">   start_phpfpm</span><br><span class="line">&#125;</span><br><span class="line">main</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="lnmp shell" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/lnmp-shell/"/>
    
  </entry>
  
  <entry>
    <title>vim自定义配置文件</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/vim%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>https://kingle.我爱你/2018/09/05/vim自定义配置文件/</id>
    <published>2018-09-05T01:57:31.000Z</published>
    <updated>2018-09-05T01:59:19.162Z</updated>
    
    <content type="html"><![CDATA[<p>内容复制即可使用 .vimrc </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">set tabstop=4</span><br><span class="line">set shiftwidth=4</span><br><span class="line">set softtabstop=4</span><br><span class="line">set noexpandtab</span><br><span class="line">set nu</span><br><span class="line">syntax on                       &quot; 语法高亮</span><br><span class="line">set ruler                       &quot; 显示标尺</span><br><span class="line">set showcmd                     &quot; 输入的命令显示出来，看的清楚些</span><br><span class="line">set cmdheight=1                 &quot; 命令行（在状态行下）的高度，设置为1</span><br><span class="line">set scrolloff=3                 &quot; 光标移动到buffer的顶部和底部时保持3行距离</span><br><span class="line">set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;   &quot; 状态行显示的内容</span><br><span class="line">set laststatus=2                &quot; 启动显示状态行(1),总是显示状态行(2)</span><br><span class="line">set nocompatible                &quot; 去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限</span><br><span class="line">&quot; 设置当文件被改动时自动载入</span><br><span class="line">set autoread</span><br><span class="line">&quot; 代码补全</span><br><span class="line">set completeopt=preview,menu</span><br><span class="line">&quot; 突出显示当前行</span><br><span class="line">set cursorline</span><br><span class="line">&quot; 在处理未保存或只读文件的时候，弹出确认</span><br><span class="line">set confirm</span><br><span class="line">&quot; 自动缩进</span><br><span class="line">set autoindent</span><br><span class="line">set cindent</span><br><span class="line">&quot;禁止生成临时文件</span><br><span class="line">set nobackup</span><br><span class="line">set noswapfile</span><br><span class="line">&quot;搜索忽略大小写</span><br><span class="line">set ignorecase</span><br><span class="line">&quot;搜索逐字符高亮</span><br><span class="line">set hlsearch</span><br><span class="line">set incsearch</span><br><span class="line">&quot;行内替换</span><br><span class="line">set gdefault</span><br><span class="line">&quot; 侦测文件类型</span><br><span class="line">filetype on</span><br><span class="line">&quot; 载入文件类型插件</span><br><span class="line">filetype plugin on</span><br><span class="line">&quot; 为特定文件类型载入相关缩进文件</span><br><span class="line">filetype indent on</span><br><span class="line">&quot; 保存全局变量</span><br><span class="line">set viminfo+=!</span><br><span class="line">&quot; 带有如下符号的单词不要被换行分割</span><br><span class="line">set iskeyword+=_,$,@,%,#,-</span><br><span class="line">&quot; 字符间插入的像素行数目</span><br><span class="line">set linespace=0</span><br><span class="line">&quot; 允许backspace和光标键跨越行边界</span><br><span class="line">set whichwrap+=&lt;,&gt;,h,l</span><br><span class="line">&quot; 高亮显示匹配的括号</span><br><span class="line">set showmatch</span><br><span class="line">&quot; 匹配括号高亮的时间（单位是十分之一秒）</span><br><span class="line">set matchtime=1</span><br><span class="line">&quot; 使回格键（backspace）正常处理indent, eol, start等</span><br><span class="line">set backspace=2</span><br><span class="line">&quot; 字符间插入的像素行数目</span><br><span class="line">set linespace=0</span><br><span class="line">&quot; 增强模式中的命令行自动完成操作</span><br><span class="line">set wildmenu</span><br><span class="line">&quot; 通过使用: commands命令，告诉我们文件的哪一行被改变过</span><br><span class="line">set report=0</span><br><span class="line">au BufRead,BufNewFile *  setfiletype txt</span><br><span class="line">&quot;自动补全</span><br><span class="line">:inoremap ( ()&lt;ESC&gt;i</span><br><span class="line">:inoremap ) &lt;c-r&gt;=ClosePair(&apos;)&apos;)&lt;CR&gt;</span><br><span class="line">:inoremap &#123; &#123;&lt;CR&gt;&#125;&lt;ESC&gt;O</span><br><span class="line">:inoremap &#125; &lt;c-r&gt;=ClosePair(&apos;&#125;&apos;)&lt;CR&gt;</span><br><span class="line">:inoremap [ []&lt;ESC&gt;i</span><br><span class="line">:inoremap ] &lt;c-r&gt;=ClosePair(&apos;]&apos;)&lt;CR&gt;</span><br><span class="line">:inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span><br><span class="line">:inoremap &apos; &apos;&apos;&lt;ESC&gt;i</span><br><span class="line">function! ClosePair(char)</span><br><span class="line">    if getline(&apos;.&apos;)[col(&apos;.&apos;) - 1] == a:char</span><br><span class="line">        return &quot;\&lt;Right&gt;&quot;</span><br><span class="line">    else</span><br><span class="line">        return a:char</span><br><span class="line">    endif</span><br><span class="line">endfunction</span><br><span class="line">filetype plugin indent on</span><br><span class="line">&quot;打开文件类型检测, 加了这句才可以用智能补全</span><br><span class="line">set completeopt=longest,menu</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;新文件标题&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;新建.c,.h,.sh,.java文件，自动插入文件头</span><br><span class="line">autocmd BufNewFile *.cpp,*.[ch],*.sh,*.java exec &quot;:call SetTitle()&quot;</span><br><span class="line">&quot;&quot;定义函数SetTitle，自动插入文件头</span><br><span class="line">func SetTitle()</span><br><span class="line">    &quot;如果文件类型为.sh文件</span><br><span class="line">    if &amp;filetype == &apos;sh&apos;</span><br><span class="line">        call setline(1,&quot;\#########################################################################&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;), &quot;\#    File Name: &quot;.expand(&quot;%&quot;))</span><br><span class="line">        call append(line(&quot;.&quot;)+1, &quot;\#    Author: kingle&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+2, &quot;\#    Mail: kingle_work@163.com &quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+3, &quot;\#    Created Time: &quot;.strftime(&quot;%c&quot;))</span><br><span class="line">        call append(line(&quot;.&quot;)+4, &quot;\#########################################################################&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+5, &quot;\#!/bin/bash&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+6, &quot;&quot;)</span><br><span class="line">    else</span><br><span class="line">        call setline(1, &quot;//-------------------------------------------------------------------------&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;), &quot;//    File Name: &quot;.expand(&quot;%&quot;))</span><br><span class="line">        call append(line(&quot;.&quot;)+1, &quot;//    Author: kingle&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+2, &quot;//    Mail: kingle_work@163.com &quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+3, &quot;//    Created Time: &quot;.strftime(&quot;%c&quot;))</span><br><span class="line">        call append(line(&quot;.&quot;)+4, &quot;//-------------------------------------------------------------------------&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+5, &quot;&quot;)</span><br><span class="line">    endif</span><br><span class="line">    if &amp;filetype == &apos;cpp&apos;</span><br><span class="line">        call append(line(&quot;.&quot;)+6, &quot;#include&lt;iostream&gt;&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+7, &quot;using namespace std;&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+8, &quot;&quot;)</span><br><span class="line">    endif</span><br><span class="line">    if &amp;filetype == &apos;c&apos;</span><br><span class="line">        call append(line(&quot;.&quot;)+6, &quot;#include&lt;stdio.h&gt;&quot;)</span><br><span class="line">        call append(line(&quot;.&quot;)+7, &quot;&quot;)</span><br><span class="line">    endif</span><br><span class="line">    &quot;新建文件后，自动定位到文件末尾</span><br><span class="line">    autocmd BufNewFile * normal G</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot;键盘命令</span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">nmap &lt;leader&gt;w :w!&lt;cr&gt;</span><br><span class="line">nmap &lt;leader&gt;f :find&lt;cr&gt;</span><br><span class="line"></span><br><span class="line">&quot; 映射全选+复制 ctrl+a</span><br><span class="line">map &lt;C-A&gt; ggVGY</span><br><span class="line">map! &lt;C-A&gt; &lt;Esc&gt;ggVGY</span><br><span class="line">map &lt;F12&gt; gg=G</span><br><span class="line">&quot; 选中状态下 Ctrl+c 复制</span><br><span class="line">vmap &lt;C-c&gt; &quot;+y</span><br><span class="line">&quot;去空行</span><br><span class="line">nnoremap &lt;F2&gt; :g/^\s*$/d&lt;CR&gt;</span><br><span class="line">&quot;比较文件</span><br><span class="line">nnoremap &lt;C-F2&gt; :vert diffsplit</span><br><span class="line">&quot;新建标签</span><br><span class="line">map &lt;M-F2&gt; :tabnew&lt;CR&gt;</span><br><span class="line">&quot;列出当前目录文件</span><br><span class="line">map &lt;F3&gt; :tabnew .&lt;CR&gt;</span><br><span class="line">&quot;打开树状文件目录</span><br><span class="line">map &lt;C-F3&gt; \be</span><br><span class="line">&quot;C，C++ 按F5编译运行</span><br><span class="line">map &lt;F5&gt; :call CompileRunGcc()&lt;CR&gt;</span><br><span class="line">func! CompileRunGcc()</span><br><span class="line">    exec &quot;w&quot;</span><br><span class="line">    if &amp;filetype == &apos;c&apos;</span><br><span class="line">        exec &quot;!g++ % -o %&lt;&quot;</span><br><span class="line">        exec &quot;! ./%&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &apos;cpp&apos;</span><br><span class="line">        exec &quot;!g++ % -o %&lt;&quot;</span><br><span class="line">        exec &quot;! ./%&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &apos;java&apos;</span><br><span class="line">        exec &quot;!javac %&quot;</span><br><span class="line">        exec &quot;!java %&lt;&quot;</span><br><span class="line">    elseif &amp;filetype == &apos;sh&apos;</span><br><span class="line">        :!./%</span><br><span class="line">    endif</span><br><span class="line">endfunc</span><br><span class="line">&quot;C,C++的调试</span><br><span class="line">map &lt;F8&gt; :call Rungdb()&lt;CR&gt;</span><br><span class="line">func! Rungdb()</span><br><span class="line">    exec &quot;w&quot;</span><br><span class="line">    exec &quot;!g++ % -g -o %&lt;&quot;</span><br><span class="line">    exec &quot;!gdb ./%&lt;&quot;</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">&quot; CTags的设定</span><br><span class="line">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class="line">let Tlist_Sort_Type = &quot;name&quot;    &quot; 按照名称排序</span><br><span class="line">let Tlist_Use_Right_Window = 1  &quot; 在右侧显示窗口</span><br><span class="line">let Tlist_Compart_Format = 1    &quot; 压缩方式</span><br><span class="line">let Tlist_Exist_OnlyWindow = 1  &quot; 如果只有一个buffer，kill窗口也kill掉buffer</span><br><span class="line">let Tlist_File_Fold_Auto_Close = 0  &quot; 不要关闭其他文件的tags</span><br><span class="line">let Tlist_Enable_Fold_Column = 0    &quot; 不要显示折叠树</span><br><span class="line">let Tlist_Show_One_File=1            &quot;不同时显示多个文件的tag，只显示当前文件的</span><br><span class="line">&quot;设置tags</span><br><span class="line">set tags=tags</span><br><span class="line">&quot;set autochdir</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;内容复制即可使用 .vimrc &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="vim" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>linux 系统优化脚本</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/linux-%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96%E8%84%9A%E6%9C%AC/"/>
    <id>https://kingle.我爱你/2018/09/05/linux-系统优化脚本/</id>
    <published>2018-09-05T01:52:18.000Z</published>
    <updated>2018-09-05T01:59:39.689Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># Date: 2018-6-8</span><br><span class="line">#version:1.2</span><br><span class="line">#实现功能：一键系统优化15项脚本，适用于Centos6.x</span><br><span class="line">################################################</span><br><span class="line">#Source function library.</span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">#date</span><br><span class="line">DATE=`date +&quot;%y-%m-%d %H:%M:%S&quot;`</span><br><span class="line">#ip</span><br><span class="line">IPADDR=`grep &quot;IPADDR&quot; /etc/sysconfig/network-scripts/ifcfg-eth0|cut -d= -f 2 `</span><br><span class="line">#hostname</span><br><span class="line">HOSTNAME=`hostname -s`</span><br><span class="line">#user</span><br><span class="line">USER=`whoami`</span><br><span class="line">#disk_check</span><br><span class="line">DISK_SDA=`df -h |grep -w &quot;/&quot; |awk &apos;&#123;print $5&#125;&apos;`</span><br><span class="line">#cpu_average_check</span><br><span class="line">cpu_uptime=`cat /proc/loadavg|awk &apos;&#123;print $1,$2,$3&#125;&apos;`</span><br><span class="line">#set LANG</span><br><span class="line">export LANG=zh_CN.UTF-8</span><br><span class="line">#Require root to run this script.</span><br><span class="line">uid=`id | cut -d\( -f1 | cut -d= -f2`</span><br><span class="line">if [ $uid -ne 0 ];then</span><br><span class="line">  action &quot;Please run this script as root.&quot; /bin/false</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line">#&quot;stty erase ^H&quot;</span><br><span class="line">\cp /root/.bash_profile  /root/.bash_profile_$(date +%F)</span><br><span class="line">erase=`grep -wx &quot;stty erase ^H&quot; /root/.bash_profile |wc -l`</span><br><span class="line">if [ $erase -lt 1 ];then</span><br><span class="line">    echo &quot;stty erase ^H&quot; &gt;&gt;/root/.bash_profile</span><br><span class="line">    source /root/.bash_profile</span><br><span class="line">fi</span><br><span class="line">#Config Yum CentOS-Bases.repo and save Yum file</span><br><span class="line">configYum()&#123;</span><br><span class="line">echo &quot;================更新为国内YUM源==================&quot;</span><br><span class="line">  cd /etc/yum.repos.d/</span><br><span class="line">  \cp CentOS-Base.repo CentOS-Base.repo.$(date +%F)</span><br><span class="line">  ping -c 1 mirrors.aliyun.com &gt;/dev/null</span><br><span class="line">  if [ $? -eq 0 ];then</span><br><span class="line">  wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo</span><br><span class="line">  else</span><br><span class="line">    echo &quot;无法连接网络。&quot;</span><br><span class="line">    exit $?</span><br><span class="line">  fi</span><br><span class="line">echo &quot;==============保存YUM源文件======================&quot;</span><br><span class="line">sed -i &apos;s#keepcache=0#keepcache=1#g&apos; /etc/yum.conf     </span><br><span class="line">grep keepcache /etc/yum.conf</span><br><span class="line">sleep 5</span><br><span class="line">action &quot;配置国内YUM完成&quot;  /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#Charset zh_CN.UTF-8</span><br><span class="line">initI18n()&#123;</span><br><span class="line">echo &quot;================更改为中文字符集=================&quot;</span><br><span class="line">  \cp /etc/sysconfig/i18n /etc/sysconfig/i18n.$(date +%F)</span><br><span class="line">&gt;/etc/sysconfig/i18n</span><br><span class="line">cat &gt;&gt;/etc/sysconfig/i18n&lt;&lt;EOF</span><br><span class="line">LANG=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">#LANG=&quot;en_US.UTF-8&quot;</span><br><span class="line">SYSFONT=&quot;latarcyrheb-sun16&quot;</span><br><span class="line">EOF</span><br><span class="line">  source /etc/sysconfig/i18n</span><br><span class="line">  echo &apos;#cat /etc/sysconfig/i18n&apos;</span><br><span class="line">  grep LANG /etc/sysconfig/i18n</span><br><span class="line">action &quot;更改字符集zh_CN.UTF-8完成&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#Close Selinux and Iptables</span><br><span class="line">initFirewall()&#123;</span><br><span class="line">echo &quot;============禁用SELINUX及关闭防火墙==============&quot;</span><br><span class="line">  \cp /etc/selinux/config /etc/selinux/config.$(date +%F)</span><br><span class="line">  /etc/init.d/iptables stop</span><br><span class="line">  sed -i &apos;s/SELINUX=enforcing/SELINUX=disabled/g&apos; /etc/selinux/config</span><br><span class="line">  setenforce 0</span><br><span class="line">  /etc/init.d/iptables status</span><br><span class="line">  echo &apos;#grep SELINUX=disabled /etc/selinux/config &apos; </span><br><span class="line">  grep SELINUX=disabled /etc/selinux/config </span><br><span class="line">  echo &apos;#getenforce &apos;</span><br><span class="line">  getenforce </span><br><span class="line">action &quot;禁用selinux及关闭防火墙完成&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#Init Auto Startup Service</span><br><span class="line">initService()&#123;</span><br><span class="line">echo &quot;===============精简开机自启动====================&quot;</span><br><span class="line">  export LANG=&quot;en_US.UTF-8&quot;</span><br><span class="line">  for A in `chkconfig --list |grep 3:on |awk &apos;&#123;print $1&#125;&apos; `;do chkconfig $A off;done</span><br><span class="line">  for B in rsyslog network sshd crond;do chkconfig $B on;done</span><br><span class="line">  echo &apos;+--------which services on---------+&apos;</span><br><span class="line">  chkconfig --list |grep 3:on</span><br><span class="line">  echo &apos;+----------------------------------+&apos;</span><br><span class="line">  export LANG=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">action &quot;精简开机自启动完成&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#Removal system and kernel version login before the screen display</span><br><span class="line">initRemoval()&#123;</span><br><span class="line">echo &quot;======去除系统及内核版本登录前的屏幕显示=======&quot;</span><br><span class="line">#must use root user run scripts</span><br><span class="line">if    </span><br><span class="line">   [ $UID -ne 0 ];then</span><br><span class="line">   echo This script must use the root user ! ! ! </span><br><span class="line">   sleep 2</span><br><span class="line">   exit 0</span><br><span class="line">fi</span><br><span class="line">    &gt;/etc/redhat-release</span><br><span class="line">    &gt;/etc/issue</span><br><span class="line">action &quot;去除系统及内核版本登录前的屏幕显示&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#Change sshd default port and prohibit user root remote login.</span><br><span class="line">initSsh()&#123;</span><br><span class="line">echo &quot;========修改ssh默认端口禁用root远程登录==========&quot;</span><br><span class="line">  \cp /etc/ssh/sshd_config /etc/ssh/sshd_config.$(date +%F)</span><br><span class="line">  sed -i &apos;s/#Port 22/Port 52113/g&apos; /etc/ssh/sshd_config</span><br><span class="line">  sed -i &apos;s/#PermitEmptyPasswords no/PermitEmptyPasswords no/g&apos; /etc/ssh/sshd_config</span><br><span class="line">  sed -i &apos;s/#PermitRootLogin yes/PermitRootLogin no/g&apos; /etc/ssh/sshd_config</span><br><span class="line">  sed -i &apos;s/#UseDNS yes/UseDNS no/g&apos; /etc/ssh/sshd_config</span><br><span class="line">  echo &apos;+-------modify the sshd_config-------+&apos;</span><br><span class="line">  echo &apos;Port 52113&apos;</span><br><span class="line">  echo &apos;PermitEmptyPasswords no&apos;</span><br><span class="line">  echo &apos;PermitRootLogin no&apos;</span><br><span class="line">  echo &apos;UseDNS no&apos;</span><br><span class="line">  echo &apos;+------------------------------------+&apos;</span><br><span class="line">  /etc/init.d/sshd reload &amp;&amp; action &quot;修改ssh默认参数完成&quot; /bin/true || action &quot;修改ssh参数失败&quot; /bin/false</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#time sync</span><br><span class="line">syncSysTime()&#123;</span><br><span class="line">echo &quot;================配置时间同步=====================&quot;</span><br><span class="line">  \cp /var/spool/cron/root /var/spool/cron/root.$(date +%F) 2&gt;/dev/null</span><br><span class="line">  NTPDATE=`grep ntpdate /var/spool/cron/root 2&gt;/dev/null |wc -l`</span><br><span class="line">  if [ $NTPDATE -eq 0 ];then</span><br><span class="line">    echo &quot;#times sync by lee at $(date +%F)&quot; &gt;&gt;/var/spool/cron/root</span><br><span class="line">    echo &quot;*/5 * * * * /usr/sbin/ntpdate time.windows.com &gt;/dev/null 2&gt;&amp;1&quot; &gt;&gt; /var/spool/cron/root</span><br><span class="line">  fi</span><br><span class="line">  echo &apos;#crontab -l&apos;  </span><br><span class="line">  crontab -l</span><br><span class="line">action &quot;配置时间同步完成&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#install tools</span><br><span class="line">initTools()&#123;</span><br><span class="line">    echo &quot;#####安装系统补装工具(选择最小化安装minimal)#####&quot;</span><br><span class="line">    ping -c 2 mirrors.aliyun.com</span><br><span class="line">    sleep 2</span><br><span class="line">    yum install tree nmap sysstat lrzsz dos2unix -y</span><br><span class="line">    sleep 2</span><br><span class="line">    rpm -qa tree nmap sysstat lrzsz dos2unix</span><br><span class="line">    sleep 2</span><br><span class="line">action &quot;安装系统补装工具(选择最小化安装minimal)&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#add user and give sudoers</span><br><span class="line">addUser()&#123;</span><br><span class="line">echo &quot;===================新建用户======================&quot;</span><br><span class="line">#add user</span><br><span class="line">while true</span><br><span class="line">do  </span><br><span class="line">    read -p &quot;请输入新用户名:&quot; name</span><br><span class="line">    NAME=`awk -F&apos;:&apos; &apos;&#123;print $1&#125;&apos; /etc/passwd|grep -wx $name 2&gt;/dev/null|wc -l`</span><br><span class="line">    if [ $&#123;#name&#125; -eq 0 ];then</span><br><span class="line">       echo &quot;用户名不能为空，请重新输入。&quot;</span><br><span class="line">       continue</span><br><span class="line">    elif [ $NAME -eq 1 ];then</span><br><span class="line">       echo &quot;用户名已存在，请重新输入。&quot;</span><br><span class="line">       continue</span><br><span class="line">    fi</span><br><span class="line">useradd $name</span><br><span class="line">break</span><br><span class="line">done</span><br><span class="line">#create password</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">    read -p &quot;为 $name 创建一个密码:&quot; pass1</span><br><span class="line">    if [ $&#123;#pass1&#125; -eq 0 ];then</span><br><span class="line">       echo &quot;密码不能为空，请重新输入。&quot;</span><br><span class="line">       continue</span><br><span class="line">    fi</span><br><span class="line">    read -p &quot;请再次输入密码:&quot; pass2</span><br><span class="line">    if [ &quot;$pass1&quot; != &quot;$pass2&quot; ];then</span><br><span class="line">       echo &quot;两次密码输入不相同，请重新输入。&quot;</span><br><span class="line">       continue</span><br><span class="line">    fi</span><br><span class="line">echo &quot;$pass2&quot; |passwd --stdin $name</span><br><span class="line">break</span><br><span class="line">done</span><br><span class="line">sleep 1</span><br><span class="line">#add visudo</span><br><span class="line">echo &quot;#####add visudo#####&quot;</span><br><span class="line">\cp /etc/sudoers /etc/sudoers.$(date +%F)</span><br><span class="line">SUDO=`grep -w &quot;$name&quot; /etc/sudoers |wc -l`</span><br><span class="line">if [ $SUDO -eq 0 ];then</span><br><span class="line">    echo &quot;$name  ALL=(ALL)       NOPASSWD: ALL&quot; &gt;&gt;/etc/sudoers</span><br><span class="line">    echo &apos;#tail -1 /etc/sudoers&apos;</span><br><span class="line">    grep -w &quot;$name&quot; /etc/sudoers</span><br><span class="line">    sleep 1</span><br><span class="line">fi</span><br><span class="line">action &quot;创建用户$name并将其加入visudo完成&quot;  /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#Adjust the file descriptor(limits.conf)</span><br><span class="line">initLimits()&#123;</span><br><span class="line">echo &quot;===============加大文件描述符====================&quot;</span><br><span class="line">  LIMIT=`grep nofile /etc/security/limits.conf |grep -v &quot;^#&quot;|wc -l`</span><br><span class="line">  if [ $LIMIT -eq 0 ];then</span><br><span class="line">  \cp /etc/security/limits.conf /etc/security/limits.conf.$(date +%F)</span><br><span class="line">  echo &apos;*                  -        nofile         65535&apos;&gt;&gt;/etc/security/limits.conf</span><br><span class="line">  fi</span><br><span class="line">  echo &apos;#tail -1 /etc/security/limits.conf&apos;</span><br><span class="line">  tail -1 /etc/security/limits.conf</span><br><span class="line">  ulimit -HSn 65535</span><br><span class="line">  echo &apos;#ulimit -n&apos;</span><br><span class="line">  ulimit -n</span><br><span class="line">action &quot;配置文件描述符为65535&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#set ssh</span><br><span class="line">initSsh()&#123;</span><br><span class="line">echo &quot;======禁用GSSAPI来认证，也禁用DNS反向解析，加快SSH登陆速度=======&quot;</span><br><span class="line">sed -i &apos;s/^GSSAPIAuthentication yes$/GSSAPIAuthentication no/&apos; /etc/ssh/sshd_config</span><br><span class="line">sed -i &apos;s/#UseDNS yes/UseDNS no/&apos; /etc/ssh/sshd_config</span><br><span class="line">service sshd restart</span><br><span class="line">action &quot;禁用GSSAPI来认证，也禁用DNS反向解析，加快SSH登陆速度&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#set the control-alt-delete to guard against the miSUSE</span><br><span class="line">initRestart()&#123;</span><br><span class="line">sed -i &apos;s#exec /sbin/shutdown -r now#\#exec /sbin/shutdown -r now#&apos; /etc/init/control-alt-delete.conf</span><br><span class="line">action &quot;将ctrl alt delete键进行屏蔽，防止误操作的时候服务器重启&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#Optimizing the system kernel</span><br><span class="line">initSysctl()&#123;</span><br><span class="line">echo &quot;================优化内核参数=====================&quot;</span><br><span class="line">SYSCTL=`grep &quot;net.ipv4.tcp&quot; /etc/sysctl.conf |wc -l`</span><br><span class="line">if [ $SYSCTL -lt 10 ];then</span><br><span class="line">\cp /etc/sysctl.conf /etc/sysctl.conf.$(date +%F)</span><br><span class="line">cat &gt;&gt;/etc/sysctl.conf&lt;&lt;EOF</span><br><span class="line">net.ipv4.tcp_fin_timeout = 2</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_keepalive_time = 600</span><br><span class="line">net.ipv4.ip_local_port_range = 4000 65000</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 16384</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 36000</span><br><span class="line">net.ipv4.route.gc_timeout = 100</span><br><span class="line">net.ipv4.tcp_syn_retries = 1</span><br><span class="line">net.ipv4.tcp_synack_retries = 1</span><br><span class="line">net.core.somaxconn = 16384</span><br><span class="line">net.core.netdev_max_backlog = 16384</span><br><span class="line">net.ipv4.tcp_max_orphans = 16384</span><br><span class="line">net.netfilter.nf_conntrack_max = 25000000</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_established = 180</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120</span><br><span class="line">EOF</span><br><span class="line">fi</span><br><span class="line">  \cp /etc/rc.local /etc/rc.local.$(date +%F)  </span><br><span class="line">  modprobe nf_conntrack</span><br><span class="line">  echo &quot;modprobe nf_conntrack&quot;&gt;&gt; /etc/rc.local</span><br><span class="line">  modprobe bridge</span><br><span class="line">  echo &quot;modprobe bridge&quot;&gt;&gt; /etc/rc.local</span><br><span class="line">  sysctl -p  </span><br><span class="line">action &quot;内核调优完成&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">  sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#setting history and login timeout</span><br><span class="line">initHistory()&#123;</span><br><span class="line">echo &quot;======设置默认历史记录数和连接超时时间======&quot;</span><br><span class="line">echo &quot;TMOUT=300&quot; &gt;&gt;/etc/profile</span><br><span class="line">echo &quot;HISTSIZE=5&quot; &gt;&gt;/etc/profile</span><br><span class="line">echo &quot;HISTFILESIZE=5&quot; &gt;&gt;/etc/profile</span><br><span class="line">tail -3 /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line">action &quot;设置默认历史记录数和连接超时时间&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#chattr file system</span><br><span class="line">initChattr()&#123;</span><br><span class="line">echo &quot;======锁定关键文件系统======&quot;</span><br><span class="line">chattr +i /etc/passwd</span><br><span class="line">chattr +i /etc/inittab</span><br><span class="line">chattr +i /etc/group</span><br><span class="line">chattr +i /etc/shadow</span><br><span class="line">chattr +i /etc/gshadow</span><br><span class="line">/bin/mv /usr/bin/chattr /usr/bin/lock</span><br><span class="line">action &quot;锁定关键文件系统&quot; /bin/true</span><br><span class="line">echo &quot;=================================================&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">sleep 2</span><br><span class="line">&#125;</span><br><span class="line">#menu2</span><br><span class="line">menu2()&#123;</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">clear</span><br><span class="line">cat &lt;&lt;EOF</span><br><span class="line">----------------------------------------</span><br><span class="line">|****Please Enter Your Choice:[0-15]****|</span><br><span class="line">----------------------------------------</span><br><span class="line">(1)  新建一个用户并将其加入visudo</span><br><span class="line">(2)  配置为国内YUM源镜像和保存YUM源文件</span><br><span class="line">(3)  配置中文字符集</span><br><span class="line">(4)  禁用SELINUX及关闭防火墙</span><br><span class="line">(5)  精简开机自启动</span><br><span class="line">(6)  去除系统及内核版本登录前的屏幕显示</span><br><span class="line">(7)  修改ssh默认端口及禁用root远程登录</span><br><span class="line">(8)  设置时间同步</span><br><span class="line">(9)  安装系统补装工具(选择最小化安装minimal)</span><br><span class="line">(10) 加大文件描述符</span><br><span class="line">(11) 禁用GSSAPI来认证，也禁用DNS反向解析，加快SSH登陆速度</span><br><span class="line">(12) 将ctrl alt delete键进行屏蔽，防止误操作的时候服务器重启</span><br><span class="line">(13) 系统内核调优</span><br><span class="line">(14) 设置默认历史记录数和连接超时时间</span><br><span class="line">(15) 锁定关键文件系统</span><br><span class="line">(0) 返回上一级菜单</span><br><span class="line">EOF</span><br><span class="line">read -p &quot;Please enter your Choice[0-15]: &quot; input2</span><br><span class="line">case &quot;$input2&quot; in</span><br><span class="line">  0)</span><br><span class="line">  clear</span><br><span class="line">  break </span><br><span class="line">  ;;</span><br><span class="line">  1)</span><br><span class="line">  addUser</span><br><span class="line">  ;;</span><br><span class="line">  2)</span><br><span class="line">  configYum</span><br><span class="line">  ;;</span><br><span class="line">  3)</span><br><span class="line">  initI18n</span><br><span class="line">  ;;</span><br><span class="line">  4)</span><br><span class="line">  initFirewall</span><br><span class="line">  ;;</span><br><span class="line">  5)</span><br><span class="line">  initService</span><br><span class="line">  ;;</span><br><span class="line">  6)</span><br><span class="line">  initRemoval</span><br><span class="line">  ;;</span><br><span class="line">  7)</span><br><span class="line">  initSsh</span><br><span class="line">  ;;</span><br><span class="line">  8)</span><br><span class="line">  syncSysTime</span><br><span class="line">  ;;</span><br><span class="line">  9)</span><br><span class="line">  initTools</span><br><span class="line">  ;;</span><br><span class="line">  10)</span><br><span class="line">  initLimits</span><br><span class="line">  ;;</span><br><span class="line">  11)</span><br><span class="line">  initSsh</span><br><span class="line">  ;;</span><br><span class="line">  12)</span><br><span class="line">  initRestart</span><br><span class="line">  ;;</span><br><span class="line">  13)</span><br><span class="line">  initSysctl</span><br><span class="line">  ;;</span><br><span class="line">  14)</span><br><span class="line">  initHistory</span><br><span class="line">  ;;</span><br><span class="line">  15)</span><br><span class="line">  initChattr</span><br><span class="line">  ;;</span><br><span class="line">  *) echo &quot;----------------------------------&quot;</span><br><span class="line">     echo &quot;|          Warning!!!            |&quot;</span><br><span class="line">     echo &quot;|   Please Enter Right Choice!   |&quot;</span><br><span class="line">     echo &quot;----------------------------------&quot;</span><br><span class="line">     for i in `seq -w 3 -1 1`</span><br><span class="line">       do </span><br><span class="line">         echo -ne &quot;\b\b$i&quot;;</span><br><span class="line">  sleep 1;</span><br><span class="line">     done</span><br><span class="line">     clear</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line">&#125;</span><br><span class="line">#initTools</span><br><span class="line">#menu</span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">clear</span><br><span class="line">echo &quot;========================================&quot;</span><br><span class="line">echo &apos;          Linux Optimization            &apos;   </span><br><span class="line">echo &quot;========================================&quot;</span><br><span class="line">cat &lt;&lt; EOF</span><br><span class="line">|-----------System Infomation-----------</span><br><span class="line">| DATE       :$DATE</span><br><span class="line">| HOSTNAME   :$HOSTNAME</span><br><span class="line">| USER       :$USER</span><br><span class="line">| IP         :$IPADDR</span><br><span class="line">| DISK_USED  :$DISK_SDA</span><br><span class="line">| CPU_AVERAGE:$cpu_uptime</span><br><span class="line">----------------------------------------</span><br><span class="line">|****Please Enter Your Choice:[1-3]****|</span><br><span class="line">----------------------------------------</span><br><span class="line">(1) 一键优化</span><br><span class="line">(2) 自定义优化</span><br><span class="line">(3) 退出</span><br><span class="line">EOF</span><br><span class="line">#choice</span><br><span class="line">read -p &quot;Please enter your choice[0-3]: &quot; input1</span><br><span class="line">case &quot;$input1&quot; in</span><br><span class="line">1) </span><br><span class="line">  addUser</span><br><span class="line">  configYum</span><br><span class="line">  initI18n</span><br><span class="line">  initFirewall</span><br><span class="line">  initService</span><br><span class="line">  initRemoval</span><br><span class="line">  initSsh</span><br><span class="line">  syncSysTime</span><br><span class="line">  initTools</span><br><span class="line">  initLimits</span><br><span class="line">  initSsh</span><br><span class="line">  initRestart</span><br><span class="line">  initSysctl</span><br><span class="line">  initHistory</span><br><span class="line">  initChattr</span><br><span class="line">  ;;</span><br><span class="line">2)</span><br><span class="line">  menu2</span><br><span class="line">  ;;</span><br><span class="line">3) </span><br><span class="line">  clear </span><br><span class="line">  break</span><br><span class="line">  ;;</span><br><span class="line">*)   </span><br><span class="line">  echo &quot;----------------------------------&quot;</span><br><span class="line">  echo &quot;|          Warning!!!            |&quot;</span><br><span class="line">  echo &quot;|   Please Enter Right Choice!   |&quot;</span><br><span class="line">  echo &quot;----------------------------------&quot;</span><br><span class="line">  for i in `seq -w 3 -1 1`</span><br><span class="line">      do</span><br><span class="line">        echo -ne &quot;\b\b$i&quot;;</span><br><span class="line">        sleep 1;</span><br><span class="line">  done</span><br><span class="line">  clear</span><br><span class="line">esac  </span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="shell" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>ansible 命令操作项</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/09/05/ansible-%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C%E9%A1%B9/"/>
    <id>https://kingle.我爱你/2018/09/05/ansible-命令操作项/</id>
    <published>2018-09-05T01:35:54.000Z</published>
    <updated>2018-09-06T00:40:53.219Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍Ansible的几个命令模块，包括：</p><pre><code>command - 在远程节点上执行命令shell - 让远程主机在shell进程下执行命令script - 将本地script传送到远程主机之后执行raw - 执行低级的和脏的SSH命令expect - 执行命令并响应提示telnet - 执行低级的和脏的telnet命令</code></pre><p>command模块<br>简介</p><pre><code>command模块用于在给的的节点上运行系统命令，比如echo hello。它不会通过shell处理命令，因此不支持像$HOME这样的变量和，以及&lt;, &gt;, |, ;和&amp;等都是无效的。也就是在command模块中无法使用管道符。</code></pre><p>模块参数<br>名称    必选    备注<br>chdir     no     运行command命令前先cd到这个目录<br>creates     no     如果这个参数对应的文件存在，就不运行command<br>free_form     yes     需要执行的脚本（没有真正的参数为free_form）<br>executable     no     改变用来执行命令的shell，应该是可执行文件的绝对路径。<br>removes     no     如果这个参数对应的文件不存在，就不运行command，与creates参数的作用相反<br>stdin(2.4后新增)     no     将命令的stdin设置为指定的值<br>示例</p><pre><code>列出指定目录下的文件</code></pre><p>[root@centos7 ~]# ansible test -m command -a “ls /root”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;<br>anaconda-ks.cfg<br>test.sh<br>whoami.rst</p><p>[root@centos7 ~]# ansible test -m command -a “ls /root creates=test.sh”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;<br>skipped, since test.sh exists</p><p>[root@centos7 ~]# ansible test -m command -a “ls /root removes=test.sh1”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;<br>skipped, since test.sh1 does not exist</p><p>在这个里面，首先更换目录到root目录中，然后查看test.sh是否存在，如果存在，那么命令不会执行；如果不存在，那么执行命令。</p><p>在这里也可以看到，命令是必须存在的，但是没有参数名为free_form参数。</p><pre><code>切换目录执行命令</code></pre><p>[root@centos7 ~]# ansible test -m command -a “cat test.sh chdir=/root”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;</p><p>#!/bin/bash<br>i=0<br>echo $((i+1))</p><p>[root@centos7 ~]# ansible test -m command -a “sh test.sh chdir=/root”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;<br>1</p><pre><code>无法使用管道符</code></pre><p>[root@centos7 ~]# ansible test -m command -a “ls /root | grep test”<br>172.20.21.120 | FAILED | rc=2 &gt;&gt;<br>/root:<br>anaconda-ks.cfg<br>test.sh<br>whoami.rstls: 无法访问|: 没有那个文件或目录<br>ls: 无法访问grep: 没有那个文件或目录<br>ls: 无法访问test: 没有那个文件或目录non-zero return code</p><p>注意事项</p><pre><code>若要通过shell运行一个命令，比如&lt;, &gt;, |等，你实际上需要shell模块。command模块更安全，因为它不受用户环境的影响从版本2.4开始，executable参数被删除。如果您需要此参数，请改用shell模块。对于Windows节点，请改用win_command模块。</code></pre><p>shell模块<br>简介</p><p>让远程主机在shell进程下执行命令，从而支持shell的特性，如管道等。与command模块几乎相同，但在执行命令的时候使用的是/bin/sh。<br>模块参数<br>名称    必选    备注<br>chdir     no     运行command命令前先cd到这个目录<br>creates     no     如果这个参数对应的文件存在，就不运行command<br>executable     no     改变用来执行命令的shell，应该是可执行文件的绝对路径。<br>free_form     yes     需要执行的脚本（没有真正的参数为free_form）<br>removes     no     如果这个参数对应的文件不存在，就不运行command，与creates参数的作用相反<br>stdin(2.4后新增)     no     将命令的stdin设置为指定的值<br>示例</p><pre><code>切换目录，执行命令并保持输出</code></pre><p>[root@centos7 ~]# ansible test -m shell -a “sh test.sh &gt; result chdir=/root”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;</p><p>[root@centos7 ~]# ansible test -m shell -a “cat result chdir=/root”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;<br>1</p><p>注意事项</p><pre><code>如果你想安全可靠的执行命令，请使用command模块，这也是编写playbook的最佳实践。</code></pre><p>script模块<br>简介</p><pre><code>script模块的作用是将本地script传送到远程主机之后执行给定的脚本将通过远程节点上的shell环境进行处理script模块在远程系统上不需要python的支持</code></pre><p>模块参数<br>名称    必选    默认值    可选值    备注<br>chdir(2.4后新增)     no                 运行command命令前先cd到这个目录<br>creates     no                 如果这个参数对应的文件存在，就不运行command<br>decrypt     no     yes     yes/no     此选项控制使用保管库的源文件的自动解密<br>free_form     yes                 需要执行脚本的本地文件路径（没有真正的参数为free_form）<br>removes     no                 如果这个参数对应的文件不存在，就不运行command，与creates参数的作用相反<br>示例</p><pre><code>在远程主机上执行脚本</code></pre><p>[root@centos7 ~]# ansible test -m script -a “test.sh chdir=/tmp”<br>172.20.21.120 | SUCCESS =&gt; {<br>    “changed”: true,<br>    “rc”: 0,<br>    “stderr”: “Shared connection to 172.20.21.120 closed.\r\n”,<br>    “stdout”: “/tmp\r\n”,<br>    “stdout_lines”: [<br>        “/tmp”<br>    ]<br>}</p><p>注意事项</p><pre><code>通常来说，使用Ansible模块比推送脚本更好当脚本执行时，ssh连接插件将通过-tt强制伪tty分配。伪ttys没有stderr通道，所有stderr被发送到标准输出。如果需要标准输出和标准错误分离，请使用到copy模块。</code></pre><p>raw模块<br>简介</p><pre><code>raw模块主要用于执行一些低级的，脏的SSH命令，而不是通过command模块。 raw模块只适用于下列两种场景，第一种情况是在较老的（Python 2.4和之前的版本）主机上，另一种情况是对任何没有安装Python的设备（如路由器）。 在任何其他情况下，使用shell或command模块更为合适。就像script模块一样，raw模块不需要远程系统上的python</code></pre><p>模块参数<br>名称    必选    备注<br>executable     no     改变用来执行命令的shell，应该是可执行文件的绝对路径。<br>free_form     yes     需要执行的脚本（没有真正的参数为free_form）<br>示例</p><pre><code>在远程主机上执行脚本</code></pre><p>[root@centos7 ~]# ansible test -m raw -a “pwd”<br>172.20.21.120 | SUCCESS | rc=0 &gt;&gt;<br>/root<br>Shared connection to 172.20.21.120 closed.</p><p>注意事项</p><pre><code>如果要安全可靠地执行命令，最好使用shell或command模块来代替。如果从playbook中使用raw，则可能需要使用gather_facts: no禁用事实收集</code></pre><p>expect模块<br>简介</p><pre><code>expect模块用于在给的的节点上执行一个命令并响应提示。它不会通过shell处理命令，因此不支持像$HOME这样的变量和，以及&lt;, &gt;, |, ;和&amp;等都是无效的。也就是在command模块中无法使用管道符。</code></pre><p>使用要求（在执行模块的主机上）</p><pre><code>python &gt;= 2.6pexpect &gt;= 3.3</code></pre><p>模块参数<br>名称    必选    默认值    备注<br>chdir     no           运行command命令前先cd到这个目录<br>command     yes           命令模块执行命令运行<br>echo     no           是否回显你的回应字符串<br>responses     yes           期望的字符串/正则表达式和字符串的映射来响应。 如果响应是一个列表，则连续的匹配将返回连续的响应。 列表功能是2.1中的新功能。<br>creates     no           如果这个参数对应的文件存在，就不运行command<br>removes     no           如果这个参数对应的文件不存在，就不运行command，与creates参数的作用相反<br>timeout     no     30     以秒为单位等待预期时间<br>示例</p><pre><code>在远程主机上执行脚本</code></pre><ul><li><p>name: Case insensitve password string match<br>expect:<br>  command: passwd username<br>  responses:</p><pre><code>(?i)password: &quot;MySekretPa$$word&quot;</code></pre></li><li><p>name: Generic question with multiple different responses<br>expect:<br>  command: /path/to/custom/command<br>  responses:</p><pre><code>Question:  - response1  - response2  - response3</code></pre></li></ul><p>注意事项</p><pre><code>如果你想通过shell运行一个命令（比如你正在使用&lt;,&gt;,|等），你必须在命令中指定一个shell，比如/bin/bash -c &quot;/path/to/something | grep else&quot;。在responses下关键是一个python正则表达式匹配，不区分大小写的搜索用前缀?i。默认情况下，如果多次遇到问题，则会重复其字符串响应。 如果连续问题匹配需要不同的响应，而不是字符串响应，请使用字符串列表作为响应。expect模块设计用于简单场景，对于更复杂的需求，应该考虑在shell或script模块中使用expect代码</code></pre><p>telnet模块<br>简介</p><pre><code>expect模块用于执行一些低级的和脏telnet命令，不通过模块子系统。它不会通过shell处理命令，因此不支持像$HOME这样的变量和，以及&lt;, &gt;, |, ;和&amp;等都是无效的。也就是在command模块中无法使用管道符。</code></pre><p>模块参数<br>名称    必选    默认值    备注<br>command     yes           在telnet会话中执行的命令<br>host     no     remote_addr     要执行命令的主机/目标<br>password     yes           登录密码<br>pause     no     1     每发出一个命令之间的暂停秒<br>port     no     23     远程端口<br>prompts     no     [u’$’]     发送下一个命令之前预期的提示列表<br>timeout     no     30     远程操作超时时间<br>user     no     remote_user     登录用户<br>示例</p><pre><code>在远程主机上执行脚本</code></pre><ul><li><p>name: send configuration commands to IOS<br>telnet:<br>  user: cisco<br>  password: cisco<br>  login_prompt: “Username: “<br>  prompts:</p><pre><code>- &quot;[&gt;|#]&quot;</code></pre><p>  command:</p><pre><code>- terminal length 0- configure terminal- hostname ios01</code></pre></li><li><p>name: run show commands<br>telnet:<br>  user: cisco<br>  password: cisco<br>  login_prompt: “Username: “<br>  prompts:</p><pre><code>- &quot;[&gt;|#]&quot;</code></pre><p>  command:</p><pre><code>- terminal length 0- show version</code></pre></li></ul><p>注意事项</p><pre><code>如果你想通过shell运行一个命令（比如你正在使用&lt;,&gt;,|等），你必须在命令中指定一个shell，比如/bin/bash -c &quot;/path/to/something | grep else&quot;。在responses下关键是一个python正则表达式匹配，不区分大小写的搜索用前缀?i。默认情况下，如果多次遇到问题，则会重复其字符串响应。 如果连续问题匹配需要不同的响应，而不是字符串响应，请使用字符串列表作为响应。expect模块设计用于简单场景，对于更复杂的需求，应该考虑在shell或script模块中使用expect代码</code></pre><p>作者：hoxis<br>链接：<a href="https://www.jianshu.com/p/8661c107448d" target="_blank" rel="noopener">https://www.jianshu.com/p/8661c107448d</a><br>來源：简书</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要介绍Ansible的几个命令模块，包括：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;command - 在远程节点上执行命令
shell - 让远程主机在shell进程下执行命令
script - 将本地script传送到远程主机之后执行
raw - 执行低级的和脏的SSH命令
      
    
    </summary>
    
    
      <category term="ansible" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>运维工程师必备命令</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/08/28/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BF%85%E5%A4%87%E5%91%BD%E4%BB%A4/"/>
    <id>https://kingle.我爱你/2018/08/28/运维工程师必备命令/</id>
    <published>2018-08-28T09:17:28.000Z</published>
    <updated>2018-08-28T09:23:24.495Z</updated>
    
    <content type="html"><![CDATA[<p>###1.ls [选项] [目录名 | 列出相关目录下的所有目录和文件</p><p>-a  列出包括.a开头的隐藏文件的所有文件<br>-A  通-a，但不列出”.”和”..”<br>-l  列出文件的详细信息<br>-c  根据ctime排序显示<br>-t  根据文件修改时间排序<br>—color[=WHEN] 用色彩辨别文件类型 WHEN 可以是’never’、’always’或’auto’其中之一<br>   白色：表示普通文件<br>   蓝色：表示目录<br>   绿色：表示可执行文件<br>   红色：表示压缩文件<br>   浅蓝色：链接文件<br>   红色闪烁：表示链接的文件有问题<br>   黄色：表示设备文件<br>   灰色：表示其它文件</p><p>###2.mv [选项] 源文件或目录 目录或多个源文件 | 移动或重命名文件</p><p>-b  覆盖前做备份<br>-f  如存在不询问而强制覆盖<br>-i  如存在则询问是否覆盖<br>-u  较新才覆盖<br>-t  将多个源文件移动到统一目录下，目录参数在前，文件参数在后<br>eg:<br>   mv a /tmp/ 将文件a移动到 /tmp目录下<br>   mv a b 将a命名为b<br>   mv /home/zenghao test1.txt test2.txt test3.txt</p><p>###3.cp [选项] 源文件或目录 目录或多个源文件 | 将源文件复制至目标文件，或将多个源文件复制至目标目录。</p><p>-r -R 递归复制该目录及其子目录内容<br>-p  连同档案属性一起复制过去<br>-f  不询问而强制复制<br>-s  生成快捷方式<br>-a  将档案的所有特性都一起复制</p><p>###4.scp [参数] [原路径] [目标路径] | 在Linux服务器之间复制文件和目录</p><p>-v  详细显示输出的具体情况<br>-r  递归复制整个目录<br>(1) 复制文件：<br>命令格式：<br>scp local_file remote_username@remote_ip:remote_folder<br>或者<br>scp local_file remote_username@remote_ip:remote_file<br>或者<br>scp local_file remote_ip:remote_folder<br>或者<br>scp local_file remote_ip:remote_file<br>第1,2个指定了用户名，命令执行后需要输入用户密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名<br>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名<br>(2) 复制目录：<br>命令格式：<br>scp -r local_folder remote_username@remote_ip:remote_folder<br>或者<br>scp -r local_folder remote_ip:remote_folder<br>第1个指定了用户名，命令执行后需要输入用户密码；<br>第2个没有指定用户名，命令执行后需要输入用户名和密码；<br>eg:<br>   从 本地 复制到 远程<br>   scp /home/daisy/full.tar.gz <a href="mailto:root@172.19.2.75" target="_blank" rel="noopener">root@172.19.2.75</a>:/home/root<br>   从 远程 复制到 本地<br>   scp root@/172.19.2.75:/home/root/full.tar.gz /home/daisy/full.tar.gz</p><p>###5.rm [选项] 文件 | 删除文件</p><p>-r  删除文件夹<br>-f  删除不提示<br>-i  删除提示<br>-v  详细显示进行步骤</p><p>###6.touch [选项] 文件 | 创建空文件或更新文件时间</p><p>-a  只修改存取时间<br>-m  值修改变动时间<br>-r  eg:touch -r a b ,使b的时间和a相同<br>-t  指定特定的时间 eg:touch -t 201211142234.50 log.log<br>   -t time [[CC]YY]MMDDhhmm[.SS],C:年前两位</p><p>###7.pwd 查看当前所在路径</p><p>###8.cd 改变当前目录</p><ul><li>：返回上层目录<br>.. :返回上层目录<br>回车  ：返回主目录<br>/   :根目录</li></ul><p>###9.mkdir [选项] 目录… | 创建新目录</p><p>-p  递归创建目录，若父目录不存在则依次创建<br>-m  自定义创建目录的权限  eg:mkdir -m 777 hehe<br>-v  显示创建目录的详细信息</p><p>###10.rmdir 删除空目录</p><p>-v  显示执行过程<br>-p  若自父母删除后父目录为空则一并删除</p><p>###11.rm [选项] 文件… | 一个或多个文件或目录</p><p>-f  忽略不存在的文件，不给出提示<br>-i  交互式删除<br>-r  将列出的目录及其子目录递归删除<br>-v  列出详细信息</p><p>###12.echo：显示内容</p><p>-n  输出后不换行<br>-e  遇到转义字符特殊处理<br>   eg:<br>       echo “he\nhe”   显示he\nhe<br>       ehco -e “he\nhe”    显示he(换行了)he</p><p>###13.cat [选项] [文件]..| 一次显示整个文件或从键盘创建一个文件或将几个文件合并成一个文件</p><p>-n  编号文件内容再输出<br>-E  在结束行提示$</p><p>###14.tac | 反向显示</p><p>###15.more | 按页查看文章内容，从前向后读取文件，因此在启动时就加载整个文件</p><p>+n  从第n行开始显示<br>-n  每次查看n行数据<br>+/String    搜寻String字符串位置，从其前两行开始查看<br>-c  清屏再显示<br>-p  换页时清屏</p><p>###16.less | 可前后移动地逐屏查看文章内容，在查看前不会加载整个文件</p><p>-m  显示类似于more命令的百分比<br>-N  显示行号<br>/   字符串：向下搜索“字符串”的功能<br>?   字符串：向上搜索“字符串”的功能<br>n   重复前一个搜索（与 / 或 ? 有关）<br>N   反向重复前一个搜索（与 / 或 ? 有关）<br>b   向后翻一页<br>d   向后翻半页</p><p>###17.nl [选项]… [文件]… | 将输出内容自动加上行号</p><p>-b<br>-b a 不论是否有空行，都列出行号（类似 cat -n)<br>-b t 空行则不列行号（默认）<br>-n 有ln rn rz三个参数，分别为再最左方显示，最右方显示不加0，最右方显示加0</p><p>###18.head [参数]… [文件]… | 显示档案开头，默认开头10行</p><p>-v  显示文件名<br>-c number   显示前number个字符,若number为负数,则显示除最后number个字符的所有内容<br>-number/n (+)number     显示前number行内容，<br>-n number   若number为负数，则显示除最后number行数据的所有内容</p><p>###19.tail [必要参数] [选择参数] [文件] | 显示文件结尾内容</p><p>-v  显示详细的处理信息<br>-q  不显示处理信息<br>-num/-n (-)num      显示最后num行内容<br>-n +num 从第num行开始显示后面的数据<br>-c  显示最后c个字符<br>-f  循环读取</p><p>###20.vi 编辑文件</p><p>:w filename 将文章以指定的文件名保存起来<br>:wq 保存并退出<br>:q! 不保存而强制退出<br>命令行模式功能键<br>1）插入模式<br>   按「i」切换进入插入模式「insert mode」，按”i”进入插入模式后是从光标当前位置开始输入文件；<br>   按「a」进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字；<br>   按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。</p><p>2）从插入模式切换为命令行模式<br> 按「ESC」键。<br>3）移动光标<br>　　vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。<br>　　按「ctrl」+「b」：屏幕往”后”移动一页。<br>　　按「ctrl」+「f」：屏幕往”前”移动一页。<br>　　按「ctrl」+「u」：屏幕往”后”移动半页。<br>　　按「ctrl」+「d」：屏幕往”前”移动半页。<br>　　按数字「0」：移到文章的开头。<br>　　按「G」：移动到文章的最后。<br>　　按「$」：移动到光标所在行的”行尾”。<br>　　按「^」：移动到光标所在行的”行首”<br>　　按「w」：光标跳到下个字的开头<br>　　按「e」：光标跳到下个字的字尾<br>　　按「b」：光标回到上个字的开头<br>　　按「#l」：光标移到该行的第#个位置，如：5l,56l。</p><p>4）删除文字<br>　　「x」：每按一次，删除光标所在位置的”后面”一个字符。<br>　　「#x」：例如，「6x」表示删除光标所在位置的”后面”6个字符。<br>　　「X」：大写的X，每按一次，删除光标所在位置的”前面”一个字符。<br>　　「#X」：例如，「20X」表示删除光标所在位置的”前面”20个字符。<br>　　「dd」：删除光标所在行。<br>　　「#dd」：从光标所在行开始删除#行</p><p>5）复制<br>　　「yw」：将光标所在之处到字尾的字符复制到缓冲区中。<br>　　「#yw」：复制#个字到缓冲区<br>　　「yy」：复制光标所在行到缓冲区。<br>　　「#yy」：例如，「6yy」表示拷贝从光标所在的该行”往下数”6行文字。<br>　　「p」：将缓冲区内的字符贴到光标所在位置。注意：所有与”y”有关的复制命令都必须与”p”配合才能完成复制与粘贴功能。</p><p>6）替换<br>　　「r」：替换光标所在处的字符。<br>　　「R」：替换光标所到之处的字符，直到按下「ESC」键为止。</p><p>7）回复上一次操作<br>　　「u」：如果您误执行一个命令，可以马上按下「u」，回到上一个操作。按多次”u”可以执行多次回复。</p><p>8）更改<br>　　「cw」：更改光标所在处的字到字尾处<br>　　「c#w」：例如，「c3w」表示更改3个字</p><p>9）跳至指定的行<br>　　「ctrl」+「g」列出光标所在行的行号。<br>　　「#G」：例如，「15G」，表示移动光标至文章的第15行行首。</p><p>###21.which 可执行文件名称 | 查看可执行文件的位置，在PATH变量指定的路径中查看系统命令是否存在及其位置</p><p>###22.whereis [-bmsu] [BMS 目录名 -f ] 文件名| 定位可执行文件、源代码文件、帮助文件在文件系统中的位置</p><p>-b   定位可执行文件。<br>-m   定位帮助文件。<br>-s   定位源代码文件。<br>-u   搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。<br>-B   指定搜索可执行文件的路径。<br>-M   指定搜索帮助文件的路径。<br>-S   指定搜索源代码文件的路径。</p><p>###23.locate | 通过搜寻数据库快速搜寻档案</p><p>-r  使用正规运算式做寻找的条件</p><p>###24.find find [PATH] [option] [action] | 在文件树种查找文件，并作出相应的处理</p><p>选项与参数：</p><ol><li><p>与时间有关的选项：共有 -atime, -ctime 与 -mtime 和-amin,-cmin与-mmin，以 -mtime 说明<br>-mtime n ：n 为数字，意义为在 n 天之前的『一天之内』被更动过内容的档案；<br>-mtime +n ：列出在 n 天之前(不含 n 天本身)被更动过内容的档案档名；<br>-mtime -n ：列出在 n 天之内(含 n 天本身)被更动过内容的档案档名。<br>-newer file ：file 为一个存在的档案，列出比 file 还要新的档案档名</p></li><li><p>与使用者或组名有关的参数：<br>-uid n ：n 为数字，这个数字是用户的账号 ID，亦即 UID<br>-gid n ：n 为数字，这个数字是组名的 ID，亦即 GID<br>-user name ：name 为使用者账号名称！例如 dmtsai<br>-group name：name 为组名，例如 users ；<br>-nouser ：寻找档案的拥有者不存在 /etc/passwd 的人！<br>-nogroup ：寻找档案的拥有群组不存在于 /etc/group 的档案！</p></li><li><p>与档案权限及名称有关的参数：<br>-name filename：搜寻文件名为 filename 的档案（可使用通配符）<br>-size [+-]SIZE：搜寻比 SIZE 还要大(+)或小(-)的档案。这个 SIZE 的规格有：</p><pre><code>c: 代表 bytek: 代表 1024bytes。所以，要找比 50KB还要大的档案，就是『 -size +50k 』</code></pre><p>-type TYPE ：搜寻档案的类型为 TYPE 的，类型主要有：</p><pre><code>一般正规档案 (f)装置档案 (b, c)目录 (d)连结档 (l)socket (s)FIFO (p)</code></pre><p>-perm mode ：搜寻档案权限『刚好等于』 mode的档案，这个mode为类似chmod的属性值，举例来说，-rwsr-xr-x 的属性为4755！<br>-perm -mode ：搜寻档案权限『必须要全部囊括 mode 的权限』的档案，举例来说，</p><pre><code>我们要搜寻-rwxr--r-- 亦即 0744 的档案，使用-perm -0744，当一个档案的权限为 -rwsr-xr-x ，亦即 4755 时，也会被列出来，因为 -rwsr-xr-x 的属性已经囊括了 -rwxr--r-- 的属性了。</code></pre><p>-perm +mode ：搜寻档案权限『包含任一 mode 的权限』的档案，举例来</p><pre><code>说，我们搜寻-rwxr-xr-x ，亦即 -perm +755 时，但一个文件属性为 -rw-------也会被列出来，因为他有 -rw.... 的属性存在！</code></pre></li><li>额外可进行的动作：<br>-exec command ：command 为其他指令，-exec 后面可再接额外的指令来处理搜寻到的结果。<br>-print ：将结果打印到屏幕上，这个动作是预设动作！<br>eg:<pre><code>find / -perm +7000 -exec ls -l {} \; ,额外指令以-exec开头，以\;结尾{}代替前面找到的内容</code></pre>| xargs <pre><code>-i  默认的前面输出用{}代替 eg:    find . -name &quot;*.log&quot; | xargs -i mv {} test4</code></pre>#grep ‘正则表达式’ 文件名 | 用正则表达式搜索文本，并把匹配的行打印出来</li></ol><p>-c  只输出匹配行的计数。<br>-I  不区分大小写(只适用于单字符)。<br>-l  只显示文件名<br>-v  显示不包含匹配文本的所有行。<br>-n  显示匹配行数据及其行号</p><p>###25.file | 判断文件类型</p><p>###26.gzip [-cdtv#] 檔名 | 压缩、解压缩，源文件都不再存在</p><p>-d  进行解压缩<br>-c  将压缩的数据输出到屏幕上<br>-v  :显示原档案/压缩文件案的压缩比等信息<br>-#  ：压缩等级，-1最快，但压缩比最差，=9最慢，但压缩比最好</p><p>###27.gunzip | 解压缩</p><p>###28.bzip2 | 压缩、解压缩</p><p>-d  :解压<br>-z  :压缩<br>-k  :保留源文件<br>-c ：将压缩的过程产生的数据输出到屏幕上！<br>-v ：可以显示出原档案/压缩文件案的压缩比等信息；<br>-# ：与 gzip 同样的，都是在计算压缩比的参数， -9 最佳， -1 最快！</p><p>###29.bzcat 读取数据而无需解压</p><p>###30.tar [主选项+辅选项] 文件或者目录 | 多个目录或档案打包、压缩成一个大档案</p><p>主选项：<br>   -c  建立打包档案，可搭配 -v 来察看过程中被打包的档名(filename)<br>   -t  察看打包档案的内容含有哪些档名，重点在察看『档名』就是了；<br>   -x  解打包或解压缩的功能，可以搭配 -C (大写) 在特定目录解开<br>辅选项：<br>   -j  透过 bzip2 的支持进行压缩/解压缩：此时档名最好为 <em>.tar.bz2<br>   -z  透过 gzip 的支持进行压缩/解压缩：此时档名最好为 </em>.tar.gz<br>   -v  在压缩/解压缩的过程中，将正在处理的文件名显示出来！<br>   -f filename -f 后面要立刻接要被处理的档名！<br>   -C 目录   这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。<br>   –exclude FILE：在压缩打包过程中忽略某文件 eg: tar –exclude /home/zenghao -zcvf myfile.tar.gz /home/* /etc<br>   -p  保留备份数据的原本权限与属性，常用于备份(-c)重要的配置文件<br>   -P(大写）  保留绝对路径，亦即允许备份数据中含有根目录存在之意；<br>eg:<br>   压 缩：tar -jcvf filename.tar.bz2 要被压缩的档案或目录名称<br>   查 询：tar -jtvf filename.tar.bz2<br>   解压缩：tar -jxvf filename.tar.bz2 -C 欲解压缩的目录</p><p>###31.exit 退出当前shell</p><p>###32.logout 退出登录shell</p><p>###33.shutdown -h now</p><p>###34.users 显示当前登录系统地用户</p><p>###35.who 登录在本机的用户与来源</p><p>-H或–heading 　显示各栏位的标题信息列。</p><p>###36.w 登录在本机的用户及其运行的程序</p><p>-s 　使用简洁格式列表，不显示用户登入时间，终端机阶段作业和程序所耗费的CPU时间。<br>-h 　不显示各栏位的标题信息列。</p><p>###37.write 给当前联机的用户发消息</p><p>###38.wall 给所有登录再本机的用户发消息</p><p>###39.last 查看用户的登陆日志</p><p>###40.lastlog 查看每个用户最后的登陆时间</p><p>###41.finger [选项] [使用者] [用户@主机] | 查看用户信息</p><p>-s 显示用户的注册名、实际姓名、终端名称、写状态、停滞时间、登录时间等信息<br>-l 除了用-s选项显示的信息外，还显示用户主目录、登录shell、邮件状态等信息，以及用户主目录下的.plan、.project和.forward文件的内容。<br>-p 除了不显示.plan文件和.project文件以外，与-l选项相同</p><p>###42.hostname 查看主机名</p><p>###43.alias ii = “ls -l” | 添加别名</p><p>###44.unalias ii | 清除别名</p><p>###45.useradd [-u UID] [-g 初始群组] [-G 次要群组] [-c 说明栏] [-d 家目录绝对路径] [-s shell] 使用者账号名 | 新增用户</p><p>-M  不建立用户家目录！(系统账号默认值)<br>-m  建立用户家目录！(一般账号默认值)<br>-r  建立一个系统的账号，这个账号的 UID 会有限制<br>-e  账号失效日期，格式为『YYYY-MM-DD』<br>-D  查看useradd的各项默认值</p><p>###46.passwd | 修改密码</p><p>-l  使密码失效<br>-u  与-l相对，用户解锁<br>-S  列出登陆用户passwd文件内的相关参数<br>-n  后面接天数，shadow 的第 4 字段，多久不可修改密码天数<br>-x  后面接天数，shadow 的第 5 字段，多久内必须要更动密码<br>-w  后面接天数，shadow 的第 6 字段，密码过期前的警告天数<br>-i  后面接『日期』，shadow 的第 7 字段，密码失效日期<br>使用管道刘设置密码：echo “zeng” | passwd –stdin zenghao</p><p>###47.userdel 删除用户</p><p>-r  用户文件一并删除</p><p>###48.chage [-ldEImMW] 账号名 | 修改用户密码的相关属性</p><p>-l  列出该账号的详细密码参数；<br>-d  后面接日期，修改 shadow 第三字段(最近一次更改密码的日期)，格式YYYY-MM-DD<br>-E  后面接日期，修改 shadow 第八字段(账号失效日)，格式 YYYY-MM-DD<br>-I  后面接天数，修改 shadow 第七字段(密码失效日期)<br>-m  后面接天数，修改 shadow 第四字段(密码最短保留天数)<br>-M  后面接天数，修改 shadow 第五字段(密码多久需要进行变更)<br>-W  后面接天数，修改 shadow 第六字段(密码过期前警告日期)</p><p>###49.usermod [-cdegGlsuLU] username | 修改用户的相关属性</p><p>-c  后面接账号的说明，即 /etc/passwd 第五栏的说明栏，可以加入一些账号的说明。<br>-d  后面接账号的家目录，即修改 /etc/passwd 的第六栏；<br>-e  后面接日期，格式是 YYYY-MM-DD 也就是在 /etc/shadow 内的第八个字段数据啦！<br>-f  后面接天数为 shadow 的第七字段。<br>-g  后面接初始群组，修改 /etc/passwd 的第四个字段，亦即是GID的字段！<br>-G  后面接次要群组，修改这个使用者能够支持的群组<br>-l  后面接账号名称。亦即是修改账号名称， /etc/passwd 的第一栏！<br>-s  后面接 Shell 的实际档案，例如 /bin/bash 或 /bin/csh 等等。<br>-u  后面接 UID 数字啦！即 /etc/passwd 第三栏的资料；<br>-L  冻结密码<br>-U  解冻密码</p><p>###50.id [username] | 查看用户相关的id信息，还可以用来判断用户是否存在</p><p>###51.groups 查看登陆用户支持的群组， 第一个输出的群组为有效群组</p><p>###52.newgrp 切换有效群组</p><p>###53.groupadd [-g gid] 组名 | 添加组</p><p>-g  设定添加组的特定组id</p><p>###54.groupmod [-g gid] [-n group_name] 群组名 | 修改组信息</p><p>-g  修改既有的 GID 数字<br>-n  修改既有的组名</p><p>###55.groupdel [groupname] | 删除群组</p><p>###56.gpasswd | 群组管理员功能</p><p>root管理员动作：<br>   -gpasswd groupname 设定密码<br>   -gpasswd [-A user1,…] [-M user3,…] groupname<br>       -A  将 groupname 的主控权交由后面的使用者管理(该群组的管理员)<br>       -M  将某些账号加入这个群组当中<br>   -gpasswd [-r] groupname<br>       -r  将 groupname 的密码移除<br>群组管理员动作：</p><ul><li>gpasswd [-ad] user groupname<br>  -a  将某位使用者加入到 groupname 这个群组当中<br>  -d  将某位使用者移除出 groupname 这个群组当中</li></ul><p>###57.chfn修改个人信息</p><p>###58.mount [-t vfstype] [-o options] device dir</p><p>-ro 采用只读方式挂接设备<br>-rw 采用读写方式挂接设备<br>eg:mount /home/mydisk.iso /tmp/mnt 通过mnt访问mydisk内的内容</p><p>###59.umount 取消挂载</p><p>###60.cut</p><p>-b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。<br>-c ：以字符为单位进行分割。<br>-d ：自定义分隔符，默认为制表符。<br>-f  ：与-d一起使用，指定显示哪个区域。</p><p>###61.sort</p><p>-n   依照数值的大小排序。<br>-o&lt;输出文件&gt;   将排序后的结果存入指定的文件。<br>-r   以相反的顺序来排序。<br>-t&lt;分隔字符&gt;   指定排序时所用的栏位分隔字符。<br>-k  选择以哪个区间进行排序。</p><p>###62.wc 统计指定文件中的字节数、字数、行数, 并将统计结果显示输出</p><p>-l filename 报告行数<br>-c filename 报告字节数<br>-m filename 报告字符数<br>-w filename 报告单词数</p><p>###63.uniq 去除文件中相邻的重复行</p><p>-c或——count：在每列旁边显示该行重复出现的次数；<br>-d或–repeated：仅显示重复出现的行列；<br>-f&lt;栏位&gt;或–skip-fields=&lt;栏位&gt;：忽略比较指定的栏位；<br>-s&lt;字符位置&gt;或–skip-chars=&lt;字符位置&gt;：忽略比较指定的字符；<br>-u或——unique：仅显示出一次的行列；<br>-w&lt;字符位置&gt;或–check-chars=&lt;字符位置&gt;：指定要比较的字符。</p><p>###64.set 显示环境变量和普通变量</p><p>###65.env 显示环境变量</p><p>###66.export 把普通变量变成环境变量</p><p>###67.unset 删除一个环境变量</p><p>aaa(){} 定义函数</p><p>###68.read</p><p>-p  接提示字符<br>-t  接等待的秒数</p><p>###69.declare、typeset</p><p>-i 声明为整数<br>-a 声明为数组<br>-f 声明为函数<br>-r 声明为只读</p><p>###70.ulimit 限制使用者的某些系统资源</p><p>-f  此 shell 可以建立的最大档案容量 (一般可能设定为 2GB)单位为 Kbytes eg: ulimit -f 1024 限制使用者仅能建立 1MBytes 以下的容量的档案</p><p>###71.df [选项] [文件] | 显示指定磁盘文件的可用空间,如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示</p><p>-a  显示全部文件系统<br>-h  文件大小友好显示<br>-l  只显示本地文件系统<br>-i  显示inode信息<br>-T  显示文件系统类型</p><p>###72.du [选项] [文件] | 显示每个文件和目录的磁盘使用空间</p><p>-h  方便阅读的方式<br>-s  只显示总和的大小</p><p>###73.ln [参数] [源文件或目录] [目标文件或目录] | 某一个文件在另外一个位置建立一个同步的链接</p><p>-s  建立软连接<br>-v  显示详细的处理过程</p><p>###74.diff [参数] [文件1或目录1] [文件2或目录2] | 比较单个文件或者目录内容</p><p>-b 　不检查空格字符的不同。<br>-B 　不检查空白行。<br>-i  不检查大小写<br>-q  仅显示差异而不显示详细信息<br>eg: diff a b &gt; parch.log 比较两个文件的不同并产生补丁</p><p>###75.date [参数]… [+格式] | 显示或设定系统的日期与时间</p><p>%H 小时(以00-23来表示)。<br>%M 分钟(以00-59来表示)。<br>%P AM或PM。<br>%D 日期(含年月日)<br>%U 该年中的周数。<br>date -s “2015-10-17 01:01:01″ //时间设定<br>date +%Y%m%d         //显示前天年月日<br>date +%Y%m%d –date=”+1 day/month/year”  //显示前一天/月/年的日期<br>date +%Y%m%d –date=”-1 day/month/year”  //显示后一天/月/年的日期<br>date -d ‘2 weeks’ 2周后的日期</p><p>###76.cal [参数] 月份 [年份] | 查看日历</p><p>-1  显示当月的月历<br>-3  显示前、当、后一个月的日历<br>-m  显示星期一为一个星期的第一天<br>-s  （默认）星期天为第一天<br>-j  显示当月是一年中的第几天的日历<br>-y  显示当前年份的日历</p><p>###77.ps | 列出当前进程的快照</p><p>a   显示所有的进程<br>-a  显示同一终端下的所有程序<br>e   显示环境变量<br>f   显示进程间的关系<br>-H  显示树状结构<br>r   显示当前终端的程序<br>T   显示当前终端的所有程序<br>-au 显示更详细的信息<br>-aux    显示所有包含其他使用者的行程<br>-u  指定用户的所有进程</p><p>###78.top [参数] | 显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率、CPU占用率等</p><p>###79.kill [参数] [进程号] | 杀死进程</p><p>###80.free [参数] | 显示linux系统中空闲的、已用的物理内存及swap内存,及被内核使用的buffer</p><p>###81.vmstat | 对操作系统的虚拟内存、进程、CPU活动进行监控</p><p>###82.iostat [参数] [时间t] <a href="每隔t时间刷新一次，最多刷新n次">次数n</a>| 对系统的磁盘操作活动进行监视,汇报磁盘活动统计情况，同时也会汇报出CPU使用情况</p><p>-p[磁盘] 显示磁盘和分区的情况</p><p>###83.watch [参数] [命令] |重复执行某一命令以观察变化</p><p>-n  时隔多少秒刷新<br>-d  高亮显示动态变化</p><p>###84.at [参数] [时间] | 在一个指定的时间执行一个指定任务，只能执行一次</p><p>HH:MM[am|pm] + number [minutes|hours|days|weeks] 强制在某年某月某日的某时刻进行该项任务<br>atq 查看系统未执行的任务<br>atrm n 删除编号为n的任务<br>at -c n 显示编号为n的任务的内容</p><p>###85.crontab | 定时任务调度</p><p>file    载入crontab<br>-e  编辑某个用户的crontab文件内容<br>-l  显示某个用户的crontab文件内容<br>-r  删除某个用户的crontab文件</p><p>###86.ifconfig [网络设备] [参数] | 查看和配置网络设备</p><p>###87.route | 显示和操作IP路由表</p><p>###88.ping [参数] [主机名或IP地址] | 测试与目标主机的连通性</p><p>-q  只显示最后的结果</p><p>###89.netstat | 显示与IP、TCP、UDP和ICMP协议相关的统计数据</p><p>###90.telnet [参数] [主机] | 用于远程登录，采用明文传送报文，安全性不好</p><p>###91.rcp [参数] [源文件] [目标文件] | 远程文件拷贝</p><p>-r  递归复制<br>-p  保留源文件的属性<br>usage: rcp –r remote_hostname:remote_dir local_dir</p><p>###92.wget [参数] [URL地址] | 直接从网络上下载文件</p><p>-o FILE 把记录写到FILE文件中    eg : wget -O a.txt URL<br>wget –limit-rate=300k URL  限速下载</p><p>###93.awk</p><p>-F 分隔符  以分隔符分隔内容<br>{}  要执行的脚本内容 eg:cat /etc/passwd |awk  -F ‘:’  ‘{print $1”\t”$7}’</p><p>###94.sed 对数据行进行替换、删除、新增、选取等操作</p><p>a   新增，在新的下一行出现<br>c   取代，取代 n1,n2 之间的行 eg: sed ‘1,2c Hi’ ab<br>d   删除<br>i   插入，在新的上一行出现</p><p>###95.paste 合并文件，需确保合并的两文件行数相同</p><p>-d  指定不同于空格或tab键的域分隔符<br>-s  按行合并，单独一个文件为一行</p><p>###96.su [参数] user | 切换登陆</p><p>-l  切换时连同环境变量、工作目录一起改变<br>-c command  执行command变回原来的使用者</p><p>###97.sudo | 以特定用户的权限执行特定命令</p><p>-l  列出当前用户可执行的命令<br>-u username#uid 以指定用户执行命令</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###1.ls [选项] [目录名 | 列出相关目录下的所有目录和文件&lt;/p&gt;
&lt;p&gt;-a  列出包括.a开头的隐藏文件的所有文件&lt;br&gt;-A  通-a，但不列出”.”和”..”&lt;br&gt;-l  列出文件的详细信息&lt;br&gt;-c  根据ctime排序显示&lt;br&gt;-t  根据文件
      
    
    </summary>
    
    
      <category term="命令 运维" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/%E5%91%BD%E4%BB%A4-%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>nginx 安装与排错</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/07/16/nginx-%E5%AE%89%E8%A3%85%E4%B8%8E%E6%8E%92%E9%94%99/"/>
    <id>https://kingle.我爱你/2018/07/16/nginx-安装与排错/</id>
    <published>2018-07-16T09:25:23.000Z</published>
    <updated>2018-07-16T09:26:32.126Z</updated>
    
    <content type="html"><![CDATA[<p>一， 安装 nginx 所需要的pcre库 即：perl 兼容正则表达式<br>        yum install pcre pcre-devel -y</p><pre><code>    rpm -qa pcre pcre-devel        检查是否安装好pcre-devel，openssl-devel，        rpm -qa pcre-devel pcre            [root@kingle0001 ~]# rpm -qa openssl-devel openssl                                openssl-devel-1.0.1e-57.el6.x86_64                                openssl-1.0.1e-57.el6.x86_64        rpm -qa openssl-devel openssl        [root@kingle0001 ~]# rpm -qa openssl-devel openssl                            openssl-1.0.1e-57.el6.x86_64 少了一个开始安装Nginx     下载：wegt -q http://nginx.org/download/nginx-1.15.1.tar.gz    useradd nginx -s /sbin/nologin -M    tar -zxvf nginx-1.6.3.tar.gz    cd nginx-1.15.1    ./configure --user=nginx --group=nginx --prefix=/application/nginx-1.15.1/ --with-http_stub_status_module --with-http_ssl_module    make    make install    ln -s /application/nginx-1.15.1 /application/nginx/启动：  /application/nginx/nginx-1.15.1/sbin/nginx </code></pre><p>二，nginx进不去欢迎界面解决方法<br>    一：关闭selinux<br>            setenforce 0 临时关闭<br>            永久关闭编辑文件/etc/selinux/config<br>        关闭防火墙<br>            /etc/init.d/iptables stop 关闭防火墙</p><pre><code>    chkconfig iptables off 开机自启关闭    /etc/init.d/iptabes status 查看防火墙当前状态查看80端口信息 netstat -lnt|grep 80 查看nginx进程 ps-ef|grep nginx 查看nginx的错误日志  cat /application/nginx/nginx-1.15.1/error.logping 10.0.0.200 看是否联通wegt 10.0.0.200 或者curl -I 10.0.0.200 模拟用户访问</code></pre><p>三，    编辑 html ： vim /application/nginx/nginx-1.15.1/html/index.html<br>        （所以说还是需要html知识的）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一， 安装 nginx 所需要的pcre库 即：perl 兼容正则表达式&lt;br&gt;        yum install pcre pcre-devel -y&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    rpm -qa pcre pcre-devel
        检查是否安装好
      
    
    </summary>
    
    
      <category term="nginx" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>单引号，双引号，反引号区别</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/07/16/%E5%8D%95%E5%BC%95%E5%8F%B7%EF%BC%8C%E5%8F%8C%E5%BC%95%E5%8F%B7%EF%BC%8C%E5%8F%8D%E5%BC%95%E5%8F%B7%E5%8C%BA%E5%88%AB/"/>
    <id>https://kingle.我爱你/2018/07/16/单引号，双引号，反引号区别/</id>
    <published>2018-07-16T06:46:01.000Z</published>
    <updated>2018-07-16T07:14:51.064Z</updated>
    
    <content type="html"><![CDATA[<pre><code>你可能一直在纠结这三种符号的区别，看完我的你就不要走出去还说不回了哈，，，，</code></pre><p>1，单引号 ‘’ ： 强引用<br>        任何变量($var)、特殊转义字符(如“\t \r \n”等)不会被解析，<br>        因此PHP的解析速度更快，转义字符仅仅支持“\’”和“\”这样<br>        对单引号和反斜杠本身的转义.<br>         例如：<br>             创建变量：<br>                [root@kingle0001 ~]# A=100<br>                [root@kingle0001 ~]# B=ls<br>                [root@kingle0001 ~]# echo a<br>                        a<br>                [root@kingle0001 ~]# echo A<br>                        A<br>                [root@kingle0001 ~]# echo ‘A’<br>                        A<br>                [root@kingle0001 ~]# echo ‘$A’<br>                        $A<br>                [root@kingle0001 ~]# echo ‘$B’<br>                        $B</p><pre><code>可以看出单引号里面的不管是字符还是变量给啥出啥</code></pre><p>2， 双引号：弱引用<br>        [root@kingle0001 ~]# echo “$A”<br>                100<br>        [root@kingle0001 ~]# echo “$B”<br>                ls<br>        可以看到只解析变量<br>3，反引号: 命令替换<br>        [root@kingle0001 ~]# echo <code>$A</code><br>        -bash: 100: command not found</p><pre><code>[root@kingle0001 ~]# echo `$B`123 anaconda-ks.cfg cookie.txt只解析命令。而变量给出字符串不予解析</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;你可能一直在纠结这三种符号的区别，看完我的你就不要走出去还说不回了哈，，，，
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;1，单引号 ‘’ ： 强引用&lt;br&gt;        任何变量($var)、特殊转义字符(如“\t \r \n”等)不会被解析，&lt;br&gt;       
      
    
    </summary>
    
    
      <category term="单引号，双引号，反引号" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/%E5%8D%95%E5%BC%95%E5%8F%B7%EF%BC%8C%E5%8F%8C%E5%BC%95%E5%8F%B7%EF%BC%8C%E5%8F%8D%E5%BC%95%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>高并发文件描述符之ulimit</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/07/14/%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B9%8Bulimit/"/>
    <id>https://kingle.我爱你/2018/07/14/高并发之ulimit/</id>
    <published>2018-07-14T08:22:14.000Z</published>
    <updated>2018-07-14T08:24:20.358Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ulimit命令-主要是用来限制系统用户对shell资源的访问"><a href="#ulimit命令-主要是用来限制系统用户对shell资源的访问" class="headerlink" title="ulimit命令 主要是用来限制系统用户对shell资源的访问"></a>ulimit命令 主要是用来限制系统用户对shell资源的访问</h3><pre><code>或许这样你并不了解ulimit    0.0:    假设有这样一种情况，当一台 Linux 主机上同时登陆了 10 个人，在系统资源无限制的情况下，这 10 个用户同时打开了 500 个文档，而假设每个文档的大小有 10M，这时系统的内存资源就会受到巨大的挑战。而实际应用的环境要比这种假设复杂的多，例如在一个嵌入式开发环境中，各方面的资源都是非常紧缺的，对于开启文件描述符的数量，分配堆栈的大 小，CPU 时间，虚拟内存大小，等等，都有非常严格的要求。资源的合理限制和分配，不仅仅是保证系统可用性的必要条件，也与系统上软件运行的性能有着密不可分的联 系。这时，ulimit 可以起到很大的作用，它是一种简单并且有效的实现资源限制的方式。ulimit 用于限制 shell 启动进程所占用的资源，支持以下各种类型的限制：所创建的内核文件的大小、进程数据块的大小、Shell 进程创建文件的大小、内存锁住的大小、常驻内存集的大小、打开文件描述符的数量、分配堆栈的最大大小、CPU 时间、单个用户的最大线程数、Shell 进程所能使用的最大虚拟内存。同时，它支持硬资源和软资源的限制。作为临时限制，ulimit 可以作用于通过使用其命令登录的 shell 会话，在会话终止时便结束限制，并不影响于其他 shell 会话。而对于长期的固定限制，ulimit 命令语句又可以被添加到由登录 shell 读取的文件中，作用于特定的 shell </code></pre><h3 id="ulimit-："><a href="#ulimit-：" class="headerlink" title="ulimit ："></a>ulimit ：</h3><pre><code>-a：显示目前资源限制的设定；-c &lt;core文件上限&gt;：设定core文件的最大值，单位为区块；-d &lt;数据节区大小&gt;：程序数据节区的最大值，单位为KB；-f &lt;文件大小&gt;：shell所能建立的最大文件，单位为区块；-H：设定资源的硬性限制，也就是管理员所设下的限制；-m &lt;内存大小&gt;：指定可使用内存的上限，单位为KB；-n &lt;文件数目&gt;：指定同一时间最多可开启的文件数；-p &lt;缓冲区大小&gt;：指定管道缓冲区的大小，单位512字节；-s &lt;堆叠大小&gt;：指定堆叠的上限，单位为KB；-S：设定资源的弹性限制；-t &lt;CPU时间&gt;：指定CPU使用时间的上限，单位为秒；-u &lt;程序数目&gt;：用户最多可开启的程序数目；-v &lt;虚拟内存大小&gt;：指定可使用的虚拟内存上限，单位为KB。core file size          (blocks, -c) 0           #core文件的最大值为100 blocks。    -----&gt;在一个程序崩溃时,它一般会在指定目录下生成一个core文件。core文件仅仅是一个内存映象(同时加上调试信息),主要是用来调试的data seg size           (kbytes, -d) unlimited   #进程的数据段可以任意大。scheduling priority             (-e) 0file size               (blocks, -f) unlimited   #文件可以任意大。pending signals                 (-i) 98304       #最多有98304个待处理的信号。max locked memory       (kbytes, -l) 32          #一个任务锁住的物理内存的最大值为32KB。max memory size         (kbytes, -m) unlimited   #一个任务的常驻物理内存的最大值。open files                      (-n) 1024        #一个任务最多可以同时打开1024的文件。pipe size            (512 bytes, -p) 8           #管道的最大空间为4096字节。POSIX message queues     (bytes, -q) 819200      #POSIX的消息队列的最大值为819200字节。real-time priority              (-r) 0stack size              (kbytes, -s) 10240       #进程的栈的最大值为10240字节。cpu time               (seconds, -t) unlimited   #进程使用的CPU时间。max user processes              (-u) 98304       #当前用户同时打开的进程（包括线程）的最大个数为98304。virtual memory          (kbytes, -v) unlimited   #没有限制进程的最大地址空间。file locks                      (-x) unlimited   #所能锁住的文件的最大个数没有限制。高并发服务器解决方法一：    在服务高并发服务器来书ulimit -n    1024 这个默认值是完全不够的需要把值调大一点    -----》 echo &apos;*    -    nofile     65535&apos; &gt;&gt;/etc/secur方法二：    ulimit -SHn 65535</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ulimit命令-主要是用来限制系统用户对shell资源的访问&quot;&gt;&lt;a href=&quot;#ulimit命令-主要是用来限制系统用户对shell资源的访问&quot; class=&quot;headerlink&quot; title=&quot;ulimit命令 主要是用来限制系统用户对shell资源的访
      
    
    </summary>
    
    
      <category term="ulimit" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/ulimit/"/>
    
  </entry>
  
  <entry>
    <title>linux etc,var文件系统介绍</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/07/13/linux-etc%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/"/>
    <id>https://kingle.我爱你/2018/07/13/linux-etc文件系统介绍/</id>
    <published>2018-07-13T11:04:51.000Z</published>
    <updated>2018-07-13T11:07:39.983Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1）-目录结构说明："><a href="#1）-目录结构说明：" class="headerlink" title="1） 目录结构说明："></a>1） 目录结构说明：</h3><pre><code>windows：磁盘----分区---格式化--系统linux：磁盘--分区--生成一个文件（磁盘分区）linux 中一切皆文件ll -h 显示人类能看懂的mount -o remount，rw /安装tree yum install tree -y查看一级根 tree -L 1 /esc . 快速输入上一个字符串。etc下重要文件：nfig/network-scripts/ifcfg-eth0        DEVICE=eth0  --&gt; 设备名称eth0         HWADDR=00:0c:29:8c:e2:3b  mac地址        TYPE=Ethernet  网络类型        UUID=ffe5f1b3-26ab-4312-a364-c0061f01bbb6  硬件标示id信息    查看分区的命令blkid        ONBOOT=yes   ------------------&gt;    一定设置yes&apos; 激活网卡（给网卡供电）        NM_CONTROLLED=yes   网络控制服务        BOOTPROTO=none         启动协议：获取地址方式  静态        IPADDR=10.0.0.200      网关        NETMASK=255.255.255.0  dns        DNS2=223.5.5.5        GATEWAY=10.0.0.2   服务器网卡ip        DNS1=114.114.114.114  子网掩码        USERCTL=no        PEERDNS=yes            网卡dns配置是否覆盖        IPV6INIT=no         ；命令分隔符&amp;&amp;  前面命令执行成功后在执行后一条命令</code></pre><h3 id="2）-重启网0卡-service-network-restart-（字太多不建议使用）"><a href="#2）-重启网0卡-service-network-restart-（字太多不建议使用）" class="headerlink" title="2）    重启网0卡 service network restart （字太多不建议使用）"></a>2）    重启网0卡 service network restart （字太多不建议使用）</h3><pre><code>/etc/resolv.conf dns网卡配置信息</code></pre><h3 id="3）-etc-hosts-主机名称或者域名信息-本机设置域名和ip地址装换关系"><a href="#3）-etc-hosts-主机名称或者域名信息-本机设置域名和ip地址装换关系" class="headerlink" title="3）/etc/hosts  主机名称或者域名信息 本机设置域名和ip地址装换关系"></a>3）/etc/hosts  主机名称或者域名信息 本机设置域名和ip地址装换关系</h3><pre><code>修改主机名称 的时候要修改这个文件</code></pre><h3 id="4）-etc-sysconfig-network"><a href="#4）-etc-sysconfig-network" class="headerlink" title="4）/etc/sysconfig/network"></a>4）/etc/sysconfig/network</h3><pre><code>用于修改系统主机名信息：配置网关信息    主机名修改步骤：        第一：    hostname kingle  修改主机名称不会立即生效 说明：命令修改主机名只是临时生效；    第二：编写配置文件：            vim /etc/sysconfig/network    第三：编写/etc/host  配置好主机名于ip地址的关系</code></pre><h3 id="5）-etc-fstab"><a href="#5）-etc-fstab" class="headerlink" title="5）/etc/fstab"></a>5）/etc/fstab</h3><pre><code>file system mounting table     磁盘 做raid （阵列卡） 进行分区  格式化 文件系统 默认的挂载参数/dev/cdrom /mnt iso9660 defaults 0 0cat /proc/mounts 可以看到挂载文件的属性mount -auto /etc/fstab --&gt;  mount -a</code></pre><h3 id="6）-etc-rc-local-开机自启"><a href="#6）-etc-rc-local-开机自启" class="headerlink" title="6）/etc/rc.local  开机自启"></a>6）/etc/rc.local  开机自启</h3><pre><code>将你要的操作执行的命令，直接放入到此文件，可是让操作命令自动开机自启</code></pre><h3 id="7）-etc-inittab"><a href="#7）-etc-inittab" class="headerlink" title="7）/etc/inittab"></a>7）/etc/inittab</h3><pre><code>linux 系统有不同的进入方式，系统的运行级别0 -halt 关机运行级别1 - single user mode 单用户级别2 - multiuser，without NFS 多用户级别，但是不支持nfs （类似3级别但是没有网络）3 - Full multiuser mode 正常多用户模式 （命令行模式）4 - unused 未使用级别5 - X11 图形化界面 （安装oracle）6 - reboot 重启</code></pre><h3 id="8）-etc-init-d-目录"><a href="#8）-etc-init-d-目录" class="headerlink" title="8）/etc/init.d (目录)"></a>8）/etc/init.d (目录)</h3><pre><code>主要用于存放服务的启动和关闭    但是并不是所有的程序都放在这里系统软件的安装：    1，软件的安装方式（启动脚本会放在etc/init.d）        rpm 命令 rpm -ivh                         -i install                        -v 显示详细信息                        -h 显示信息         yum         优化yum源         wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo        3.编译安装是不会放在/etc/inin.d</code></pre><h3 id="9）-etc-profile-加载命令的配置信息文件"><a href="#9）-etc-profile-加载命令的配置信息文件" class="headerlink" title="9）    /etc/profile (加载命令的配置信息文件)"></a>9）    /etc/profile (加载命令的配置信息文件)</h3><pre><code>此文件一般加载配置是环境变量信息或者别名的配置信息如何让配置环境变量export （让配置修改环境变量全局生效）环境变量 PS1 LANG PATH 设置修改PATH环境方法 ll /bin/ -ddr-xr-xr-x. 2 root root 4096 Jul  4 13:30 /bin/mkdir /bin01ll /bin01/ -ddrwxr-xr-x 2 root root 4096 Jul 13 11:15 /bin01/mv /bin/cat /bin01/ll /bin/catls: cannot access /bin/cat: No such file or directoryll /bin01/cat -rwxr-xr-x. 1 root root 48568 Mar 23  2017 /bin01/catcat /etc/hosts-bash: /bin/cat: No such file or directoryecho $PATH/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/binexport PATH=&quot;$PATH:/bin01&quot;echo $PATH/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/bin01cat /etc/hosts127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain610.0.0.200   oldgirl</code></pre><h3 id="10）-etc-bashrc-加载命令配置文件"><a href="#10）-etc-bashrc-加载命令配置文件" class="headerlink" title="10）/etc /bashrc  加载命令配置文件"></a>10）/etc /bashrc  加载命令配置文件</h3><h3 id="11）-bash-profile-bashrc"><a href="#11）-bash-profile-bashrc" class="headerlink" title="11）    ~/.bash_profile  ~/.bashrc"></a>11）    ~/.bash_profile  ~/.bashrc</h3><pre><code>用户家下面  ~/.bash_profile  ~/.bashrc （使用优先）/etc 目录下面 /etc/profileetc/bash 全局命令  （其次）souce ==. </code></pre><h3 id="11）-var-目录中保存的信息经常变化-日志文件"><a href="#11）-var-目录中保存的信息经常变化-日志文件" class="headerlink" title="11）/ var    目录中保存的信息经常变化 日志文件"></a>11）/ var    目录中保存的信息经常变化 日志文件</h3><pre><code>/var/log/messages --系统日子文件不断增加 ，对其切割处理/var/log/secure  记录用户登录信息    tail -f /var/log/secure 实时监控文件信息        -f  如果监控文件被删除了，会停止监控         -F  监控文件删除了，依旧监控/var/spool 定时任务/var/spool/cron/root  系统闹钟/porc   /proc/cpuinfo   cpu 信息/proc/meminfo    系统内存/porc/loadavg    负载信息   ---&gt;uptime 查看负载信息  ：0.00    0.00   0.00 1/168 7396一分钟 五分钟 十五分钟/porc/mounts</code></pre><h3 id="top-监控系统运行情况"><a href="#top-监控系统运行情况" class="headerlink" title="top  监控系统运行情况"></a>top  监控系统运行情况</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1）-目录结构说明：&quot;&gt;&lt;a href=&quot;#1）-目录结构说明：&quot; class=&quot;headerlink&quot; title=&quot;1） 目录结构说明：&quot;&gt;&lt;/a&gt;1） 目录结构说明：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;windows：磁盘----分区---格式化--系统
lin
      
    
    </summary>
    
    
      <category term="Linux etc var kingle" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/Linux-etc-var-kingle/"/>
    
  </entry>
  
  <entry>
    <title>linux 删除文件深入了解及任务定时--Linux的闹钟</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/07/13/linux-%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3%E5%8F%8A%E4%BB%BB%E5%8A%A1%E5%AE%9A%E6%97%B6-Linux%E7%9A%84%E9%97%B9%E9%92%9F/"/>
    <id>https://kingle.我爱你/2018/07/13/linux-删除文件深入了解及任务定时-Linux的闹钟/</id>
    <published>2018-07-13T11:01:18.000Z</published>
    <updated>2018-07-13T11:03:30.287Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-linux-删除一个文件的权限要看文件所在的目录的权限"><a href="#1-linux-删除一个文件的权限要看文件所在的目录的权限" class="headerlink" title="1. linux 删除一个文件的权限要看文件所在的目录的权限"></a>1. linux 删除一个文件的权限要看文件所在的目录的权限</h3><pre><code>删除文件需要对对这个目录拥有w权限修改文件 查看文件的内容需要对文件有rw权限删除 创建一个文件 需要对文件坐在地目录拥有wx权限</code></pre><h3 id="2-chattr-添加隐藏文件-lsattr-查看隐藏权限-append-追加权限-只能追加"><a href="#2-chattr-添加隐藏文件-lsattr-查看隐藏权限-append-追加权限-只能追加" class="headerlink" title="2. chattr  添加隐藏文件 lsattr  查看隐藏权限  append 追加权限 只能追加"></a>2. chattr  添加隐藏文件 lsattr  查看隐藏权限  append 追加权限 只能追加</h3><pre><code>i 不可毁灭的 无法修改无法删除  对于系统的一些需要保护的文件可以添加 eg：/etc/inittab /etc/passwd /etc/shadow</code></pre><h3 id="3-suid-运行莫一个命令的时候相当于root-加特殊权限-chmod-u-s-bin-rm-超级危险啊"><a href="#3-suid-运行莫一个命令的时候相当于root-加特殊权限-chmod-u-s-bin-rm-超级危险啊" class="headerlink" title="3. suid 运行莫一个命令的时候相当于root   加特殊权限 chmod u+s /bin/rm  超级危险啊"></a>3. suid 运行莫一个命令的时候相当于root   加特殊权限 chmod u+s /bin/rm  超级危险啊</h3><pre><code>chmod o+t /tmp  粘滞位 --&gt;任何人都可以创建，但是只能自己管理自己的linux  定时任务！！闹钟！！        atd        运行一次    不用        anacron 非7*24小时的服务器crond   用户的定时任务，和系统的定时任务    系统定时任务不要求深究我们用的叫用户定时任务    查看任务 crontab -l cat /var spool/cron/root    编辑任务 crontab -e vim /var spool/cron/root1，！！定时任务依赖的软件 是否能用            /etc/init.d/crond  status2， 查看crond 是否开机自启    chkconfig | grep crond3， 查看sshd是否运行    ps-ef |grep sshd进程：正在运行的程序守护进程：一直运行的程序</code></pre><h3 id="4，-crontab-怎么使用：-有语法检查功能"><a href="#4，-crontab-怎么使用：-有语法检查功能" class="headerlink" title="4，    crontab  怎么使用： 有语法检查功能"></a>4，    crontab  怎么使用： 有语法检查功能</h3><pre><code>    查看任务 crontab -l cat /var spool/cron/root    编辑任务 crontab -e vim /var spool/cron/root定时文件放置的目录：    /var/spool/cron/定时任务的日志文件：    /var/log/cron哪些用禁止使用定时任务    /etc/cron/定时任务就是什么时间做什么任务!* 每 *   * * * * 命令/n */10 表示每隔十分钟    ntpdate ntp1.aliyun.com    crontab -e * * * * * /usr/sbin/ntpdate ntp1.aliyun.com &gt;/dev/null 2&gt;$1- 00 07-11 * * * cmd 每天上午7点到11点运行一次每周一周五 凌晨三点到五点的整点和半点 运行    分 时  周  月  周     00，30    03-05    *    *    01-05</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-linux-删除一个文件的权限要看文件所在的目录的权限&quot;&gt;&lt;a href=&quot;#1-linux-删除一个文件的权限要看文件所在的目录的权限&quot; class=&quot;headerlink&quot; title=&quot;1. linux 删除一个文件的权限要看文件所在的目录的权限&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="linux 删除 闹钟" scheme="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/tags/linux-%E5%88%A0%E9%99%A4-%E9%97%B9%E9%92%9F/"/>
    
  </entry>
  
  <entry>
    <title>命令</title>
    <link href="https://kingle.%E6%88%91%E7%88%B1%E4%BD%A0/2018/07/12/%E5%91%BD%E4%BB%A4/"/>
    <id>https://kingle.我爱你/2018/07/12/命令/</id>
    <published>2018-07-12T11:34:40.000Z</published>
    <updated>2018-07-12T11:38:05.069Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-tree"><a href="#1-tree" class="headerlink" title="1,tree"></a>1,tree</h3><pre><code>-d /etc/ 参数表示只显示目录-f 显示内容的完整-i 不显示树枝显示完整路径</code></pre><h3 id="2-mkdir"><a href="#2-mkdir" class="headerlink" title="2,mkdir"></a>2,mkdir</h3><pre><code>-p 递归创建多级目录-v 显示创建目录的过程-m 设置目录的默认权限mkdir -p `cat ~/oldbay.txt` </code></pre><h3 id="3-touch"><a href="#3-touch" class="headerlink" title="3,touch"></a>3,touch</h3><pre><code>-a 只更改指定文件最后访问-m 修改最后的修改时间-d 指定文件的修改时间</code></pre><h3 id="4-stat"><a href="#4-stat" class="headerlink" title="4,stat"></a>4,stat</h3><pre><code>查看文件的时间搓</code></pre><h3 id="5-ls"><a href="#5-ls" class="headerlink" title="5,ls"></a>5,ls</h3><pre><code>-l 详细信息-a 显示隐藏文件-t 根据时间排序-F 文件类型    * 代表普通文件    / 代表目录    = 代表套接字（socket）    | ------    @ 符号链接-i 显示inode节点--time-style=long-iso 显示完整的时间属性-lhi含义 第一列：inode 索引节点编号第二列：文件类型属性第三列：硬链接个数第四列：文件所属的用户第五列：文件所属的组第六列：文件的大小</code></pre><h3 id="6-cp"><a href="#6-cp" class="headerlink" title="6,cp"></a>6,cp</h3><pre><code>-p 复制文件保持源文件属性-d 符号链接-r 递归复制 -a 上面总和-i 覆盖前提示-t 颠倒格式</code></pre><h3 id="7-mv"><a href="#7-mv" class="headerlink" title="7,mv"></a>7,mv</h3><pre><code>-f 不提示覆盖-i 询问覆盖-n 不覆盖已存在的文件-t 源文件和目标文件对调</code></pre><h3 id="8-rm"><a href="#8-rm" class="headerlink" title="8,rm"></a>8,rm</h3><pre><code>-f 强制删除-i 删除前提示-I 删除文件过多需要提示-r 递归删除</code></pre><h3 id="9-rmdir"><a href="#9-rmdir" class="headerlink" title="9,rmdir"></a>9,rmdir</h3><pre><code>-p 递归删除目录-v 显示命令执行的过程</code></pre><h3 id="10-in"><a href="#10-in" class="headerlink" title="10,in"></a>10,in</h3><pre><code>-s 创建软连接（符号链接）</code></pre><h3 id="11-find"><a href="#11-find" class="headerlink" title="11,find"></a>11,find</h3><pre><code>pathname :路径Options 模块    -depth 从指定目录下最深的子目录    -maxdepth levelsTests模块    -atime 按照文件的访问时间查找文件-type        b 块设备文件    c 字符设备文件    d 目录    p 管道文件    l 符号链接    f 普通文件    $ socket 文件    D dooractions模块    -delete 讲查找的文件删除    -exec 对匹配的文件执行改参数给出的shell命令    -ok 和-exec作用相同    -print 讲匹配的文件输出到标准输出    ！取反    忽略目录：find /data \(/data/dir2 -o -path /data/dirs \) -prune -o -print</code></pre><h3 id="12-xargs"><a href="#12-xargs" class="headerlink" title="12,xargs"></a>12,xargs</h3><pre><code>-n 指定每行最大参数量-d 自定义分隔符-i 以{}代替前面的结果-I 指定一个符号代替前面的结果-p 提示用户是否执行</code></pre><h3 id="13-rename"><a href="#13-rename" class="headerlink" title="13,rename"></a>13,rename</h3><pre><code>rename form to file    form 代表需要提哈U呢或者处理的字符    to 把前面的from 代表内容替换我to的代表内容    file 待处理的文件</code></pre><h3 id="14-dasename"><a href="#14-dasename" class="headerlink" title="14,dasename"></a>14,dasename</h3><pre><code>显示文件名或目录名    用于去除文件后缀部分</code></pre><h3 id="15-dirname"><a href="#15-dirname" class="headerlink" title="15,dirname"></a>15,dirname</h3><pre><code>显示文件或者目录路径</code></pre><h3 id="16-chattr-option-选项-mode-模式-files-问价或者路径"><a href="#16-chattr-option-选项-mode-模式-files-问价或者路径" class="headerlink" title="16,chattr [option 选项] [mode 模式] [files 问价或者路径]"></a>16,chattr [option 选项] [mode 模式] [files 问价或者路径]</h3><pre><code>改变文件扩展属性    -R 递归更改目录属性    -V 显示命令执行的过程    mode项：    + 增加参数    - 移除参数    = 跟新为指定参数    A 告诉系统不要修改这个文件的最后访问时间    a 只能向文件添加数据，不能删除更改或者删除    i 设定文件锁定不允许操作</code></pre><h3 id="17-lsattr-option-选项-file-目标-文件"><a href="#17-lsattr-option-选项-file-目标-文件" class="headerlink" title="17,lsattr [option 选项] [file 目标 文件]"></a>17,lsattr [option 选项] [file 目标 文件]</h3><pre><code>-R 递归查看目录的扩展属性-a 显示所有文件包括隐藏文件的扩展属性-d 显示目录的扩展属性</code></pre><h3 id="18-file-option-选项-file-目标-文件"><a href="#18-file-option-选项-file-目标-文件" class="headerlink" title="18,file    [option 选项] [file 目标 文件]"></a>18,file    [option 选项] [file 目标 文件]</h3><pre><code>-b 输出信息使用精简格式</code></pre><h3 id="19-md5sum"><a href="#19-md5sum" class="headerlink" title="19,md5sum"></a>19,md5sum</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-tree&quot;&gt;&lt;a href=&quot;#1-tree&quot; class=&quot;headerlink&quot; title=&quot;1,tree&quot;&gt;&lt;/a&gt;1,tree&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;-d /etc/ 参数表示只显示目录
-f 显示内容的完整
-i 不显示树枝显示完整路径
&lt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
